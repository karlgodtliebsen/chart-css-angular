{"version":3,"sources":["./src/app/chart/multi-data-set-overlay/multi-data-set-overlay.component.ts","./src/app/chart/multi-data-set-overlay/multi-data-set-overlay.component.html","./src/app/examples/bar5/bar5.component.ts","./src/app/examples/bar5/bar5.component.html","./src/environments/environment.ts","./src/app/chart/chart.component.ts","./src/app/chart/chart.component.html","./src/app/examples/bar1/bar1.component.ts","./src/app/examples/bar1/bar1.component.html","./src/app/examples/bar4/bar4.component.ts","./src/app/examples/bar4/bar4.component.html","./src/app/examples/line2/line2.component.ts","./src/app/examples/line2/line2.component.html","./src/app/examples/bar2/bar2.component.ts","./src/app/examples/bar2/bar2.component.html","./src/app/examples/line3/line3.component.ts","./src/app/examples/line3/line3.component.html","./src/app/chart/multi-data-set-side-by-side/multi-data-set-side-by-side.component.ts","./src/app/chart/multi-data-set-side-by-side/multi-data-set-side-by-side.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/chart/chart-base.ts","./src/app/chart/single-data-set/single-data-set.component.ts","./src/app/chart/single-data-set/single-data-set.component.html","./src/app/examples/line1/line1.component.ts","./src/app/examples/line1/line1.component.html","./src/app/app.module.ts","./src/app/examples/bar3/bar3.component.ts","./src/app/examples/bar3/bar3.component.html","./src/main.ts","./src/app/examples/area1/area1.component.ts","./src/app/examples/area1/area1.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ChartData} from '../chart.component';\nimport {ChartBase} from '../chart-base';\n\n@Component({\n  selector: 'app-multi-data-set-overlay',\n  templateUrl: './multi-data-set-overlay.component.html',\n  styleUrls: ['../chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MultiDataSetOverlayComponent extends ChartBase implements OnInit {\n  @Input() chartData: ChartData;\n  @Input() max: number;\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    console.log('MultiDataSetOverlayComponent', this.max , this.chartData);\n  }\n\n}\n","<tbody>\n<tr *ngFor=\"let dataset of chartData.datasets; let dataSetIndex = index\">\n\n  <th *ngIf=\"chartData.labels && chartData.labels.length > dataSetIndex\"\n      scope=\"row\" [class.hide-label]=\"chartData.labels[dataSetIndex].hide\"\n      [ngClass]=\"chartData.labels[dataSetIndex].class\">\n    {{chartData.labels[dataSetIndex].text}}\n    <div *ngIf=\"chartData.labels[dataSetIndex].subClass\" [class]=\"chartData.labels[dataSetIndex].subClass\"></div>\n  </th>\n\n  <th *ngIf=\"dataset.label\"\n      scope=\"row\" [ngClass]=\"dataset.label.class\"> {{dataset.label.text}}\n  </th>\n\n  <td *ngFor=\"let row of dataset.rows; let r = index\"\n      [style.color]=\"row.datacolor\"\n      [style.--size]=\"getSize( row, max )\"\n      [style.--color]=\"getColor(chartData, row, dataSetIndex)\"\n      [style.--start]=\"getStart( row, max )\">\n    <span *ngIf=\"row.data\" class=\"data\">{{row.data}} </span>\n    <span *ngIf=\"row.tooltip\" class=\"tooltip\"> {{row.tooltip}} </span>\n  </td>\n</tr>\n</tbody>\n\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ChartData} from '../../chart/chart.component';\n\n@Component({\n  selector: 'app-bar-5',\n  templateUrl: './bar5.component.html',\n  styleUrls: ['./bar5.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Bar5Component implements OnInit {\n\n  constructor() { }\n\n  chartData: ChartData = {\n    legends: [{text: 'Monthly Expenses', color: 'red'}],\n    // colors: ['red'],\n    headers: ['Year', 'Progress 1', 'Progress 2', 'Progress 3', 'Progress 4', 'Progress 5'],\n    datasets: [\n      {\n        label: {text: '2010', class: 'labelClass'},\n        rows: [\n          {data: '10', value: 10, tooltip: 'tips 10'},\n          {data: '30', value: 30, tooltip: 'tips 30'},\n          {data: '50', value: 50, tooltip: 'tips 50'},\n          {data: '70', value: 70, tooltip: 'tips 70'},\n          {data: '90', value: 90, tooltip: 'tips 90'},\n        ]\n      },\n      {\n        label: {text: '2020', class: 'labelClass'},\n        rows: [\n          {data: '20', value: 20, tooltip: 'tips 20'},\n          {data: '40', value: 40, tooltip: 'tips 40'},\n          {data: '60', value: 60, tooltip: 'tips 60'},\n          {data: '80', value: 80, tooltip: 'tips 80'},\n          {data: '100', value: 100, tooltip: 'tips 100'},\n        ]\n      }]\n  };\n  ngOnInit(): void {\n  }\n\n}\n","<app-chart [chartId]=\"'labels-example-5'\"\n           [type]=\"'column'\"\n           [caption]=\"'Bar 5 Labels Example #5'\"\n           [showData]=\"false\"\n           [showDataOnHover]=\"true\"\n           [legendShape]=\"'legend-square'\"\n           [chartData]=\"chartData\">\n</app-chart>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Input, OnInit, Output, ViewEncapsulation} from '@angular/core';\r\n\r\n\r\nexport type ChartType = 'bar' | 'column' | 'area' | 'pie' | 'donut' | 'polar' | 'radar' | 'mixed' | 'line';\r\nexport type ChartOrientation = '' | 'reverse';\r\nexport type LegendShape = 'legend-circle' | 'legend-ellipse' | 'legend-square' | 'legend-rectangle' | 'legend-rhombus' | 'legend-line';\r\nexport type LabelAlignment = 'labels-align-start' | 'labels-align-center' | 'labels-align-end';\r\n\r\nexport interface ChartData {\r\n  max?: number;\r\n  colors?: string[];\r\n  labels?: string[] | Label[];\r\n  legends?: Legend[];\r\n  datasets?: ChartDataSet[];\r\n  headers?: string[];\r\n}\r\n\r\nexport interface Row {\r\n  datacolor?: string;\r\n  useDefaultColor?: boolean;\r\n  color?: string;\r\n  value: number;\r\n  start?: number;\r\n  data?: string;\r\n  tooltip?: string;\r\n}\r\n\r\nexport interface Legend {\r\n  color?: string;\r\n  text: string;\r\n}\r\n\r\nexport interface Label {\r\n  hide?: boolean;\r\n  text: string;\r\n  class?: string;\r\n  subClass?: string;\r\n}\r\n\r\nexport interface ChartDataSet {\r\n  label?: string | Label;\r\n  rows: Row[] | number[];\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-chart',\r\n  templateUrl: './chart.component.html',\r\n  styleUrls: ['./chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ChartComponent implements OnInit {\r\n  @Input()\r\n  type: ChartType;\r\n\r\n  // caption\r\n  @Input() caption: string;\r\n\r\n  // styling\r\n  @Input() legendStyle: string;\r\n  @Input() captionStyle: string;\r\n\r\n  @Input() chartId: string;\r\n  @Input() showData = false;\r\n  @Input() showDataOnHover = true;\r\n  @Input() legendInline = true;\r\n  @Input() legendShape: LegendShape = 'legend-circle';\r\n\r\n  @Input() orientation: ChartOrientation;\r\n\r\n  @Input() labelAlignment: LabelAlignment = 'labels-align-center';\r\n  @Input() showLabels = true;\r\n  @Input() hideLabelsNth = -1;\r\n\r\n  @Input() showPrimaryAxis = true;\r\n  @Input() showDataAxis = true;\r\n  @Input() stacked = false;\r\n  @Input() multiple = false;\r\n  @Input() nbSecondaryAxis = 0;\r\n  @Input() dataSpacing = 10;\r\n  @Input() dataSetsSpacing = 0;\r\n  @Output() max: number = null;\r\n  @Input() start = 0.0;\r\n\r\n  @Input()  chartData: ChartData;\r\n\r\n  constructor() {\r\n    this.type = 'column';\r\n    this.multiple = false;\r\n    this.chartData = {\r\n      max: null,\r\n      legends: [],\r\n      datasets: [],\r\n    };\r\n  }\r\n\r\n/*\r\n  // @Output()\r\n  get ChartData(): ChartData {\r\n    console.log('get chartdata');\r\n    return this.chartData;\r\n  }\r\n\r\n  // data\r\n // @Input()\r\n  set ChartData(value: ChartData) {\r\n    console.log('set chartdata', value);\r\n    this.chartData = value;\r\n  }\r\n*/\r\n  get tableClasses(): string {\r\n    const c: string[] = [];\r\n    if (Boolean(this.type)) {\r\n      c.push(this.type);\r\n    }\r\n    if (Boolean(this.orientation)) {\r\n      c.push(this.orientation);\r\n    }\r\n    if (Boolean(this.labelAlignment)) {\r\n      c.push(this.labelAlignment);\r\n    }\r\n    if (Boolean(this.multiple)) {\r\n      c.push(`multiple`);\r\n    }\r\n    if (Boolean(this.dataSpacing)) {\r\n      c.push(`data-spacing-${this.dataSpacing}`);\r\n    }\r\n    if (Boolean(this.dataSetsSpacing)) {\r\n      c.push(`datasets-spacing-${this.dataSetsSpacing}`);\r\n    }\r\n    if (Boolean(this.nbSecondaryAxis)) {\r\n      c.push(`show-secondary-${this.nbSecondaryAxis}-axis`);\r\n    }\r\n    return c.join(' ');\r\n  }\r\n\r\n  get legendClasses(): string {\r\n    const c: string[] = [];\r\n    if (Boolean(this.legendShape)) {\r\n      c.push(this.legendShape);\r\n    }\r\n    return c.join(' ');\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    console.log('ngOnInit', this.chartData);\r\n\r\n    if (this.type === 'line') {\r\n      this.dataSpacing = 0;\r\n      this.showDataAxis = false;\r\n    }\r\n\r\n    if (this.type === 'area') {\r\n      this.dataSpacing = 0;\r\n      this.showDataAxis = false;\r\n    }\r\n\r\n    this.adjustLabels();\r\n    this.adjustRowDataAndFindMax();\r\n    if (this.chartData.datasets && this.chartData.datasets.length > 1) {\r\n      this.multiple = true;\r\n    }\r\n  }\r\n\r\n  private adjustLabels(): void {\r\n    if (this.chartData.labels && this.chartData.labels.length > 0) {\r\n      if (typeof this.chartData.labels[0] === 'string') {\r\n        this.chartData.labels = this.convertLabels(this.chartData.labels);\r\n      }\r\n    }\r\n  }\r\n\r\n  private isRowArray(data: Row[] | number[]): data is Row[] {\r\n    return (Array.isArray(data)) && (data as Row[]).length !== undefined;\r\n  }\r\n\r\n  private isNumberArray(data: Row[] | number[]): data is number[] {\r\n    return (Array.isArray(data)) && (data as number[]).length !== undefined;\r\n  }\r\n\r\n  private isRowElement(data: Row | number): data is Row {\r\n    return (data as Row).data !== undefined;\r\n  }\r\n\r\n  private convertRows(dataRows: any[]): Row[] {\r\n    let rows: Row[] = [];\r\n    if (dataRows.length === 0) {\r\n      return rows;\r\n    }\r\n    dataRows.forEach((r) => rows.push({value: r, start: 0.0, data: r.toString(), useDefaultColor: false}));\r\n    rows = this.setStartPositions(rows);\r\n    return rows;\r\n  }\r\n\r\n  private setStartPositions(rows: Row[]): Row[] {\r\n    if (rows.length === 0) {\r\n      return rows;\r\n    }\r\n    rows[0].start = this.start;\r\n    let previous = rows[0].value;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 1; i < rows.length; i++) {\r\n      rows[i].start = previous;\r\n      previous = rows[i].value;\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  private convertLabels(labelSet: any[]): Label[] {\r\n    const labels: Label[] = [];\r\n    labelSet.forEach((l) => labels.push({text: l, hide: false, class: null, subClass: null}));\r\n    const hideLabelN = parseInt(this.hideLabelsNth.toString(), 10);\r\n    if (hideLabelN > -1) {\r\n      let index = -1;\r\n      labels.forEach((l) => {\r\n        if (index % hideLabelN === 0) {\r\n          l.hide = true;\r\n        }\r\n        index++;\r\n      });\r\n    }\r\n    return labels;\r\n  }\r\n\r\n  private adjustRowDataAndFindMax(): void {\r\n    if (this.chartData.datasets && this.chartData.datasets.length > 0) {\r\n      this.chartData.datasets.forEach((dataset) => {\r\n          if (typeof dataset.label === 'string') {\r\n            dataset.label = {\r\n              text: dataset.label,\r\n            };\r\n          }\r\n          if (dataset.rows.length > 0 && !this.isRowElement(dataset.rows[0])) {\r\n            dataset.rows = this.convertRows(dataset.rows);\r\n          }\r\n        }\r\n      );\r\n      this.findMax();\r\n    }\r\n  }\r\n\r\n  private findMax(): void {\r\n    if (this.chartData.datasets.length > 0) {\r\n      if (this.max === null && !this.chartData.max) {\r\n        let m = Number.MIN_SAFE_INTEGER;\r\n        this.chartData.datasets.forEach((dataset) => {\r\n            dataset.rows.forEach((r) => {\r\n              const a: any = r;\r\n              if (m < a.value) {\r\n                m = a.value;\r\n              }\r\n            });\r\n          }\r\n        );\r\n        this.max = m;\r\n      } else {\r\n        if (this.chartData.max) {\r\n          this.max = this.chartData.max;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div id=\"{{chartId}}-container\" class=\"chart-wrapper\" *ngIf=\"chartData.datasets\">\r\n  <ul *ngIf=\"chartData.legends\" class=\"charts-css legend\" [ngClass]=\"legendClasses\"\r\n      [class.legend-inline]=\"legendInline\">\r\n    <li *ngFor=\"let legend of chartData.legends\" [style.color]=\"legend.color\">{{legend.text}}</li>\r\n  </ul>\r\n\r\n  <table id=\"{{chartId}}\" class=\"charts-css chart \" [ngClass]=\"tableClasses\"\r\n         [class.show-heading]=\"caption\"\r\n         [class.show-data]=\"showData\"\r\n         [class.show-data-on-hover]=\"showDataOnHover\"\r\n         [class.show-data-axes]=\"showDataAxis\"\r\n         [class.show-primary-axis]=\"showPrimaryAxis\"\r\n         [class.show-labels]=\"showLabels\"\r\n         [class.show-stacked]=\"stacked\"\r\n  >\r\n    <caption [ngClass]=\"captionStyle\"> {{caption}} </caption>\r\n    <thead>\r\n    <tr>\r\n      <th *ngFor=\"let header of chartData.headers\" scope=\"col\"> {{header}} </th>\r\n    </tr>\r\n    </thead>\r\n    <!--\r\n    <app-multi-data-set-side-by-side  *ngIf=\"multiple\" [chartData]=\"chartData\" [max]=\"max\">\r\n    </app-multi-data-set-side-by-side>\r\n    -->\r\n\r\n    <app-single-data-set  [chartData]=\"chartData\" [max]=\"max\">\r\n    </app-single-data-set>\r\n\r\n\r\n    <!--\r\n    <app-multi-data-set-overlay  *ngIf=\"multiple\"  [chartData]=\"chartData\" [max]=\"max\">\r\n    </app-multi-data-set-overlay>\r\n-->\r\n\r\n  </table>\r\n</div>\r\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {ChartData} from '../../chart/chart.component';\r\n\r\n@Component({\r\n  selector: 'app-bar-1',\r\n  templateUrl: './bar1.component.html',\r\n  styleUrls: ['./bar1.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class Bar1Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  chartData: ChartData = {\r\n    legends: [{text: '# Vaccinations'}, {text: '# Vaccinations'}, {text: '# Vaccinations'}],\r\n    // colors: ['red', 'blue', 'green'],\r\n    labels: ['Asia', 'America' , 'Europe'],\r\n    datasets: [\r\n      {\r\n        rows: [\r\n          {data: '10', value: 10, tooltip: 'tips 10'},\r\n          {data: '20', value: 20, tooltip: 'tips 20',},\r\n          {data: '30', value: 30, tooltip: 'tips 30'},\r\n          {data: '40', value: 40, tooltip: 'tips 40'},\r\n          {data: '50', value: 50, tooltip: 'tips 50'},\r\n          {data: '60', value: 60, tooltip: 'tips 60'},\r\n          {data: '70', value: 70, tooltip: 'tips 70'},\r\n        ]\r\n      },\r\n      {\r\n        rows: [\r\n          {data: '1', value: 21, tooltip: 'tips 1'},\r\n          {data: '2', value: 32, tooltip: 'tips 2'},\r\n          {data: '3', value: 43, tooltip: 'tips 3'},\r\n          {data: '4', value: 54, tooltip: 'tips 4'},\r\n          {data: '5', value: 65, tooltip: 'tips 5'},\r\n          {data: '6', value: 76, tooltip: 'tips 6'},\r\n          {data: '7', value: 87, tooltip: 'tips 7'},\r\n        ]\r\n      },\r\n      {\r\n        rows: [\r\n          {data: '1', value: 100, tooltip: 'tips 100', datacolor: 'white'},\r\n          {data: '2', value: 200, tooltip: 'tips 200', datacolor: 'yellow'},\r\n          {data: '3', value: 300, tooltip: 'tips 300'},\r\n          {data: '4', value: 400, tooltip: 'tips 400'},\r\n          {data: '5', value: 500, tooltip: 'tips 500'},\r\n          {data: '6', value: 600, tooltip: 'tips 600'},\r\n          {data: '7', value: 700, tooltip: 'tips 700'},\r\n        ],\r\n      }],\r\n  };\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<app-chart [chartId]=\"'my-chart'\"\r\n           [type]=\"'column'\"\r\n           [caption]=\"'Bar 1'\"\r\n           [showData]=\"false\"\r\n           [showDataOnHover]=\"true\"\r\n           [legendShape]=\"'legend-circle'\"\r\n           [chartData]=\"chartData\">\r\n</app-chart>\r\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ChartData} from '../../chart/chart.component';\n\n@Component({\n  selector: 'app-bar-4',\n  templateUrl: './bar4.component.html',\n  styleUrls: ['./bar4.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Bar4Component implements OnInit {\n\n  chartData: ChartData = {\n    legends: [{text: 'Monthly Expenses'/*, color: 'red'*/}],\n    // colors: ['red'],\n    headers: ['Year', 'Progress 1', 'Progress 2', 'Progress 3', 'Progress 4', 'Progress 5'],\n    datasets: [\n      {\n        label: '2010',\n        rows: [\n          {data: '10', value: 10, tooltip: 'tips 10'},\n          {data: '30', value: 30, tooltip: 'tips 30'},\n          {data: '50', value: 50, tooltip: 'tips 50'},\n          {data: '70', value: 70, tooltip: 'tips 70'},\n          {data: '90', value: 90, tooltip: 'tips 90'},\n        ]\n      },\n      {\n        label: '2020',\n        rows: [\n          {data: '20', value: 20, tooltip: 'tips 20'},\n          {data: '40', value: 40, tooltip: 'tips 40'},\n          {data: '60', value: 60, tooltip: 'tips 60'},\n          {data: '80', value: 80, tooltip: 'tips 80'},\n          {data: '100', value: 100, tooltip: 'tips 100'},\n        ]\n      }]\n  };\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-chart [chartId]=\"'labels-example-5'\"\n           [type]=\"'column'\"\n           [caption]=\"'Bar 4 Labels Example #5'\"\n           [showData]=\"false\"\n           [showDataOnHover]=\"true\"\n           [legendShape]=\"'legend-circle'\"\n           [chartData]=\"chartData\">\n</app-chart>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ChartData} from '../../chart/chart.component';\n\n@Component({\n  selector: 'app-line-2',\n  templateUrl: './line2.component.html',\n  styleUrls: ['./line2.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Line2Component implements OnInit {\n\n  constructor() { }\n  labels: string[] = [\n    'January 2010',\n    'February 2010',\n    'March 2010',\n    'April 2010',\n    'May 2010',\n    'June 2010',\n    'January 2011',\n    'February 2011',\n    'March 2011',\n    'April 2011',\n    'May 2011',\n    'June 2011',\n    'January 2012',\n    'February 2012',\n    'March 2012',\n    'April 2012',\n    'May 2012',\n    'June 2012',\n    'January 2013',\n    'February 2013',\n    'March 2013',\n    'April 2013',\n    'May 2013',\n    'June 2013',\n  ];\n  data1: number[] = [\n    1940.1,\n    1950.6,\n    1700.4,\n    1600.9,\n    1710.5,\n    1060.4,\n    1290.2,\n    1440.0,\n    1460.0,\n    1350.6,\n    1480.5,\n    1800.4,\n    1600.9,\n    1710.5,\n    1060.4,\n    1290.2,\n    1440.0,\n    1460.0,\n    1350.6,\n    1480.5,\n    1800.4,\n    1940.1,\n    1950.6,\n    1700.4,\n  ];\n  data2: number[] = [\n    1940.1,\n    1950.6,\n    1700.4,\n    1600.9,\n    1710.5,\n    1060.4,\n    1290.2,\n    1440.0,\n    1460.0,\n    1350.6,\n    1480.5,\n    1800.4,\n    1600.9,\n    1710.5,\n    1060.4,\n    1290.2,\n    1440.0,\n    1460.0,\n    1350.6,\n    1480.5,\n    1800.4,\n    1940.1,\n    1950.6,\n    1700.4,\n  ];\n\n  chartData: ChartData = {\n    legends: [{text: 'Monthly Expenses',}],\n    labels: this.labels,\n    datasets: [\n      {\n        rows: this.data1\n      },\n /*     {\n        rows: this.data2\n      }\n*/\n      ]\n  };\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-chart [chartId]=\"'line-chart-2'\"\n           [type]=\"'line'\"\n           [caption]=\"'Line 2 Monthly expenses'\"\n           [showData]=false\n           [showDataOnHover]=\"true\"\n           [legendShape]=\"'legend-line'\"\n           [hideLabelsNth]=\"2\"\n           [dataSpacing]=\"0\"\n           [chartData]=\"chartData\">\n</app-chart>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {ChartData} from '../../chart/chart.component';\r\n\r\n@Component({\r\n  selector: 'app-bar-2',\r\n  templateUrl: './bar2.component.html',\r\n  styleUrls: ['./bar2.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class Bar2Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  chartData: ChartData = {\r\n    legends: [{text: 'Monthly Expenses', color: 'rgb(0,0,0,0.3)'}],\r\n    colors: ['rgb(0,0,0,0.3)'],\r\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n    datasets: [\r\n      {\r\n        rows: [\r\n          {data: '1', value: 10, tooltip: 'tips 10', datacolor: 'blue'},\r\n          {data: '2', value: 20, tooltip: 'tips 20', datacolor: 'yellow'},\r\n          {data: '3', value: 30, tooltip: 'tips 30', color: 'orange'},\r\n          {data: '4', value: 40, tooltip: 'tips 40'},\r\n          {data: '5', value: 50, tooltip: 'tips 50'},\r\n          {data: '6', value: 60, tooltip: 'tips 60'},\r\n          {data: '7', value: 70, tooltip: 'tips 70'},\r\n          {data: '8', value: 80, tooltip: 'tips 80'},\r\n          {data: '9', value: 90, tooltip: 'tips 90'},\r\n          {data: '10', value: 100, tooltip: 'tips 100'},\r\n          {data: '11', value: 110, tooltip: 'tips 110'},\r\n          {data: '12', value: 120, tooltip: 'tips 120'},       ]\r\n      }]\r\n  };\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","<app-chart [chartId]=\"'my-chart2'\"\r\n           [type]=\"'column'\"\r\n           [caption]=\"'Bar 2 Monthly expenses'\"\r\n           [showData]=\"false\"\r\n           [showDataOnHover]=\"true\"\r\n           [legendShape]=\"'legend-circle'\"\r\n           [chartData]=\"chartData\">\r\n</app-chart>\r\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {ChartData, ChartDataSet} from '../../chart/chart.component';\r\n\r\n@Component({\r\n  selector: 'app-line-3',\r\n  templateUrl: './line3.component.html',\r\n  styleUrls: ['./line3.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class Line3Component implements OnInit {\r\n\r\n  constructor() { }\r\n  labels: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n  datasets: ChartDataSet[] = [\r\n    {\r\n\r\n      rows: [65.0, 59.0, 80, 81, 56, 55, 40],\r\n    },\r\n    {\r\n      rows: [28, 48, 40, 19, 86, 27, 90],\r\n    },\r\n  ];\r\n\r\n  chartDataSet: ChartData = {\r\n    max: 100,\r\n    labels: this.labels,\r\n    datasets: this.datasets\r\n  };\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<app-chart [chartId]=\"'line-chart-3'\"\r\n           [type]=\"'line'\"\r\n           [caption]=\"'Line 3 Yearly Something'\"\r\n           [showData]=false\r\n           [showDataOnHover]=\"true\"\r\n           [legendShape]=\"'legend-line'\"\r\n           [dataSpacing]=\"0\"\r\n           [chartData]=\"chartDataSet\">\r\n</app-chart>\r\n","import {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ChartData} from '../chart.component';\nimport {ChartBase} from '../chart-base';\n\n@Component({\n  selector: 'app-multi-data-set-side-by-side',\n  templateUrl: './multi-data-set-side-by-side.component.html',\n  styleUrls: ['../chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MultiDataSetSideBySideComponent  extends ChartBase implements OnInit {\n\n  @Input() chartData: ChartData;\n  @Input() max: number;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    console.log('MultiDataSetSideBySideComponent', this.max , this.chartData);\n  }\n\n}\n","<tbody>\n<tr *ngFor=\"let dataset of chartData.datasets; let dataSetIndex = index\">\n  <th *ngIf=\"chartData.labels && chartData.labels.length > dataSetIndex\"\n      scope=\"row\" [class.hide-label]=\"chartData.labels[dataSetIndex].hide\"\n      [ngClass]=\"chartData.labels[dataSetIndex].class\">\n    {{chartData.labels[dataSetIndex].text}}\n    <div *ngIf=\"chartData.labels[dataSetIndex].subClass\" [class]=\"chartData.labels[dataSetIndex].subClass\"></div>\n  </th>\n\n  <th *ngIf=\"dataset.label\"\n      scope=\"row\" [ngClass]=\"dataset.label.class\"> {{dataset.label.text}}\n  </th>\n\n  <td *ngFor=\"let row of dataset.rows; let r = index\"\n      [style.color]=\"row.datacolor\"\n      [style.--size]=\"getSize( row , max)\"\n      [style.--color]=\"getColor(chartData, row, dataSetIndex)\"\n      [style.--start]=\"getStart( row, max )\">\n    <span *ngIf=\"row.data\" class=\"data\">{{row.data}} </span>\n    <span *ngIf=\"row.tooltip\" class=\"tooltip\"> {{row.tooltip}} </span>\n  </td>\n</tr>\n</tbody>\n\n","import {Component} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-chartcss';\r\n\r\n\r\n}\r\n","<app-bar-2></app-bar-2>\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\n\r\n<app-bar-1></app-bar-1>\r\n<br><p></p>\r\n-->\r\n\r\n\r\n\r\n<!--\r\n<br><p></p>\r\n<app-bar-3></app-bar-3>\r\n<br><p></p>\r\n<app-bar-4></app-bar-4>\r\n<br><p></p>\r\n<app-bar-5></app-bar-5>\r\n\r\n<br><p></p>\r\n<app-line-1></app-line-1>\r\n<br><p></p>\r\n<app-line-2></app-line-2>\r\n\r\n\r\n<br><p></p>\r\n<app-area-1></app-area-1>\r\n\r\n<br><p></p>\r\n<app-line-3></app-line-3>\r\n\r\n-->\r\n","import {ChartData, Row} from './chart.component';\r\n\r\nexport class ChartBase {\r\n\r\n  public getSize(row: Row, max: number): number {\r\n    return row.value / max;\r\n  }\r\n\r\n  public getStart(row: Row, max: number): number {\r\n    if (row.start) {\r\n      return row.start / max;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public getColor(chartData: ChartData, row: Row, index: number): string {\r\n    if (Boolean(row.color)) {\r\n      return row.color;\r\n    }\r\n    if (chartData.colors && chartData.colors.length > index) {\r\n      return chartData.colors[index];\r\n    }\r\n    if (row.useDefaultColor) {\r\n      return `var(--color-${index})`;\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n","import {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ChartData} from '../chart.component';\nimport {ChartBase} from '../chart-base';\n\n@Component({\n  selector: 'app-single-data-set',\n  templateUrl: './single-data-set.component.html',\n  styleUrls: ['../chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SingleDataSetComponent extends ChartBase implements OnInit {\n\n  constructor() {\n    super();\n    console.log('SingleDataSetComponent');\n  }\n  @Input() chartData: ChartData;\n  @Input() max: number;\n\n  ngOnInit(): void {\n    console.log('SingleDataSetComponent', this.max , this.chartData);\n  }\n\n}\n","<tbody>\n<ng-container *ngFor=\"let dataset of chartData.datasets; let dataSetIndex = index\">\n  <tr *ngFor=\"let row of dataset.rows; let r = index\">\n\n    <th *ngIf=\"chartData.labels && chartData.labels.length > dataSetIndex\"\n        scope=\"row\" [class.hide-label]=\"chartData.labels[r].hide\" [ngClass]=\"chartData.labels[r].class\">\n      {{chartData.labels[r].text}}\n      <div *ngIf=\"chartData.labels[r].subClass\" [ngClass]=\"chartData.labels[r].subClass\"></div>\n    </th>\n\n    <th *ngIf=\"dataset.label\"\n        scope=\"row\" [ngClass]=\"dataset.label.class\"> {{dataset.label.text}}\n    </th>\n\n    <td\n      [style.color]=\"row.datacolor\"\n      [style.--size]=\"getSize( row, max )\"\n      [style.--color]=\"getColor(chartData, row, dataSetIndex)\"\n      [style.--start]=\"getStart( row , max)\">\n      <span *ngIf=\"row.data\" class=\"data\">{{row.data}} </span>\n      <span *ngIf=\"row.tooltip\" class=\"tooltip\"> {{row.tooltip}} </span>\n    </td>\n\n  </tr>\n</ng-container>\n</tbody>\n\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {ChartData} from '../../chart/chart.component';\r\n\r\n@Component({\r\n  selector: 'app-line-1',\r\n  templateUrl: './line1.component.html',\r\n  styleUrls: ['./line1.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class Line1Component implements OnInit {\r\n\r\n  labels: string[] = [\r\n    'January 2010',\r\n    'February 2010',\r\n    'March 2010',\r\n    'April 2010',\r\n    'May 2010',\r\n    'June 2010',\r\n    'January 2011',\r\n    'February 2011',\r\n    'March 2011',\r\n    'April 2011',\r\n    'May 2011',\r\n    'June 2011',\r\n    'January 2012',\r\n    'February 2012',\r\n    'March 2012',\r\n    'April 2012',\r\n    'May 2012',\r\n    'June 2012',\r\n    'January 2013',\r\n    'February 2013',\r\n    'March 2013',\r\n    'April 2013',\r\n    'May 2013',\r\n    'June 2013',\r\n  ];\r\n  data: number[] = [\r\n    1940.1,\r\n    1950.6,\r\n    1700.4,\r\n    1600.9,\r\n    1710.5,\r\n    1060.4,\r\n    1290.2,\r\n    1440.0,\r\n    1460.0,\r\n    1350.6,\r\n    1480.5,\r\n    1800.4,\r\n    1600.9,\r\n    1710.5,\r\n    1060.4,\r\n    1290.2,\r\n    1440.0,\r\n    1460.0,\r\n    1350.6,\r\n    1480.5,\r\n    1800.4,\r\n    1940.1,\r\n    1950.6,\r\n    1700.4,\r\n  ];\r\n\r\n  chartData: ChartData = {\r\n    legends: [{text: 'Monthly Expenses', /* color: 'rgb(128,255,128,0.5)'*/}],\r\n    // colors: ['rgb(128,255,128,0.5)'],\r\n    labels: this.labels,\r\n    datasets: [\r\n      {\r\n        rows: this.data\r\n      }]\r\n  };\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-chart [chartId]=\"'line-chart-1'\"\r\n           [type]=\"'line'\"\r\n           [caption]=\"'Line 1 Monthly expenses'\"\r\n           [showData]=false\r\n           [showDataOnHover]=\"true\"\r\n           [legendShape]=\"'legend-line'\"\r\n           [hideLabelsNth]=\"2\"\r\n           [dataSpacing]=\"0\"\r\n           [chartData]=\"chartData\">\r\n</app-chart>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ChartComponent } from './chart/chart.component';\r\nimport { Bar1Component } from './examples/bar1/bar1.component';\r\nimport { Line1Component } from './examples/line1/line1.component';\r\nimport { Bar2Component } from './examples/bar2/bar2.component';\r\nimport { Line3Component } from './examples/line3/line3.component';\r\nimport { Bar3Component } from './examples/bar3/bar3.component';\r\nimport { Bar4Component } from './examples/bar4/bar4.component';\r\nimport { Bar5Component } from './examples/bar5/bar5.component';\r\nimport { Line2Component } from './examples/line2/line2.component';\r\nimport { Area1Component } from './examples/area1/area1.component';\r\n\r\nimport { SingleDataSetComponent } from './chart/single-data-set/single-data-set.component';\r\nimport { MultiDataSetSideBySideComponent } from './chart/multi-data-set-side-by-side/multi-data-set-side-by-side.component';\r\nimport { MultiDataSetOverlayComponent } from './chart/multi-data-set-overlay/multi-data-set-overlay.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChartComponent,\r\n\r\n    Bar1Component,\r\n    Line1Component,\r\n    Bar2Component,\r\n    Line3Component,\r\n    Bar3Component,\r\n    Bar4Component,\r\n    Bar5Component,\r\n    Line2Component,\r\n    Area1Component,\r\n    SingleDataSetComponent,\r\n    MultiDataSetSideBySideComponent,\r\n    MultiDataSetOverlayComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ChartData} from '../../chart/chart.component';\n\n@Component({\n  selector: 'app-bar-3',\n  templateUrl: './bar3.component.html',\n  styleUrls: ['./bar3.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Bar3Component implements OnInit {\n\n  constructor() { }\n\n  chartData: ChartData = {\n    max: 30,\n    headers: ['Day', 'Forecast'],\n    labels: [\n      {text: 'Mon', subClass: 'sun'},\n      {text: 'Tue', subClass: 'sun'},\n      {text: 'Wed', subClass: 'sun'},\n      {text: 'Thu', subClass: 'cloud'},\n      {text: 'Fri', subClass: 'cloud'},\n      {text: 'Sat', subClass: 'cloud'},\n      {text: 'Sun', subClass: 'sun'},\n    ],\n    datasets: [\n      {\n        rows:  [\n          {value: 28, data: '28°'},\n          {value: 25, data: '25°'},\n          {value: 23, data: '23°'},\n          {value: 16, data: '16°'},\n          {value: 14, data: '14°'},\n          {value: 18, data: '18°'},\n          {value: 22, data: '22°'},\n        ]\n\n      }],\n  };\n\n  ngOnInit(): void {\n  }\n}\n","<app-chart [chartId]=\"'labels-example-4'\"\n           [type]=\"'column'\"\n           [caption]=\"'Bar 3 - Labels Example #4'\"\n           [showData]=\"true\"\n           [showDataOnHover]=\"false\"\n           [legendShape]=\"'legend-circle'\"\n           [chartData]=\"chartData\"\n           [dataSpacing]=\"0\"\n>\n</app-chart>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ChartData} from '../../chart/chart.component';\n\n@Component({\n  selector: 'app-area-1',\n  templateUrl: './area1.component.html',\n  styleUrls: ['./area1.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Area1Component implements OnInit {\n\n  constructor() { }\n  labels: string[] = [\n    'January 2010',\n    'February 2010',\n    'March 2010',\n    'April 2010',\n    'May 2010',\n    'June 2010',\n    'January 2011',\n    'February 2011',\n    'March 2011',\n    'April 2011',\n    'May 2011',\n    'June 2011',\n    'January 2012',\n    'February 2012',\n    'March 2012',\n    'April 2012',\n    'May 2012',\n    'June 2012',\n    'January 2013',\n    'February 2013',\n    'March 2013',\n    'April 2013',\n    'May 2013',\n    'June 2013',\n  ];\n  data: number[] = [\n    1940.1,\n    1950.6,\n    1700.4,\n    1600.9,\n    1710.5,\n    1060.4,\n    1290.2,\n    1440.0,\n    1460.0,\n    1350.6,\n    1480.5,\n    1800.4,\n    1600.9,\n    1710.5,\n    1060.4,\n    1290.2,\n    1440.0,\n    1460.0,\n    1350.6,\n    1480.5,\n    1800.4,\n    1940.1,\n    1950.6,\n    1700.4,\n  ];\n\n  chartData: ChartData = {\n    legends: [{text: 'Monthly Expenses', }],\n    labels: this.labels,\n    datasets: [\n      {\n        rows: this.data\n      }]\n  };\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-chart [chartId]=\"'area-chart-1'\"\n           [type]=\"'area'\"\n           [caption]=\"'Area 1 expenses'\"\n           [showData]=false\n           [showDataOnHover]=\"true\"\n           [legendShape]=\"'legend-line'\"\n           [hideLabelsNth]=\"2\"\n           [dataSpacing]=\"0\"\n           [chartData]=\"chartData\">\n</app-chart>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}