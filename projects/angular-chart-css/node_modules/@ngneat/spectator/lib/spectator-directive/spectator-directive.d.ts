import { DebugElement } from '@angular/core';
import { ComponentFixture } from '@angular/core/testing';
import { Token } from '../token';
import { DomSpectator } from '../base/dom-spectator';
import { SpyObject } from '../mock';
import { HostComponent } from '../spectator-host/host-component';
/**
 * @publicApi
 */
export declare class SpectatorDirective<D, H = HostComponent> extends DomSpectator<D> {
    hostComponent: H;
    fixture: ComponentFixture<any>;
    debugElement: DebugElement;
    protected instance: D;
    element: Element;
    constructor(hostComponent: H, fixture: ComponentFixture<any>, debugElement: DebugElement, instance: D, element: Element);
    get directive(): D;
    inject<T>(token: Token<T>, fromDirectiveInjector?: boolean): SpyObject<T>;
    setHostInput<K extends keyof H>(input: Partial<H>): void;
    setHostInput<K extends keyof H>(input: K, inputValue: H[K]): void;
}
