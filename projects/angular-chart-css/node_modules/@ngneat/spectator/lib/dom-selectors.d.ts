import { Matcher, MatcherOptions, SelectorMatcherOptions, ByRoleOptions } from '@testing-library/dom';
interface MandatorySelectorMatchingOptions extends MatcherOptions {
    selector: SelectorMatcherOptions['selector'];
}
export declare class DOMSelector {
    readonly execute: (el: HTMLElement) => HTMLElement[];
    constructor(execute: (el: HTMLElement) => HTMLElement[]);
}
export declare type DOMSelectorFactory<TOptions extends MatcherOptions = MatcherOptions> = (matcher: Matcher, options?: TOptions) => DOMSelector;
export declare const byLabel: DOMSelectorFactory;
export declare const byPlaceholder: DOMSelectorFactory;
export declare const byText: DOMSelectorFactory<SelectorMatcherOptions>;
export declare const byTextContent: (matcher: Matcher, options: MandatorySelectorMatchingOptions) => DOMSelector;
export declare const byAltText: DOMSelectorFactory;
export declare const byTitle: DOMSelectorFactory;
export declare const byTestId: DOMSelectorFactory;
export declare const byValue: DOMSelectorFactory;
export declare const byRole: DOMSelectorFactory<ByRoleOptions>;
export {};
