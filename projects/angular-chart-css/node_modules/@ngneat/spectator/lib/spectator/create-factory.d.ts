import { Type } from '@angular/core';
import { BaseSpectatorOptions, BaseSpectatorOverrides } from '../base/options';
import { SpectatorOptions } from './options';
import { Spectator } from './spectator';
/**
 * @publicApi
 */
export declare type SpectatorFactory<C> = (options?: SpectatorOverrides<C>) => Spectator<C>;
/**
 * @publicApi
 */
export interface SpectatorOverrides<C> extends BaseSpectatorOverrides {
    detectChanges?: boolean;
    props?: Partial<C>;
}
/**
 * @internal
 */
export declare function overrideComponentIfProviderOverridesSpecified<C>(options: Required<SpectatorOptions<C>>): void;
/**
 * @internal
 */
export declare function overrideModules(options: Required<BaseSpectatorOptions>): void;
/**
 * @publicApi
 */
export declare function createComponentFactory<C>(typeOrOptions: Type<C> | SpectatorOptions<C>): SpectatorFactory<C>;
