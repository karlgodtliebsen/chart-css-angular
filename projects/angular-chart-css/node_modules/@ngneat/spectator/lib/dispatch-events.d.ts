/**
 * Credit - Angular Material
 */
import { KeyboardEventOptions } from './types';
/**
 * Utility to dispatch any event on a Node.
 *
 * @publicApi
 */
export declare function dispatchEvent<E extends Event = Event>(node: Node | Window, event: E): E;
/**
 * Shorthand to dispatch a fake event on a specified node.
 *
 * dispatchFakeEvent(element, 'mousedown');
 *
 * @publicApi
 */
export declare function dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event;
/**
 * Shorthand to dispatch a keyboard event with a specified key.
 *
 *  dispatchKeyboardEvent(calendarBodyEl, 'keydown', 'LEFT_ARROW');
 *
 *  @publicApi
 */
export declare function dispatchKeyboardEvent(node: Node, type: string, keyOrKeyCode: string | number | KeyboardEventOptions, target?: Element): KeyboardEvent;
/**
 * Shorthand to dispatch a mouse event on the specified coordinates.
 *
 *  dispatchMouseEvent(rippleTarget, 'mousedown', 50, 75);
 *  dispatchMouseEvent(rippleTarget, 'mouseup');
 *
 *  @publicApi
 */
export declare function dispatchMouseEvent(node: Node, type: string, x?: number, y?: number, event?: MouseEvent): MouseEvent;
/**
 * Shorthand to dispatch a touch event on the specified coordinates.
 *
 * dispatchTouchEvent(rippleTarget, 'touchstart');
 *
 * @publicApi
 */
export declare function dispatchTouchEvent(node: HTMLElement | Window | Document, type: string, x?: number, y?: number): Event;
