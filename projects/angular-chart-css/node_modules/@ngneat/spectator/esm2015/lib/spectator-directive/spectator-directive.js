import { setProps } from '../internals/query';
import { DomSpectator } from '../base/dom-spectator';
/**
 * @publicApi
 */
export class SpectatorDirective extends DomSpectator {
    constructor(hostComponent, fixture, debugElement, instance, element) {
        super(fixture, debugElement, instance, element);
        this.hostComponent = hostComponent;
        this.fixture = fixture;
        this.debugElement = debugElement;
        this.instance = instance;
        this.element = element;
    }
    get directive() {
        return this.instance;
    }
    inject(token, fromDirectiveInjector = false) {
        if (fromDirectiveInjector) {
            return this.debugElement.injector.get(token);
        }
        return super.inject(token);
    }
    setHostInput(input, value) {
        setProps(this.hostComponent, input, value, false);
        this.detectChanges();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlY3RhdG9yLWRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3NwZWN0YXRvci9zcmMvbGliL3NwZWN0YXRvci1kaXJlY3RpdmUvc3BlY3RhdG9yLWRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFOUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBSXJEOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGtCQUF5QyxTQUFRLFlBQWU7SUFDM0UsWUFDUyxhQUFnQixFQUNoQixPQUE4QixFQUM5QixZQUEwQixFQUN2QixRQUFXLEVBQ2QsT0FBZ0I7UUFFdkIsS0FBSyxDQUFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBTnpDLGtCQUFhLEdBQWIsYUFBYSxDQUFHO1FBQ2hCLFlBQU8sR0FBUCxPQUFPLENBQXVCO1FBQzlCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQ3ZCLGFBQVEsR0FBUixRQUFRLENBQUc7UUFDZCxZQUFPLEdBQVAsT0FBTyxDQUFTO0lBR3pCLENBQUM7SUFFRCxJQUFXLFNBQVM7UUFDbEIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxNQUFNLENBQUksS0FBZSxFQUFFLHdCQUFpQyxLQUFLO1FBQ3RFLElBQUkscUJBQXFCLEVBQUU7WUFDekIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFpQixDQUFDO1NBQzlEO1FBRUQsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFJTSxZQUFZLENBQUMsS0FBVSxFQUFFLEtBQVc7UUFDekMsUUFBUSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGVidWdFbGVtZW50LCBJbmplY3Rpb25Ub2tlbiwgVHlwZSwgQWJzdHJhY3RUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21wb25lbnRGaXh0dXJlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZS90ZXN0aW5nJztcblxuaW1wb3J0IHsgc2V0UHJvcHMgfSBmcm9tICcuLi9pbnRlcm5hbHMvcXVlcnknO1xuaW1wb3J0IHsgVG9rZW4gfSBmcm9tICcuLi90b2tlbic7XG5pbXBvcnQgeyBEb21TcGVjdGF0b3IgfSBmcm9tICcuLi9iYXNlL2RvbS1zcGVjdGF0b3InO1xuaW1wb3J0IHsgU3B5T2JqZWN0IH0gZnJvbSAnLi4vbW9jayc7XG5pbXBvcnQgeyBIb3N0Q29tcG9uZW50IH0gZnJvbSAnLi4vc3BlY3RhdG9yLWhvc3QvaG9zdC1jb21wb25lbnQnO1xuXG4vKipcbiAqIEBwdWJsaWNBcGlcbiAqL1xuZXhwb3J0IGNsYXNzIFNwZWN0YXRvckRpcmVjdGl2ZTxELCBIID0gSG9zdENvbXBvbmVudD4gZXh0ZW5kcyBEb21TcGVjdGF0b3I8RD4ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgaG9zdENvbXBvbmVudDogSCxcbiAgICBwdWJsaWMgZml4dHVyZTogQ29tcG9uZW50Rml4dHVyZTxhbnk+LFxuICAgIHB1YmxpYyBkZWJ1Z0VsZW1lbnQ6IERlYnVnRWxlbWVudCxcbiAgICBwcm90ZWN0ZWQgaW5zdGFuY2U6IEQsXG4gICAgcHVibGljIGVsZW1lbnQ6IEVsZW1lbnRcbiAgKSB7XG4gICAgc3VwZXIoZml4dHVyZSwgZGVidWdFbGVtZW50LCBpbnN0YW5jZSwgZWxlbWVudCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGRpcmVjdGl2ZSgpOiBEIHtcbiAgICByZXR1cm4gdGhpcy5pbnN0YW5jZTtcbiAgfVxuXG4gIHB1YmxpYyBpbmplY3Q8VD4odG9rZW46IFRva2VuPFQ+LCBmcm9tRGlyZWN0aXZlSW5qZWN0b3I6IGJvb2xlYW4gPSBmYWxzZSk6IFNweU9iamVjdDxUPiB7XG4gICAgaWYgKGZyb21EaXJlY3RpdmVJbmplY3Rvcikge1xuICAgICAgcmV0dXJuIHRoaXMuZGVidWdFbGVtZW50LmluamVjdG9yLmdldCh0b2tlbikgYXMgU3B5T2JqZWN0PFQ+O1xuICAgIH1cblxuICAgIHJldHVybiBzdXBlci5pbmplY3QodG9rZW4pO1xuICB9XG5cbiAgcHVibGljIHNldEhvc3RJbnB1dDxLIGV4dGVuZHMga2V5b2YgSD4oaW5wdXQ6IFBhcnRpYWw8SD4pOiB2b2lkO1xuICBwdWJsaWMgc2V0SG9zdElucHV0PEsgZXh0ZW5kcyBrZXlvZiBIPihpbnB1dDogSywgaW5wdXRWYWx1ZTogSFtLXSk6IHZvaWQ7XG4gIHB1YmxpYyBzZXRIb3N0SW5wdXQoaW5wdXQ6IGFueSwgdmFsdWU/OiBhbnkpOiB2b2lkIHtcbiAgICBzZXRQcm9wcyh0aGlzLmhvc3RDb21wb25lbnQsIGlucHV0LCB2YWx1ZSwgZmFsc2UpO1xuICAgIHRoaXMuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG59XG4iXX0=