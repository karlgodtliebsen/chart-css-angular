import { ChangeDetectorRef } from '@angular/core';
import { DomSpectator } from '../base/dom-spectator';
/**
 * @publicApi
 */
export class Spectator extends DomSpectator {
    constructor(fixture, debugElement, instance, element) {
        super(fixture, debugElement, instance, element);
        this.fixture = fixture;
        this.debugElement = debugElement;
        this.instance = instance;
        this.element = element;
    }
    get component() {
        return this.instance;
    }
    inject(token, fromComponentInjector = false) {
        if (fromComponentInjector) {
            return this.debugElement.injector.get(token);
        }
        return super.inject(token);
    }
    detectComponentChanges() {
        if (this.debugElement) {
            this.debugElement.injector.get(ChangeDetectorRef).detectChanges();
        }
        else {
            this.detectChanges();
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlY3RhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc3BlY3RhdG9yL3NyYy9saWIvc3BlY3RhdG9yL3NwZWN0YXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQW9ELE1BQU0sZUFBZSxDQUFDO0FBS3BHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUVyRDs7R0FFRztBQUNILE1BQU0sT0FBTyxTQUFhLFNBQVEsWUFBZTtJQUMvQyxZQUFtQixPQUE0QixFQUFTLFlBQTBCLEVBQVksUUFBVyxFQUFTLE9BQW9CO1FBQ3BJLEtBQUssQ0FBQyxPQUFPLEVBQUUsWUFBWSxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUQvQixZQUFPLEdBQVAsT0FBTyxDQUFxQjtRQUFTLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQVksYUFBUSxHQUFSLFFBQVEsQ0FBRztRQUFTLFlBQU8sR0FBUCxPQUFPLENBQWE7SUFFdEksQ0FBQztJQUVELElBQVcsU0FBUztRQUNsQixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUVNLE1BQU0sQ0FBSSxLQUFlLEVBQUUsd0JBQWlDLEtBQUs7UUFDdEUsSUFBSSxxQkFBcUIsRUFBRTtZQUN6QixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQWlCLENBQUM7U0FDOUQ7UUFFRCxPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVNLHNCQUFzQjtRQUMzQixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDckIsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLENBQUMsYUFBYSxFQUFFLENBQUM7U0FDbkU7YUFBTTtZQUNMLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztTQUN0QjtJQUNILENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBEZWJ1Z0VsZW1lbnQsIEluamVjdGlvblRva2VuLCBUeXBlLCBBYnN0cmFjdFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbXBvbmVudEZpeHR1cmUgfSBmcm9tICdAYW5ndWxhci9jb3JlL3Rlc3RpbmcnO1xuXG5pbXBvcnQgeyBTcHlPYmplY3QgfSBmcm9tICcuLi9tb2NrJztcbmltcG9ydCB7IFRva2VuIH0gZnJvbSAnLi4vdG9rZW4nO1xuaW1wb3J0IHsgRG9tU3BlY3RhdG9yIH0gZnJvbSAnLi4vYmFzZS9kb20tc3BlY3RhdG9yJztcblxuLyoqXG4gKiBAcHVibGljQXBpXG4gKi9cbmV4cG9ydCBjbGFzcyBTcGVjdGF0b3I8Qz4gZXh0ZW5kcyBEb21TcGVjdGF0b3I8Qz4ge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgZml4dHVyZTogQ29tcG9uZW50Rml4dHVyZTxDPiwgcHVibGljIGRlYnVnRWxlbWVudDogRGVidWdFbGVtZW50LCBwcm90ZWN0ZWQgaW5zdGFuY2U6IEMsIHB1YmxpYyBlbGVtZW50OiBIVE1MRWxlbWVudCkge1xuICAgIHN1cGVyKGZpeHR1cmUsIGRlYnVnRWxlbWVudCwgaW5zdGFuY2UsIGVsZW1lbnQpO1xuICB9XG5cbiAgcHVibGljIGdldCBjb21wb25lbnQoKTogQyB7XG4gICAgcmV0dXJuIHRoaXMuaW5zdGFuY2U7XG4gIH1cblxuICBwdWJsaWMgaW5qZWN0PFQ+KHRva2VuOiBUb2tlbjxUPiwgZnJvbUNvbXBvbmVudEluamVjdG9yOiBib29sZWFuID0gZmFsc2UpOiBTcHlPYmplY3Q8VD4ge1xuICAgIGlmIChmcm9tQ29tcG9uZW50SW5qZWN0b3IpIHtcbiAgICAgIHJldHVybiB0aGlzLmRlYnVnRWxlbWVudC5pbmplY3Rvci5nZXQodG9rZW4pIGFzIFNweU9iamVjdDxUPjtcbiAgICB9XG5cbiAgICByZXR1cm4gc3VwZXIuaW5qZWN0KHRva2VuKTtcbiAgfVxuXG4gIHB1YmxpYyBkZXRlY3RDb21wb25lbnRDaGFuZ2VzKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmRlYnVnRWxlbWVudCkge1xuICAgICAgdGhpcy5kZWJ1Z0VsZW1lbnQuaW5qZWN0b3IuZ2V0KENoYW5nZURldGVjdG9yUmVmKS5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGV0ZWN0Q2hhbmdlcygpO1xuICAgIH1cbiAgfVxufVxuIl19