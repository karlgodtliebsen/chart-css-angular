import { getChildren, setProps } from '../internals/query';
import { Spectator } from '../spectator/spectator';
import { isString } from '../types';
/**
 * @publicApi
 */
export class SpectatorHost extends Spectator {
    constructor(hostComponent, hostDebugElement, hostElement, hostFixture, debugElement, componentInstance, element) {
        super(hostFixture, debugElement, componentInstance, element);
        this.hostComponent = hostComponent;
        this.hostDebugElement = hostDebugElement;
        this.hostElement = hostElement;
        this.hostFixture = hostFixture;
        this.debugElement = debugElement;
        this.element = element;
    }
    queryHost(directiveOrSelector, options) {
        if ((options || {}).root && isString(directiveOrSelector)) {
            return document.querySelector(directiveOrSelector);
        }
        return getChildren(this.hostDebugElement)(directiveOrSelector, options)[0] || null;
    }
    queryHostAll(directiveOrSelector, options) {
        if ((options || {}).root && isString(directiveOrSelector)) {
            return Array.from(document.querySelectorAll(directiveOrSelector));
        }
        return getChildren(this.hostDebugElement)(directiveOrSelector, options);
    }
    setHostInput(input, value) {
        setProps(this.hostComponent, input, value, false);
        this.detectChanges();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlY3RhdG9yLWhvc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zcGVjdGF0b3Ivc3JjL2xpYi9zcGVjdGF0b3ItaG9zdC9zcGVjdGF0b3ItaG9zdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxPQUFPLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzNELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUVuRCxPQUFPLEVBQUUsUUFBUSxFQUEyQixNQUFNLFVBQVUsQ0FBQztBQUk3RDs7R0FFRztBQUNILE1BQU0sT0FBTyxhQUFvQyxTQUFRLFNBQVk7SUFDbkUsWUFDUyxhQUFnQixFQUNoQixnQkFBOEIsRUFDOUIsV0FBb0IsRUFDcEIsV0FBa0MsRUFDbEMsWUFBMEIsRUFDakMsaUJBQW9CLEVBQ2IsT0FBb0I7UUFFM0IsS0FBSyxDQUFDLFdBQVcsRUFBRSxZQUFZLEVBQUUsaUJBQWlCLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFSdEQsa0JBQWEsR0FBYixhQUFhLENBQUc7UUFDaEIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFjO1FBQzlCLGdCQUFXLEdBQVgsV0FBVyxDQUFTO1FBQ3BCLGdCQUFXLEdBQVgsV0FBVyxDQUF1QjtRQUNsQyxpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUUxQixZQUFPLEdBQVAsT0FBTyxDQUFhO0lBRzdCLENBQUM7SUFLTSxTQUFTLENBQUksbUJBQThCLEVBQUUsT0FBeUI7UUFDM0UsSUFBSSxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDLG1CQUFtQixDQUFDLEVBQUU7WUFDekQsT0FBTyxRQUFRLENBQUMsYUFBYSxDQUFDLG1CQUFtQixDQUFDLENBQUM7U0FDcEQ7UUFFRCxPQUFPLFdBQVcsQ0FBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxtQkFBbUIsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUM7SUFDeEYsQ0FBQztJQUtNLFlBQVksQ0FBSSxtQkFBOEIsRUFBRSxPQUF5QjtRQUM5RSxJQUFJLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxRQUFRLENBQUMsbUJBQW1CLENBQUMsRUFBRTtZQUN6RCxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQztTQUNuRTtRQUVELE9BQU8sV0FBVyxDQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLG1CQUFtQixFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzdFLENBQUM7SUFJTSxZQUFZLENBQUMsS0FBVSxFQUFFLEtBQVc7UUFDekMsUUFBUSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGVidWdFbGVtZW50LCBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21wb25lbnRGaXh0dXJlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZS90ZXN0aW5nJztcblxuaW1wb3J0IHsgRE9NU2VsZWN0b3IgfSBmcm9tICcuLi9kb20tc2VsZWN0b3JzJztcbmltcG9ydCB7IGdldENoaWxkcmVuLCBzZXRQcm9wcyB9IGZyb20gJy4uL2ludGVybmFscy9xdWVyeSc7XG5pbXBvcnQgeyBTcGVjdGF0b3IgfSBmcm9tICcuLi9zcGVjdGF0b3Ivc3BlY3RhdG9yJztcbmltcG9ydCB7IFRva2VuIH0gZnJvbSAnLi4vdG9rZW4nO1xuaW1wb3J0IHsgaXNTdHJpbmcsIFF1ZXJ5T3B0aW9ucywgUXVlcnlUeXBlIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5pbXBvcnQgeyBIb3N0Q29tcG9uZW50IH0gZnJvbSAnLi9ob3N0LWNvbXBvbmVudCc7XG5cbi8qKlxuICogQHB1YmxpY0FwaVxuICovXG5leHBvcnQgY2xhc3MgU3BlY3RhdG9ySG9zdDxDLCBIID0gSG9zdENvbXBvbmVudD4gZXh0ZW5kcyBTcGVjdGF0b3I8Qz4ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgaG9zdENvbXBvbmVudDogSCxcbiAgICBwdWJsaWMgaG9zdERlYnVnRWxlbWVudDogRGVidWdFbGVtZW50LFxuICAgIHB1YmxpYyBob3N0RWxlbWVudDogRWxlbWVudCxcbiAgICBwdWJsaWMgaG9zdEZpeHR1cmU6IENvbXBvbmVudEZpeHR1cmU8YW55PixcbiAgICBwdWJsaWMgZGVidWdFbGVtZW50OiBEZWJ1Z0VsZW1lbnQsXG4gICAgY29tcG9uZW50SW5zdGFuY2U6IEMsXG4gICAgcHVibGljIGVsZW1lbnQ6IEhUTUxFbGVtZW50XG4gICkge1xuICAgIHN1cGVyKGhvc3RGaXh0dXJlLCBkZWJ1Z0VsZW1lbnQsIGNvbXBvbmVudEluc3RhbmNlLCBlbGVtZW50KTtcbiAgfVxuXG4gIHB1YmxpYyBxdWVyeUhvc3Q8UiBleHRlbmRzIEVsZW1lbnQ+KHNlbGVjdG9yOiBzdHJpbmcgfCBET01TZWxlY3Rvciwgb3B0aW9ucz86IHsgcm9vdDogYm9vbGVhbiB9KTogUiB8IG51bGw7XG4gIHB1YmxpYyBxdWVyeUhvc3Q8Uj4oZGlyZWN0aXZlOiBUeXBlPFI+KTogUiB8IG51bGw7XG4gIHB1YmxpYyBxdWVyeUhvc3Q8Uj4oZGlyZWN0aXZlT3JTZWxlY3RvcjogVHlwZTxhbnk+IHwgc3RyaW5nLCBvcHRpb25zOiB7IHJlYWQ6IFRva2VuPFI+IH0pOiBSIHwgbnVsbDtcbiAgcHVibGljIHF1ZXJ5SG9zdDxSPihkaXJlY3RpdmVPclNlbGVjdG9yOiBRdWVyeVR5cGUsIG9wdGlvbnM/OiBRdWVyeU9wdGlvbnM8Uj4pOiBSIHwgRWxlbWVudCB8IG51bGwge1xuICAgIGlmICgob3B0aW9ucyB8fCB7fSkucm9vdCAmJiBpc1N0cmluZyhkaXJlY3RpdmVPclNlbGVjdG9yKSkge1xuICAgICAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZGlyZWN0aXZlT3JTZWxlY3Rvcik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGdldENoaWxkcmVuPFI+KHRoaXMuaG9zdERlYnVnRWxlbWVudCkoZGlyZWN0aXZlT3JTZWxlY3Rvciwgb3B0aW9ucylbMF0gfHwgbnVsbDtcbiAgfVxuXG4gIHB1YmxpYyBxdWVyeUhvc3RBbGw8UiBleHRlbmRzIEVsZW1lbnQ+KHNlbGVjdG9yOiBzdHJpbmcgfCBET01TZWxlY3Rvciwgb3B0aW9ucz86IHsgcm9vdDogYm9vbGVhbiB9KTogUltdO1xuICBwdWJsaWMgcXVlcnlIb3N0QWxsPFI+KGRpcmVjdGl2ZTogVHlwZTxSPik6IFJbXTtcbiAgcHVibGljIHF1ZXJ5SG9zdEFsbDxSPihkaXJlY3RpdmVPclNlbGVjdG9yOiBUeXBlPGFueT4gfCBzdHJpbmcsIG9wdGlvbnM6IHsgcmVhZDogVG9rZW48Uj4gfSk6IFJbXTtcbiAgcHVibGljIHF1ZXJ5SG9zdEFsbDxSPihkaXJlY3RpdmVPclNlbGVjdG9yOiBRdWVyeVR5cGUsIG9wdGlvbnM/OiBRdWVyeU9wdGlvbnM8Uj4pOiBSW10gfCBFbGVtZW50W10ge1xuICAgIGlmICgob3B0aW9ucyB8fCB7fSkucm9vdCAmJiBpc1N0cmluZyhkaXJlY3RpdmVPclNlbGVjdG9yKSkge1xuICAgICAgcmV0dXJuIEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChkaXJlY3RpdmVPclNlbGVjdG9yKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGdldENoaWxkcmVuPFI+KHRoaXMuaG9zdERlYnVnRWxlbWVudCkoZGlyZWN0aXZlT3JTZWxlY3Rvciwgb3B0aW9ucyk7XG4gIH1cblxuICBwdWJsaWMgc2V0SG9zdElucHV0PEsgZXh0ZW5kcyBrZXlvZiBIPihpbnB1dDogUGFydGlhbDxIPik6IHZvaWQ7XG4gIHB1YmxpYyBzZXRIb3N0SW5wdXQ8SyBleHRlbmRzIGtleW9mIEg+KGlucHV0OiBLLCBpbnB1dFZhbHVlOiBIW0tdKTogdm9pZDtcbiAgcHVibGljIHNldEhvc3RJbnB1dChpbnB1dDogYW55LCB2YWx1ZT86IGFueSk6IHZvaWQge1xuICAgIHNldFByb3BzKHRoaXMuaG9zdENvbXBvbmVudCwgaW5wdXQsIHZhbHVlLCBmYWxzZSk7XG4gICAgdGhpcy5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cbn1cbiJdfQ==