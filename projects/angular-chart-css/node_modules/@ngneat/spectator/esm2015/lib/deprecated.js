import { Component, EventEmitter, Directive } from '@angular/core';
export function MockComponentDeprecated(options) {
    const metadata = {
        selector: options.selector,
        template: options.template || '',
        inputs: options.inputs,
        outputs: options.outputs || [],
        exportAs: options.exportAs || ''
    };
    class Mock {
    }
    metadata.outputs.forEach(method => {
        Mock.prototype[method] = new EventEmitter();
    });
    return Component(metadata)(Mock);
}
export function MockDirectiveDeprecated(options) {
    const metadata = {
        selector: options.selector,
        inputs: options.inputs,
        outputs: options.outputs || [],
        exportAs: options.exportAs || ''
    };
    class Mock {
    }
    metadata.outputs.forEach(method => {
        Mock.prototype[method] = new EventEmitter();
    });
    return Directive(metadata)(Mock);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwcmVjYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3NwZWN0YXRvci9zcmMvbGliL2RlcHJlY2F0ZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRW5FLE1BQU0sVUFBVSx1QkFBdUIsQ0FBQyxPQUFrQjtJQUN4RCxNQUFNLFFBQVEsR0FBYztRQUMxQixRQUFRLEVBQUUsT0FBTyxDQUFDLFFBQVE7UUFDMUIsUUFBUSxFQUFFLE9BQU8sQ0FBQyxRQUFRLElBQUksRUFBRTtRQUNoQyxNQUFNLEVBQUUsT0FBTyxDQUFDLE1BQU07UUFDdEIsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPLElBQUksRUFBRTtRQUM5QixRQUFRLEVBQUUsT0FBTyxDQUFDLFFBQVEsSUFBSSxFQUFFO0tBQ2pDLENBQUM7SUFFRixNQUFNLElBQUk7S0FBRztJQUVaLFFBQWdCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUN6QyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFDbkQsQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFXLENBQUMsQ0FBQztBQUMxQyxDQUFDO0FBRUQsTUFBTSxVQUFVLHVCQUF1QixDQUFDLE9BQWtCO0lBQ3hELE1BQU0sUUFBUSxHQUFjO1FBQzFCLFFBQVEsRUFBRSxPQUFPLENBQUMsUUFBUTtRQUMxQixNQUFNLEVBQUUsT0FBTyxDQUFDLE1BQU07UUFDdEIsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPLElBQUksRUFBRTtRQUM5QixRQUFRLEVBQUUsT0FBTyxDQUFDLFFBQVEsSUFBSSxFQUFFO0tBQ2pDLENBQUM7SUFFRixNQUFNLElBQUk7S0FBRztJQUVaLFFBQWdCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUN6QyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFDbkQsQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFXLENBQUMsQ0FBQztBQUMxQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gTW9ja0NvbXBvbmVudERlcHJlY2F0ZWQob3B0aW9uczogQ29tcG9uZW50KTogQ29tcG9uZW50IHtcbiAgY29uc3QgbWV0YWRhdGE6IENvbXBvbmVudCA9IHtcbiAgICBzZWxlY3Rvcjogb3B0aW9ucy5zZWxlY3RvcixcbiAgICB0ZW1wbGF0ZTogb3B0aW9ucy50ZW1wbGF0ZSB8fCAnJyxcbiAgICBpbnB1dHM6IG9wdGlvbnMuaW5wdXRzLFxuICAgIG91dHB1dHM6IG9wdGlvbnMub3V0cHV0cyB8fCBbXSxcbiAgICBleHBvcnRBczogb3B0aW9ucy5leHBvcnRBcyB8fCAnJ1xuICB9O1xuXG4gIGNsYXNzIE1vY2sge31cblxuICAobWV0YWRhdGEgYXMgYW55KS5vdXRwdXRzLmZvckVhY2gobWV0aG9kID0+IHtcbiAgICBNb2NrLnByb3RvdHlwZVttZXRob2RdID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIH0pO1xuXG4gIHJldHVybiBDb21wb25lbnQobWV0YWRhdGEpKE1vY2sgYXMgYW55KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIE1vY2tEaXJlY3RpdmVEZXByZWNhdGVkKG9wdGlvbnM6IERpcmVjdGl2ZSk6IERpcmVjdGl2ZSB7XG4gIGNvbnN0IG1ldGFkYXRhOiBEaXJlY3RpdmUgPSB7XG4gICAgc2VsZWN0b3I6IG9wdGlvbnMuc2VsZWN0b3IsXG4gICAgaW5wdXRzOiBvcHRpb25zLmlucHV0cyxcbiAgICBvdXRwdXRzOiBvcHRpb25zLm91dHB1dHMgfHwgW10sXG4gICAgZXhwb3J0QXM6IG9wdGlvbnMuZXhwb3J0QXMgfHwgJydcbiAgfTtcblxuICBjbGFzcyBNb2NrIHt9XG5cbiAgKG1ldGFkYXRhIGFzIGFueSkub3V0cHV0cy5mb3JFYWNoKG1ldGhvZCA9PiB7XG4gICAgTW9jay5wcm90b3R5cGVbbWV0aG9kXSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICB9KTtcblxuICByZXR1cm4gRGlyZWN0aXZlKG1ldGFkYXRhKShNb2NrIGFzIGFueSk7XG59XG4iXX0=