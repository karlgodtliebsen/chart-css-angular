import { createHostFactory as baseCreateHostFactory, isType, SpectatorHost as BaseSpectatorHost } from '@ngneat/spectator';
import { mockProvider } from './mock';
/**
 * @publicApi
 */
export class SpectatorHost extends BaseSpectatorHost {
    inject(token, fromComponentInjector = false) {
        return super.inject(token, fromComponentInjector);
    }
}
export function createHostFactory(typeOrOptions) {
    return baseCreateHostFactory(Object.assign({ mockProvider }, (isType(typeOrOptions) ? { component: typeOrOptions } : typeOrOptions)));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlY3RhdG9yLWhvc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zcGVjdGF0b3IvamVzdC9zcmMvbGliL3NwZWN0YXRvci1ob3N0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFDTCxpQkFBaUIsSUFBSSxxQkFBcUIsRUFDMUMsTUFBTSxFQUVOLGFBQWEsSUFBSSxpQkFBaUIsRUFJbkMsTUFBTSxtQkFBbUIsQ0FBQztBQUUzQixPQUFPLEVBQUUsWUFBWSxFQUFhLE1BQU0sUUFBUSxDQUFDO0FBRWpEOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGFBQW9DLFNBQVEsaUJBQXVCO0lBQ3ZFLE1BQU0sQ0FBSSxLQUFlLEVBQUUsd0JBQWlDLEtBQUs7UUFDdEUsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxxQkFBcUIsQ0FBaUIsQ0FBQztJQUNwRSxDQUFDO0NBQ0Y7QUE0QkQsTUFBTSxVQUFVLGlCQUFpQixDQUF1QixhQUFtRDtJQUN6RyxPQUFPLHFCQUFxQixpQkFDMUIsWUFBWSxJQUNULENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxhQUFhLEVBQUUsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLEVBQzNDLENBQUM7QUFDbkMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIGNyZWF0ZUhvc3RGYWN0b3J5IGFzIGJhc2VDcmVhdGVIb3N0RmFjdG9yeSxcbiAgaXNUeXBlLFxuICBIb3N0Q29tcG9uZW50LFxuICBTcGVjdGF0b3JIb3N0IGFzIEJhc2VTcGVjdGF0b3JIb3N0LFxuICBTcGVjdGF0b3JIb3N0T3B0aW9ucyxcbiAgU3BlY3RhdG9ySG9zdE92ZXJyaWRlcyxcbiAgVG9rZW5cbn0gZnJvbSAnQG5nbmVhdC9zcGVjdGF0b3InO1xuXG5pbXBvcnQgeyBtb2NrUHJvdmlkZXIsIFNweU9iamVjdCB9IGZyb20gJy4vbW9jayc7XG5cbi8qKlxuICogQHB1YmxpY0FwaVxuICovXG5leHBvcnQgY2xhc3MgU3BlY3RhdG9ySG9zdDxDLCBIID0gSG9zdENvbXBvbmVudD4gZXh0ZW5kcyBCYXNlU3BlY3RhdG9ySG9zdDxDLCBIPiB7XG4gIHB1YmxpYyBpbmplY3Q8VD4odG9rZW46IFRva2VuPFQ+LCBmcm9tQ29tcG9uZW50SW5qZWN0b3I6IGJvb2xlYW4gPSBmYWxzZSk6IFNweU9iamVjdDxUPiB7XG4gICAgcmV0dXJuIHN1cGVyLmluamVjdCh0b2tlbiwgZnJvbUNvbXBvbmVudEluamVjdG9yKSBhcyBTcHlPYmplY3Q8VD47XG4gIH1cbn1cblxuLyoqXG4gKiBAcHVibGljQXBpXG4gKi9cbmV4cG9ydCB0eXBlIFNwZWN0YXRvckhvc3RGYWN0b3J5PEMsIEg+ID0gPEhQPihcbiAgdGVtcGxhdGU6IHN0cmluZyxcbiAgb3ZlcnJpZGVzPzogU3BlY3RhdG9ySG9zdE92ZXJyaWRlczxDLCBILCBIUD5cbikgPT4gU3BlY3RhdG9ySG9zdDxDLCBIICYgSG9zdENvbXBvbmVudCBleHRlbmRzIEggPyBIUCA6IHVua25vd24+O1xuXG4vKipcbiAqIEBwdWJsaWNBcGlcbiAqL1xuZXhwb3J0IHR5cGUgUHJlc2V0U3BlY3RhdG9ySG9zdEZhY3Rvcnk8QywgSD4gPSA8SFA+KFxuICB0ZW1wbGF0ZT86IHN0cmluZyxcbiAgb3ZlcnJpZGVzPzogU3BlY3RhdG9ySG9zdE92ZXJyaWRlczxDLCBILCBIUD5cbikgPT4gU3BlY3RhdG9ySG9zdDxDLCBIICYgKEhvc3RDb21wb25lbnQgZXh0ZW5kcyBIID8gSFAgOiB1bmtub3duKT47XG5cbi8qKlxuICogQHB1YmxpY0FwaVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSG9zdEZhY3Rvcnk8QywgSCA9IEhvc3RDb21wb25lbnQ+KFxuICBvcHRpb25zOiBTcGVjdGF0b3JIb3N0T3B0aW9uczxDLCBIPiAmIHsgdGVtcGxhdGU6IHN0cmluZyB9XG4pOiBQcmVzZXRTcGVjdGF0b3JIb3N0RmFjdG9yeTxDLCBIPjtcbi8qKlxuICogQHB1YmxpY0FwaVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSG9zdEZhY3Rvcnk8QywgSCA9IEhvc3RDb21wb25lbnQ+KHR5cGVPck9wdGlvbnM6IFR5cGU8Qz4gfCBTcGVjdGF0b3JIb3N0T3B0aW9uczxDLCBIPik6IFNwZWN0YXRvckhvc3RGYWN0b3J5PEMsIEg+O1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUhvc3RGYWN0b3J5PEMsIEggPSBIb3N0Q29tcG9uZW50Pih0eXBlT3JPcHRpb25zOiBUeXBlPEM+IHwgU3BlY3RhdG9ySG9zdE9wdGlvbnM8QywgSD4pOiBTcGVjdGF0b3JIb3N0RmFjdG9yeTxDLCBIPiB7XG4gIHJldHVybiBiYXNlQ3JlYXRlSG9zdEZhY3Rvcnkoe1xuICAgIG1vY2tQcm92aWRlcixcbiAgICAuLi4oaXNUeXBlKHR5cGVPck9wdGlvbnMpID8geyBjb21wb25lbnQ6IHR5cGVPck9wdGlvbnMgfSA6IHR5cGVPck9wdGlvbnMpXG4gIH0pIGFzIFNwZWN0YXRvckhvc3RGYWN0b3J5PEMsIEg+O1xufVxuIl19