import { Type } from '@angular/core';
import { HostComponent, SpectatorPipe as BaseSpectatorPipe, SpectatorPipeOptions, SpectatorPipeOverrides, Token } from '@ngneat/spectator';
import { SpyObject } from './mock';
/**
 * @publicApi
 */
export declare class SpectatorPipe<P, H = HostComponent> extends BaseSpectatorPipe<P, H> {
    inject<T>(token: Token<T>): SpyObject<T>;
}
/**
 * @publicApi
 */
export declare type SpectatorPipeFactory<P, H> = <HP>(templateOrOverrides?: string | SpectatorPipeOverrides<H, HP>, overrides?: SpectatorPipeOverrides<H, HP>) => SpectatorPipe<P, H & (HostComponent extends H ? HP : unknown)>;
/**
 * @publicApi
 */
export declare function createPipeFactory<P, H = HostComponent>(typeOrOptions: Type<P> | SpectatorPipeOptions<P, H>): SpectatorPipeFactory<P, H>;
