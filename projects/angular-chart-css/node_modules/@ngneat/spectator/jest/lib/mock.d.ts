/// <reference types="jest" />
import { FactoryProvider, AbstractType, Type } from '@angular/core';
import { SpyObject as BaseSpyObject } from '@ngneat/spectator';
export declare type SpyObject<T> = BaseSpyObject<T> & {
    [P in keyof T]: T[P] & (T[P] extends (...args: any[]) => infer R ? jest.Mock<R> : T[P]);
};
/**
 * @publicApi
 */
export declare function createSpyObject<T>(type: Type<T> | AbstractType<T>, template?: Partial<Record<keyof T, any>>): SpyObject<T>;
/**
 * @publicApi
 */
export declare function mockProvider<T>(type: Type<T> | AbstractType<T>, properties?: Partial<Record<keyof T, any>>): FactoryProvider;
