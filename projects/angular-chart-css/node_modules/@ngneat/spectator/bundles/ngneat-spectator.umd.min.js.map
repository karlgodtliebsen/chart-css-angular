{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/spectator/src/lib/dom-selectors.ts","../../../projects/spectator/src/lib/types.ts","../../../projects/spectator/src/lib/internals/query.ts","../../../projects/spectator/src/lib/internals/key-parser.ts","../../../projects/spectator/src/lib/event-creators.ts","../../../projects/spectator/src/lib/dispatch-events.ts","../../../projects/spectator/src/lib/internals/element-focus.ts","../../../projects/spectator/src/lib/type-in-element.ts","../../../projects/spectator/src/lib/select-option.ts","../../../projects/spectator/src/lib/base/base-spectator.ts","../../../projects/spectator/src/lib/base/dom-spectator.ts","../../../projects/spectator/src/lib/spectator/spectator.ts","../../../projects/spectator/src/lib/internals/rgb-to-hex.ts","../../../projects/spectator/src/lib/matchers.ts","../../../projects/spectator/src/lib/utils.ts","../../../projects/spectator/src/lib/core.ts","../../../projects/spectator/src/lib/globals-injections.ts","../../../projects/spectator/src/lib/base/initial-module.ts","../../../projects/spectator/src/lib/spectator/initial-module.ts","../../../projects/spectator/src/lib/internals/merge.ts","../../../projects/spectator/src/lib/mock.ts","../../../projects/spectator/src/lib/base/options.ts","../../../projects/spectator/src/lib/spectator/options.ts","../../../projects/spectator/src/lib/spectator/create-factory.ts","../../../projects/spectator/src/lib/spectator-host/spectator-host.ts","../../../projects/spectator/src/lib/internals/node-by-directive.ts","../../../projects/spectator/src/lib/spectator-host/initial-module.ts","../../../projects/spectator/src/lib/spectator-host/host-component.ts","../../../projects/spectator/src/lib/spectator-host/options.ts","../../../projects/spectator/src/lib/spectator-directive/spectator-directive.ts","../../../projects/spectator/src/lib/spectator-directive/initial-module.ts","../../../projects/spectator/src/lib/spectator-directive/options.ts","../../../projects/spectator/src/lib/spectator-service/spectator-service.ts","../../../projects/spectator/src/lib/spectator-service/options.ts","../../../projects/spectator/src/lib/spectator-routing/router-stub.ts","../../../projects/spectator/src/lib/spectator-routing/spectator-routing.ts","../../../projects/spectator/src/lib/spectator-routing/activated-route-stub.ts","../../../projects/spectator/src/lib/spectator-routing/router-link-stub.ts","../../../projects/spectator/src/lib/spectator-http/spectator-http.ts","../../../projects/spectator/src/lib/spectator-routing/options.ts","../../../projects/spectator/src/lib/spectator-http/options.ts","../../../projects/spectator/src/lib/spectator-pipe/spectator-pipe.ts","../../../projects/spectator/src/lib/spectator-pipe/initial-module.ts","../../../projects/spectator/src/lib/spectator-pipe/options.ts","../../../projects/spectator/src/lib/deprecated.ts","../../../projects/spectator/src/lib/spectator-directive/create-factory.ts","../../../projects/spectator/src/lib/spectator-host/create-factory.ts","../../../projects/spectator/src/lib/spectator-http/create-factory.ts","../../../projects/spectator/src/lib/spectator-http/initial-module.ts","../../../projects/spectator/src/lib/spectator-pipe/create-factory.ts","../../../projects/spectator/src/lib/spectator-routing/create-factory.ts","../../../projects/spectator/src/lib/spectator-routing/initial-module.ts","../../../projects/spectator/src/lib/spectator-service/create-factory.ts","../../../projects/spectator/src/lib/spectator-service/initial-module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__values","o","s","Symbol","iterator","m","i","length","next","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","execute","doesServiceImplementsOnDestroy","testedService","isString","isNumber","isType","v","isHTMLOptionElementArray","isArray","every","item","HTMLOptionElement","isObject","getChildren","debugElementRoot","directiveOrSelector","options","root","read","undefined","DOMSelector","nativeElement","debugElements","queryAll","By","css","directive","map","debug","injector","get","setProps","instance","keyOrKeyValues","firstChange","changes","update","key","newValue","SimpleChange","keys","_a","ngOnChanges","parseKey","keyStr","indexOf","keyCode","modifiers","keyParts","split","pop","reduce","mods","part","control","shift","alt","meta","Error","createMouseEvent","type","x","y","button","event","document","createEvent","initMouseEvent","window","defineProperty","createTouchEvent","pageX","pageY","UIEvent","bubbles","cancelable","view","detail","defineProperties","touches","createKeyboardEvent","keyOrKeyCode","target","parsedKey","assign","parseKeyOptions","originalPreventDefault","preventDefault","initKeyEvent","modifiersStr","trim","initKeyboardEvent","altKey","ctrlKey","shiftKey","metaKey","configurable","apply","createFakeEvent","canBubble","initEvent","dispatchEvent","node","dispatchFakeEvent","dispatchKeyboardEvent","dispatchMouseEvent","dispatchTouchEvent","patchElementFocus","element","focus","blur","typeInElement","HTMLInputElement","HTMLTextAreaElement","setOptionSelected","option","select","config","selected","emitEvents","BaseSpectator","inject","token","TestBed","KEY_UP","DomSpectator","fixture","debugElement","_this","_super","detectChanges","query","querySelector","from","querySelectorAll","queryLast","result","setInput","input","ChangeDetectorRef","output","observable","Observable","tick","millis","click","selector","getNativeElement","HTMLElement","Node","dispatchedEvent","triggerEventHandler","eventName","eventObj","getDebugElement","console","pressKey","pressEscape","pressEnter","pressTab","pressBackspace","contextmenu","dblclick","selectOption","HTMLSelectElement","multiple","forEach","opt","includes","exists","DebugElement","ElementRef","Spectator","fromComponentInjector","detectComponentChanges","isHex","test","replace","hasProperty","actual","expected","containsProperty","checkProperty","el","prop","predicate","pass","failing","_b","_c","$","addendum","message","hasCss","hex","h","$el","match","RegExp","parseInt","style","hasSameText","exact","actual_1","failing_1","pass_1","each","text","pass_2","comparator","func","compare","toExist","ɵ6","toHaveLength","ɵ7","attr","toHaveId","ɵ8","actual_2","expectedClasses_1","join","pass_3","hasClass","toHaveClass","ɵ9","val","failing_2","pass_4","actual_3","addendum_1","toHaveAttribute","ɵ10","toHaveProperty","ɵ11","toContainProperty","ɵ12","toHaveText","ɵ13","toHaveExactText","ɵ14","toContainText","actual_4","failing_3","pass_5","toHaveValue","ɵ15","toContainValue","JSON","stringify","toHaveStyle","ɵ16","data","toHaveData","ɵ17","is","toBeChecked","ɵ18","toBeDisabled","ɵ19","toBeEmpty","ɵ20","isHidden","elOrSelector","hiddenWhen","offsetWidth","offsetHeight","getClientRects","display","visibility","hasAttribute","navigator","userAgent","some","rule","parentNode","toBeHidden","ɵ21","toBeSelected","ɵ22","toBeVisible","ɵ23","ownerDocument","activeElement","toBeFocused","ɵ24","filter","toBeMatchedBy","ɵ25","find","toHaveDescendant","ɵ26","isFunction","pass_6","toHaveDescendantWithText","ɵ27","actual_5","pass_7","outerHTML","actual_6","pass_8","toArray","_","index","expectedOptionsString_1","actualOptionsString_1","expectedOptionsString","acc","toHaveSelectedOptions","ɵ28","addMatchers","matchers","jasmine","jest","jestExpectExtend","startsWith","expect","extend","globals","providers","declarations","imports","getGlobalsInjections","initialModule","entryComponents","disableAnimations","NoopAnimationsModule","mocks","mockProvider","initialSpectatorModule","moduleMetadata","declareComponent","component","schemas","shallow","NO_ERRORS_SCHEMA","merge","defaults","overrides","installProtoMethods","mock","proto","createSpyFn","descriptor","getOwnPropertyDescriptor","set","getOwnPropertyNames","getPrototypeOf","castToWritable","createSpyObject","template","name","newSpy","createSpy","andCallFake","fn","and","callFake","andReturn","returnValue","reset","calls","properties","provide","useFactory","defaultOptions","overrideModules","getDefaultBaseOptions","defaultSpectatorOptions","componentProviders","componentViewProviders","componentMocks","componentViewProvidersMocks","getSpectatorDefaultOptions","overrideComponentIfProviderOverridesSpecified","hasProviderOverrides","hasViewProviders","providerConfiguration","viewProviders","overrideComponent","overrideModule","ngModule","override","SpectatorHost","hostComponent","hostDebugElement","hostElement","hostFixture","componentInstance","queryHost","queryHostAll","setHostInput","nodeByDirective","debugNode","providerTokens","initialSpectatorWithHostModule","host","Component","args","NgModule","HostComponent","defaultSpectatorHostOptions","getSpectatorHostDefaultOptions","SpectatorDirective","fromDirectiveInjector","initialSpectatorDirectiveModule","declareDirective","defaultSpectatorRoutingOptions","directiveProviders","directiveMocks","getSpectatorDirectiveDefaultOptions","SpectatorService","service","defaultServiceOptions","getDefaultServiceOptions","RouterStub","Router","SpectatorRouting","router","activatedRouteStub","triggerNavigation","checkStubPresent","params","setParams","queryParams","setQueryParams","setAllData","fragment","setFragment","triggerNavigationAndUpdate","setRouteParam","setParam","setRouteQueryParam","setQueryParam","setRouteData","setData","setRouteFragment","setRouteUrl","url","setUrl","emitRouterEvent","isRouterStub","warn","ActivatedRouteStub","testParams","testQueryParams","testData","testFragment","testUrl","testRoot","testParent","testFirstChild","testChildren","paramsSubject","ReplaySubject","queryParamsSubject","dataSubject","fragmentSubject","urlSubject","parent","firstChild","children","asObservable","snapshot","buildSnapshot","pipe","convertToParamMap","toString","ActivatedRouteSnapshot","ActivatedRoute","RouterLinkDirectiveStub","navigatedTo","onClick","routerLink","Directive","RouterLink","useExisting","Input","HostListener","HttpMethod","defaultRoutingOptions","mockRouterLinks","stubsEnabled","routes","getRoutingDefaultOptions","SpectatorHttp","httpClient","controller","expectOne","bind","expectConcurrent","method","toBe","req","verify","expectations","requests","expectation","flushAll","request","idx","flush","defaultHttpOptions","getDefaultHttpOptions","SpectatorPipe","initialSpectatorPipeModule","defaultSpectatorPipeOptions","getSpectatorPipeDefaultOptions","metadata","inputs","outputs","exportAs","Mock","EventEmitter","matcher","DOMQueries","queryAllByAltText","queryAllByLabelText","queryAllByPlaceholderText","queryAllByRole","queryAllByTestId","queryAllByText","textContentMatcher","normalizer","getDefaultNormalizer","getTextContent","elem","textContent","toLowerCase","queryAllByTitle","queryAllByDisplayValue","typeOrOptions","beforeEach","waitForAsync","customMatchers","configureTestingModule","BrowserDynamicTestingModule","compileComponents","props","provider","overrideProvider","spectator","createComponent","createSpectator","hostProps","overrideDirective","queryAllNodes","createSpectatorDirective","createSpectatorHost","HttpClientTestingModule","initialHttpModule","afterEach","HttpTestingController","HttpClient","templateOrOverrides","resolvedOverrides","createSpectatorPipe","events","Subject","useValue","RouterTestingModule","withRoutes","initialRoutingModule","NgZone","run","createSpectatorRouting","initialNavigation","initialServiceModule","ngOnDestroy"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {\n  Matcher,\n  MatcherOptions,\n  NormalizerFn,\n  SelectorMatcherOptions,\n  queries as DOMQueries,\n  getDefaultNormalizer,\n  ByRoleOptions\n} from '@testing-library/dom';\n\ninterface MandatorySelectorMatchingOptions extends MatcherOptions {\n  selector: SelectorMatcherOptions['selector'];\n}\n\nexport class DOMSelector {\n  // Wrap selector functions in a class to make reflection easier in getChild\n  constructor(public readonly execute: (el: HTMLElement) => HTMLElement[]) {}\n}\n\nexport type DOMSelectorFactory<TOptions extends MatcherOptions = MatcherOptions> = (matcher: Matcher, options?: TOptions) => DOMSelector;\n\nexport const byLabel: DOMSelectorFactory = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByLabelText(el, matcher, options));\n\nexport const byPlaceholder: DOMSelectorFactory = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByPlaceholderText(el, matcher, options));\n\nexport const byText: DOMSelectorFactory<SelectorMatcherOptions> = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByText(el, matcher, options));\n\nexport const byTextContent = (matcher: Matcher, options: MandatorySelectorMatchingOptions): DOMSelector => {\n  let textContentMatcher: Matcher;\n  const normalizer: NormalizerFn = options?.normalizer || getDefaultNormalizer(options);\n  const getTextContent = (elem: HTMLElement): string => normalizer(elem.textContent ?? '');\n\n  if (typeof matcher === 'string') {\n    textContentMatcher = (_, elem) => {\n      if (options?.exact === false) {\n        return (\n          getTextContent(elem)\n            .toLowerCase()\n            .indexOf(matcher.toLowerCase()) >= 0\n        );\n      }\n\n      return getTextContent(elem) === matcher;\n    };\n  } else if (matcher instanceof RegExp) {\n    textContentMatcher = (_, elem) => matcher.test(getTextContent(elem));\n  } else {\n    textContentMatcher = (_, elem) => matcher(getTextContent(elem), elem);\n  }\n\n  return new DOMSelector(el => DOMQueries.queryAllByText(el, textContentMatcher, options));\n};\n\nexport const byAltText: DOMSelectorFactory = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByAltText(el, matcher, options));\n\nexport const byTitle: DOMSelectorFactory = (matcher, options) => new DOMSelector(el => DOMQueries.queryAllByTitle(el, matcher, options));\n\nexport const byTestId: DOMSelectorFactory = (matcher, options) => new DOMSelector(el => DOMQueries.queryAllByTestId(el, matcher, options));\n\nexport const byValue: DOMSelectorFactory = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByDisplayValue(el, matcher, options));\n\nexport const byRole: DOMSelectorFactory<ByRoleOptions> = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByRole(el, matcher, options));\n","import { DebugElement, ElementRef, Type, EventEmitter, OnDestroy } from '@angular/core';\n\nimport { DOMSelector } from './dom-selectors';\nimport { Token } from './token';\n\ntype OptionalPropertyNames<T> = {\n  [K in keyof T]-?: undefined extends T[K] ? K : never;\n}[keyof T];\ntype OptionalProperties<T> = Pick<T, OptionalPropertyNames<T>>;\n\nexport type OptionalsRequired<T> = Required<OptionalProperties<T>> & Partial<T>;\n\nexport type SpectatorElement = string | Element | DebugElement | ElementRef | Window | Document | DOMSelector;\n\nexport type QueryType = Type<any> | DOMSelector | string;\nexport interface QueryOptions<R> {\n  read?: Token<R>;\n  root?: boolean;\n}\n\nexport type EventEmitterType<P> = P extends EventEmitter<infer T> ? T : never;\n\nexport type KeysMatching<T, V> = { [K in keyof T]: T[K] extends V ? K : never }[keyof T];\n\nexport type SelectOptions = string | string[] | HTMLOptionElement | HTMLOptionElement[];\n\nexport interface KeyboardEventOptions {\n  key: string;\n  keyCode: number;\n}\n\nexport function doesServiceImplementsOnDestroy<S>(testedService: S): testedService is S & OnDestroy {\n  return 'ngOnDestroy' in testedService && typeof testedService['ngOnDestroy'] === 'function';\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return typeof value === 'number';\n}\n\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport function isHTMLOptionElementArray(value: any): value is HTMLOptionElement[] {\n  return Array.isArray(value) && !!value.length && value.every(item => item instanceof HTMLOptionElement);\n}\n\nexport function isObject(v: any): v is object {\n  return v && typeof v === 'object';\n}\n","import { DebugElement, SimpleChange, SimpleChanges } from '@angular/core';\nimport { By } from '@angular/platform-browser';\n\nimport { DOMSelector } from '../dom-selectors';\nimport { isString, QueryOptions, QueryType } from '../types';\n\nexport function getChildren<R>(debugElementRoot: DebugElement): (directiveOrSelector: QueryType, options?: QueryOptions<R>) => R[] {\n  return (directiveOrSelector: QueryType, options: QueryOptions<R> = { root: false, read: undefined }): R[] => {\n    if (directiveOrSelector instanceof DOMSelector) {\n      return directiveOrSelector.execute(debugElementRoot.nativeElement) as any[];\n    }\n\n    const debugElements = debugElementRoot.queryAll(\n      isString(directiveOrSelector) ? By.css(directiveOrSelector) : By.directive(directiveOrSelector)\n    );\n\n    if (options.read) {\n      return debugElements.map(debug => debug.injector.get(options.read));\n    }\n\n    if (isString(directiveOrSelector)) {\n      return debugElements.map(debug => debug.nativeElement);\n    }\n\n    return debugElements.map(debug => debug.injector.get(directiveOrSelector));\n  };\n}\n\nexport function setProps<T, K extends string | number | symbol, V>(\n  instance: T,\n  key: K,\n  value: V,\n  firstChange?: boolean\n): T & { [KEY in K]: V };\nexport function setProps<T, KV>(instance: T, keyValues?: KV): T & KV;\nexport function setProps(instance: any, keyOrKeyValues: any, value?: any, firstChange: boolean = true): any {\n  const changes: SimpleChanges = {};\n\n  const update = (key: string, newValue: any): void => {\n    if (instance[key] !== newValue) {\n      changes[key] = new SimpleChange(instance[key], newValue, firstChange);\n    }\n\n    instance[key] = newValue;\n  };\n\n  if (isString(keyOrKeyValues)) {\n    update(keyOrKeyValues, value);\n  } else {\n    // tslint:disable-next-line:forin\n    for (const p in keyOrKeyValues) {\n      update(p, keyOrKeyValues[p]);\n    }\n  }\n\n  if (Object.keys(changes).length) {\n    // tslint:disable-next-line:no-life-cycle-call\n    instance.ngOnChanges?.(changes);\n  }\n\n  return instance;\n}\n","import { isNumber, isString, KeyboardEventOptions, isObject } from '../types';\n\nexport interface ModifierKeys {\n  alt?: boolean;\n  control?: boolean;\n  shift?: boolean;\n  meta?: boolean;\n}\n\nexport interface KeyOptions {\n  key: string | false;\n  keyCode: number | false;\n  modifiers: ModifierKeys;\n}\n\nexport const parseKeyOptions = (keyOrKeyCode: string | number | KeyboardEventOptions): KeyOptions => {\n  if (isNumber(keyOrKeyCode) && keyOrKeyCode) {\n    return { key: false, keyCode: keyOrKeyCode, modifiers: {} };\n  }\n\n  if (isString(keyOrKeyCode) && keyOrKeyCode) {\n    return parseKey(keyOrKeyCode as string);\n  }\n\n  if (isObject(keyOrKeyCode)) {\n    const parsedKey = parseKey(keyOrKeyCode.key);\n\n    return {\n      ...parsedKey,\n      keyCode: keyOrKeyCode.keyCode\n    };\n  }\n\n  throw new Error('keyboard.pressKey() requires a valid key or keyCode');\n};\n\nconst parseKey = (keyStr: string): KeyOptions => {\n  if (keyStr.indexOf('.') < 0 || '.' === keyStr) {\n    return { key: keyStr, keyCode: false, modifiers: {} };\n  }\n\n  const keyParts = keyStr.split('.');\n  const key = keyParts.pop() as string;\n  const modifiers = keyParts.reduce(\n    (mods, part) => {\n      switch (part) {\n        case 'control':\n        case 'ctrl':\n          mods.control = true;\n\n          return mods;\n        case 'shift':\n          mods.shift = true;\n\n          return mods;\n        case 'alt':\n          mods.alt = true;\n\n          return mods;\n        case 'meta':\n        case 'cmd':\n        case 'win':\n          mods.meta = true;\n\n          return mods;\n        default:\n          throw new Error(`invalid key modifier: ${part ? part : 'undefined'}, keyStr: ${keyStr}`);\n      }\n    },\n    { alt: false, control: false, shift: false, meta: false }\n  );\n\n  return { key, keyCode: false, modifiers };\n};\n","/**\n * Credit - Angular Material\n */\n\nimport { parseKeyOptions } from './internals/key-parser';\nimport { KeyboardEventOptions } from './types';\n\n/** Creates a browser MouseEvent with the specified options. */\nexport function createMouseEvent(type: string, x: number = 0, y: number = 0, button: number = 0): MouseEvent {\n  const event = document.createEvent('MouseEvent');\n\n  event.initMouseEvent(type, true, false, window, 0, x, y, x, y, false, false, false, false, button, null);\n\n  // `initMouseEvent` doesn't allow us to pass the `buttons` and\n  // defaults it to 0 which looks like a fake event.\n  Object.defineProperty(event, 'buttons', { get: () => 1 });\n\n  return event;\n}\n\n/**\n * Creates a browser TouchEvent with the specified pointer coordinates.\n */\nexport function createTouchEvent(type: string, pageX: number = 0, pageY: number = 0): UIEvent {\n  // In favor of creating events that work for most of the browsers, the event is created\n  // as a basic UI Event. The necessary details for the event will be set manually.\n  const event = new UIEvent(type, {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n    detail: 0\n  });\n\n  // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n  // the touch details.\n  Object.defineProperties(event, {\n    touches: { value: [{ pageX, pageY }] }\n  });\n\n  return event;\n}\n\n/** Dispatches a keydown event from an element. */\nexport function createKeyboardEvent(type: string, keyOrKeyCode: string | number | KeyboardEventOptions, target?: Element): KeyboardEvent {\n  const { key, keyCode, modifiers } = parseKeyOptions(keyOrKeyCode);\n\n  const event = document.createEvent('KeyboardEvent') as any;\n  const originalPreventDefault = event.preventDefault;\n\n  // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n  if (event.initKeyEvent) {\n    event.initKeyEvent(type, true, true, window, modifiers.control, modifiers.alt, modifiers.shift, modifiers.meta, keyCode);\n  } else {\n    // `initKeyboardEvent` expects to receive modifiers as a whitespace-delimited string\n    // See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\n    const modifiersStr = (modifiers.control\n      ? 'Control '\n      : '' + modifiers.alt\n      ? 'Alt '\n      : '' + modifiers.shift\n      ? 'Shift '\n      : '' + modifiers.meta\n      ? 'Meta'\n      : ''\n    ).trim();\n    event.initKeyboardEvent(\n      type,\n      true /* canBubble */,\n      true /* cancelable */,\n      window /* view */,\n      0 /* char */,\n      key /* key */,\n      0 /* location */,\n      modifiersStr /* modifiersList */,\n      false /* repeat */\n    );\n  }\n\n  // Webkit Browsers don't set the keyCode when calling the init function.\n  // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n  Object.defineProperties(event, {\n    keyCode: { get: () => keyCode },\n    key: { get: () => key },\n    target: { get: () => target },\n    altKey: { get: () => !!modifiers.alt },\n    ctrlKey: { get: () => !!modifiers.control },\n    shiftKey: { get: () => !!modifiers.shift },\n    metaKey: { get: () => !!modifiers.meta }\n  });\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  // tslint:disable-next-line\n  event.preventDefault = function() {\n    Object.defineProperty(event, 'defaultPrevented', { configurable: true, get: () => true });\n\n    return originalPreventDefault.apply(this, arguments);\n  };\n\n  return event;\n}\n\n/** Creates a fake event object with any desired event type. */\nexport function createFakeEvent(type: string, canBubble: boolean = false, cancelable: boolean = true): Event {\n  const event = document.createEvent('Event');\n  event.initEvent(type, canBubble, cancelable);\n\n  return event;\n}\n","/**\n * Credit - Angular Material\n */\n\nimport { createFakeEvent, createKeyboardEvent, createMouseEvent, createTouchEvent } from './event-creators';\nimport { KeyboardEventOptions } from './types';\n\n/**\n * Utility to dispatch any event on a Node.\n *\n * @publicApi\n */\nexport function dispatchEvent<E extends Event = Event>(node: Node | Window, event: E): E {\n  node.dispatchEvent(event);\n\n  return event;\n}\n\n/**\n * Shorthand to dispatch a fake event on a specified node.\n *\n * dispatchFakeEvent(element, 'mousedown');\n *\n * @publicApi\n */\nexport function dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\n  return dispatchEvent(node, createFakeEvent(type, canBubble));\n}\n\n/**\n * Shorthand to dispatch a keyboard event with a specified key.\n *\n *  dispatchKeyboardEvent(calendarBodyEl, 'keydown', 'LEFT_ARROW');\n *\n *  @publicApi\n */\nexport function dispatchKeyboardEvent(\n  node: Node,\n  type: string,\n  keyOrKeyCode: string | number | KeyboardEventOptions,\n  target?: Element\n): KeyboardEvent {\n  return dispatchEvent(node, createKeyboardEvent(type, keyOrKeyCode, target));\n}\n\n/**\n * Shorthand to dispatch a mouse event on the specified coordinates.\n *\n *  dispatchMouseEvent(rippleTarget, 'mousedown', 50, 75);\n *  dispatchMouseEvent(rippleTarget, 'mouseup');\n *\n *  @publicApi\n */\nexport function dispatchMouseEvent(\n  node: Node,\n  type: string,\n  x: number = 0,\n  y: number = 0,\n  event: MouseEvent = createMouseEvent(type, x, y)\n): MouseEvent {\n  return dispatchEvent(node, event);\n}\n\n/**\n * Shorthand to dispatch a touch event on the specified coordinates.\n *\n * dispatchTouchEvent(rippleTarget, 'touchstart');\n *\n * @publicApi\n */\nexport function dispatchTouchEvent(node: HTMLElement | Window | Document, type: string, x: number = 0, y: number = 0): Event {\n  return dispatchEvent(node, createTouchEvent(type, x, y));\n}\n","import { dispatchFakeEvent } from '../dispatch-events';\n\n/**\n * Patches an elements focus and blur methods to emit events consistently and predictably.\n * This is necessary, because some browsers, like IE11, will call the focus handlers asynchronously,\n * while others won't fire them at all if the browser window is not focused.\n *\n * patchElementFocus(triggerEl);\n */\nexport function patchElementFocus(element: HTMLElement): void {\n  element.focus = () => dispatchFakeEvent(element, 'focus');\n  element.blur = () => dispatchFakeEvent(element, 'blur');\n}\n","import { dispatchFakeEvent } from './dispatch-events';\n\n/**\n * Focuses an input or textarea, sets its value and dispatches\n * the `input` or `textarea` event, simulating the user typing.\n * @param value Value to be set on the input.\n * @param element Element onto which to set the value.\n *\n * typeInElement('al', input);\n */\nexport function typeInElement(value: string, element: HTMLElement | Document | Window): void {\n  if (!(element instanceof HTMLInputElement) && !(element instanceof HTMLTextAreaElement)) {\n    return;\n  }\n\n  element.focus();\n  element.value = value;\n  dispatchFakeEvent(element, 'input', true);\n}\n","import { dispatchFakeEvent } from './dispatch-events';\nimport { isString, isHTMLOptionElementArray, SelectOptions } from './types';\n\n/**\n * Focuses a select element, selects the correct options and dispatches\n * the `change` event, simulating the user selecting an option\n * @param options Options to be selected.\n * @param element Element onto which to select the options.\n * @param config Object with extra config to dispatch change event when option selected\n *\n * selectOption('al' | ['al', 'ab'], select, config);\n */\nexport function selectOption(\n  options: SelectOptions,\n  element: HTMLElement | HTMLSelectElement | Document | Window,\n  config: { emitEvents: boolean }\n): void {\n  if (!(element instanceof HTMLSelectElement)) {\n    return;\n  }\n\n  element.focus();\n\n  if (isString(options)) {\n    const option: HTMLOptionElement | null = element.querySelector(`option[value=\"${options}\"]`);\n    if (!option) {\n      return;\n    }\n\n    setOptionSelected(option, element, config);\n  } else if (options instanceof HTMLOptionElement) {\n    setOptionSelected(options, element, config);\n  } else {\n    if (!element.multiple) {\n      return;\n    }\n\n    if (isHTMLOptionElementArray(options)) {\n      options.forEach(option => setOptionSelected(option, element, config));\n    } else {\n      element.querySelectorAll('option').forEach(opt => {\n        if (options.includes(opt.value)) {\n          setOptionSelected(opt, element, config);\n        }\n      });\n    }\n  }\n}\n\n/**\n * Set the option in the HTMLSelectElement to selected\n * @param option HTMLOptionElement to select\n * @param select HTMLSelectElement to add the options to\n * @param config Object with extra config to dispatch change event when option selected\n *\n * setOptionSelected(option, element, config);\n */\nfunction setOptionSelected(option: HTMLOptionElement, select: HTMLSelectElement, config: { emitEvents: boolean }): void {\n  option.selected = true;\n  if (config.emitEvents) {\n    dispatchFakeEvent(select, 'change', true);\n  }\n}\n","import { TestBed } from '@angular/core/testing';\n\nimport { SpyObject } from '../mock';\nimport { Token } from '../token';\n\n/**\n * @internal\n */\nexport abstract class BaseSpectator {\n  public inject<T>(token: Token<T>): SpyObject<T> {\n    return TestBed.inject ? TestBed.inject(token) : TestBed.get(token);\n  }\n}\n","import { ChangeDetectorRef, DebugElement, ElementRef, Type, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ComponentFixture, tick } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\nimport { Token } from '../token';\nimport { DOMSelector } from '../dom-selectors';\nimport { isString, QueryOptions, QueryType, SpectatorElement, EventEmitterType, KeysMatching, KeyboardEventOptions } from '../types';\nimport { SpyObject } from '../mock';\nimport { getChildren, setProps } from '../internals/query';\nimport { patchElementFocus } from '../internals/element-focus';\nimport { createMouseEvent } from '../event-creators';\nimport { dispatchFakeEvent, dispatchKeyboardEvent, dispatchMouseEvent, dispatchTouchEvent } from '../dispatch-events';\nimport { typeInElement } from '../type-in-element';\nimport { selectOption } from '../select-option';\n\nimport { BaseSpectator } from './base-spectator';\n\nconst KEY_UP = 'keyup';\n\n/**\n * @internal\n */\nexport abstract class DomSpectator<I> extends BaseSpectator {\n  constructor(public fixture: ComponentFixture<any>, public debugElement: DebugElement, protected instance: I, public element: Element) {\n    super();\n  }\n\n  public inject<T>(token: Token<T>): SpyObject<T> {\n    return super.inject(token);\n  }\n\n  public detectChanges(): void {\n    this.fixture.detectChanges();\n  }\n\n  public query<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R | null;\n  public query<R>(directive: Type<R>): R | null;\n  public query<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R | null;\n  public query<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R | Element | null {\n    if ((options || {}).root) {\n      if (isString(directiveOrSelector)) {\n        return document.querySelector(directiveOrSelector);\n      }\n\n      if (directiveOrSelector instanceof DOMSelector) {\n        return directiveOrSelector.execute(document as any)[0] || null;\n      }\n    }\n\n    return getChildren<R>(this.debugElement)(directiveOrSelector, options)[0] || null;\n  }\n\n  public queryAll<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R[];\n  public queryAll<R>(directive: Type<R>): R[];\n  public queryAll<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R[];\n  public queryAll<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R[] | Element[] {\n    if ((options || {}).root) {\n      if (isString(directiveOrSelector)) {\n        return Array.from(document.querySelectorAll(directiveOrSelector));\n      }\n\n      if (directiveOrSelector instanceof DOMSelector) {\n        return directiveOrSelector.execute(document as any);\n      }\n    }\n\n    return getChildren<R>(this.debugElement)(directiveOrSelector, options);\n  }\n\n  public queryLast<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R | null;\n  public queryLast<R>(directive: Type<R>): R | null;\n  public queryLast<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R | null;\n  public queryLast<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R | Element | null {\n    let result: (R | Element)[] = [];\n\n    if ((options || {}).root) {\n      if (isString(directiveOrSelector)) {\n        result = Array.from(document.querySelectorAll(directiveOrSelector));\n      }\n\n      if (directiveOrSelector instanceof DOMSelector) {\n        result = directiveOrSelector.execute(document as any);\n      }\n    } else {\n      result = getChildren<R>(this.debugElement)(directiveOrSelector, options);\n    }\n\n    if (result && result.length) {\n      return result[result.length - 1];\n    }\n\n    return null;\n  }\n\n  public setInput<K extends keyof I>(input: Partial<I>): void;\n  public setInput<K extends keyof I>(input: K, inputValue: I[K]): void;\n  public setInput(input: any, value?: any): void {\n    setProps(this.instance, input, value, false);\n    this.debugElement.injector.get(ChangeDetectorRef).detectChanges();\n  }\n\n  public output<T, K extends keyof I = keyof I>(output: K): Observable<T> {\n    const observable = this.instance[output];\n\n    if (!(observable instanceof Observable)) {\n      throw new Error(`${output} is not an @Output`);\n    }\n\n    return observable as Observable<T>;\n  }\n\n  public tick(millis?: number): void {\n    tick(millis);\n    this.detectChanges();\n  }\n\n  public click(selector: SpectatorElement = this.element): void {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof HTMLElement)) {\n      throw new Error(`Cannot click: ${selector} is not a HTMLElement`);\n    }\n\n    element.click();\n    this.detectChanges();\n  }\n\n  public blur(selector: SpectatorElement = this.element): void {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof HTMLElement)) {\n      throw new Error(`Cannot blur: ${selector} is not a HTMLElement`);\n    }\n\n    patchElementFocus(element);\n    element.blur();\n    this.detectChanges();\n  }\n\n  public focus(selector: SpectatorElement = this.element): void {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof HTMLElement)) {\n      throw new Error(`Cannot focus: ${selector} is not a HTMLElement`);\n    }\n\n    patchElementFocus(element);\n    element.focus();\n    this.detectChanges();\n  }\n\n  public dispatchMouseEvent(\n    selector: SpectatorElement = this.element,\n    type: string,\n    x: number = 0,\n    y: number = 0,\n    event: MouseEvent = createMouseEvent(type, x, y)\n  ): MouseEvent {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof Node)) {\n      throw new Error(`Cannot dispatch mouse event: ${selector} is not a node`);\n    }\n\n    const dispatchedEvent = dispatchMouseEvent(element, type, x, y, event);\n    this.detectChanges();\n\n    return dispatchedEvent;\n  }\n\n  public dispatchKeyboardEvent(selector: SpectatorElement, type: string, keyCode: number, target?: Element): KeyboardEvent;\n  public dispatchKeyboardEvent(selector: SpectatorElement, type: string, key: string, target?: Element): KeyboardEvent;\n  public dispatchKeyboardEvent(selector: SpectatorElement, type: string, keyAndCode: KeyboardEventOptions, target?: Element): KeyboardEvent;\n  public dispatchKeyboardEvent(\n    selector: SpectatorElement = this.element,\n    type: string,\n    keyOrKeyCode: string | number | KeyboardEventOptions,\n    target?: Element\n  ): KeyboardEvent {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof Node)) {\n      throw new Error(`Cannot dispatch keyboard event: ${selector} is not a node`);\n    }\n\n    const event = dispatchKeyboardEvent(element, type, keyOrKeyCode, target);\n\n    this.detectChanges();\n\n    return event;\n  }\n\n  public dispatchFakeEvent(selector: SpectatorElement = this.element, type: string, canBubble?: boolean): Event {\n    const event = dispatchFakeEvent(this.getNativeElement(selector), type, canBubble);\n    this.detectChanges();\n\n    return event;\n  }\n\n  public triggerEventHandler<C = any, K extends KeysMatching<C, EventEmitter<any>> = any>(\n    directiveOrSelector: Type<C> | string | DebugElement,\n    eventName: K,\n    eventObj: EventEmitterType<C[K]>\n  ) {\n    const debugElement = this.getDebugElement(directiveOrSelector);\n    if (!debugElement) {\n      // tslint:disable:no-console\n      console.error(`${directiveOrSelector} does not exists`);\n      return;\n    }\n    debugElement.triggerEventHandler(eventName as string, eventObj);\n    this.detectChanges();\n  }\n\n  public get keyboard() {\n    return {\n      pressKey: (key: string, selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, key);\n      },\n      pressEscape: (selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, { key: 'Escape', keyCode: 27 });\n      },\n      pressEnter: (selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, { key: 'Enter', keyCode: 13 });\n      },\n      pressTab: (selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, { key: 'Tab', keyCode: 9 });\n      },\n      pressBackspace: (selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, { key: 'Backspace', keyCode: 8 });\n      }\n    };\n  }\n\n  public get mouse() {\n    return {\n      contextmenu: (selector: SpectatorElement = this.element) => {\n        this.dispatchMouseEvent(selector, 'contextmenu');\n      },\n      dblclick: (selector: SpectatorElement = this.element) => {\n        this.dispatchMouseEvent(selector, 'dblclick');\n      }\n    };\n  }\n\n  public dispatchTouchEvent(selector: SpectatorElement = this.element, type: string, x: number = 0, y: number = 0): void {\n    dispatchTouchEvent(this.getNativeElement(selector), type, x, y);\n    this.detectChanges();\n  }\n\n  public typeInElement(value: string, selector: SpectatorElement = this.element): void {\n    typeInElement(value, this.getNativeElement(selector));\n    this.detectChanges();\n  }\n\n  public selectOption(\n    selector: SpectatorElement = this.element,\n    options: string | string[] | HTMLOptionElement | HTMLOptionElement[],\n    config: { emitEvents: boolean } = { emitEvents: true }\n  ): void {\n    if (!selector) {\n      throw new Error(`Cannot find select: ${selector}`);\n    }\n    selectOption(options, this.getNativeElement(selector), config);\n    this.detectChanges();\n  }\n\n  private getNativeElement(selector: SpectatorElement): HTMLElement | Window | Document {\n    let element;\n\n    // Support global objects window and document\n    if (selector === window || selector === document) {\n      return selector;\n    }\n\n    if (isString(selector)) {\n      const exists = this.debugElement.query(By.css(selector));\n      if (exists) {\n        element = exists.nativeElement;\n      } else {\n        // tslint:disable:no-console\n        console.error(`${selector} does not exists`);\n      }\n    } else if (selector instanceof DOMSelector) {\n      element = selector.execute(document as any)[0] || null;\n    } else {\n      if (selector instanceof DebugElement || selector instanceof ElementRef) {\n        element = selector.nativeElement;\n      } else {\n        element = selector;\n      }\n    }\n\n    return element;\n  }\n\n  private getDebugElement(directiveOrSelector: string | DebugElement | Type<unknown>) {\n    let debugElement: DebugElement;\n    if (isString(directiveOrSelector)) {\n      debugElement = this.debugElement.query(By.css(directiveOrSelector));\n    } else if (directiveOrSelector instanceof DebugElement) {\n      debugElement = directiveOrSelector;\n    } else {\n      debugElement = this.debugElement.query(By.directive(directiveOrSelector));\n    }\n    return debugElement;\n  }\n}\n","import { ChangeDetectorRef, DebugElement, InjectionToken, Type, AbstractType } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\n\nimport { SpyObject } from '../mock';\nimport { Token } from '../token';\nimport { DomSpectator } from '../base/dom-spectator';\n\n/**\n * @publicApi\n */\nexport class Spectator<C> extends DomSpectator<C> {\n  constructor(public fixture: ComponentFixture<C>, public debugElement: DebugElement, protected instance: C, public element: HTMLElement) {\n    super(fixture, debugElement, instance, element);\n  }\n\n  public get component(): C {\n    return this.instance;\n  }\n\n  public inject<T>(token: Token<T>, fromComponentInjector: boolean = false): SpyObject<T> {\n    if (fromComponentInjector) {\n      return this.debugElement.injector.get(token) as SpyObject<T>;\n    }\n\n    return super.inject(token);\n  }\n\n  public detectComponentChanges(): void {\n    if (this.debugElement) {\n      this.debugElement.injector.get(ChangeDetectorRef).detectChanges();\n    } else {\n      this.detectChanges();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Netanel Basal. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NetanelBasal/spectator/blob/master/LICENSE\n */\n\nexport function hex2rgb(hex: string): string {\n  const h = hex.replace('#', '');\n  const matches = h.match(new RegExp('(.{' + h.length / 3 + '})', 'g'))!;\n  const [r, g, b] = matches.map(match => parseInt(match.length === 1 ? match + match : match, 16));\n\n  return `rgb(${r},${g},${b})`;\n}\n\nexport function isHex(value: string): boolean {\n  return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(value);\n}\n\nexport function trim(value: string): string {\n  return (value || '').replace(/\\s/g, '');\n}\n","/** Credit: https://github.com/unindented/custom-jquery-matchers/tree/master/packages/custom-jquery-matchers */\n// tslint:disable:no-shadowed-variable\n\nimport $ from 'jquery';\n\nimport { hex2rgb, isHex, trim } from './internals/rgb-to-hex';\nimport { isHTMLOptionElementArray, isObject } from './types';\nimport { isRunningInJsDom } from './utils';\n\nexport interface CustomMatcherFactory {\n  (): CustomMatcher;\n}\n\nexport interface CustomMatcher {\n  compare<T>(actual: T, expected: T, ...args: any[]): CustomMatcherResult;\n}\n\nexport interface CustomMatcherResult {\n  pass: boolean;\n  message?: string;\n}\n\nconst hasProperty = (actual: unknown, expected: unknown): boolean => {\n  return expected === undefined ? actual !== undefined : actual === expected;\n};\n\nconst containsProperty = (actual: string, expected: unknown): boolean => {\n  return expected === undefined ? true : actual.includes(expected as string);\n};\n\nconst checkProperty = (\n  el: HTMLElement,\n  prop: object,\n  predicate: (actual, expected) => boolean\n): { pass: boolean; message: () => string } => {\n  let pass = false;\n  let failing = '';\n\n  for (const key of Object.keys(prop)) {\n    const actual = $(el).prop(key);\n    const addendum = prop[key] !== undefined ? ` with value '${prop[key]}'` : '';\n\n    pass = predicate(actual, prop[key]);\n    failing = !pass ? `'${prop}'${addendum}, but had '${actual}'` : '';\n  }\n\n  const message = () => `Expected element${pass ? ' not' : ''} to have property ${failing}`;\n\n  return { pass, message };\n};\n\nconst hasCss = (el: HTMLElement, css: { [key: string]: string }) => {\n  let prop;\n  let value;\n  const $el = $(el);\n  for (prop in css) {\n    if (css.hasOwnProperty(prop)) {\n      value = css[prop];\n\n      if (isHex(value)) {\n        value = hex2rgb(css[prop]);\n      }\n\n      if (value === 'auto' && $el.get(0).style[prop] === 'auto') {\n        continue;\n      }\n\n      if (trim($el.css(prop)) !== trim(value) && trim(el.style[prop]) !== trim(value)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nconst hasSameText = (el: HTMLElement, expected: string | string[] | ((s: string) => boolean), exact = false) => {\n  if (expected && Array.isArray(expected)) {\n    let actual: string;\n    let pass = false;\n    let failing: string;\n\n    $(el).each((i, e) => {\n      actual = exact ? $(e).text() : $.trim($(e).text());\n      pass = exact ? actual === expected[i] : actual.includes(expected[i]);\n      if (!pass) {\n        failing = expected[i];\n\n        return false;\n      }\n    });\n\n    const message = () => `Expected element${pass ? ' not' : ''} to have ${exact ? 'exact' : ''} text '${failing}', but had '${actual}'`;\n\n    return { pass, message };\n  }\n\n  const actual = exact ? $(el).text() : $.trim($(el).text());\n\n  if (expected && typeof expected !== 'string') {\n    const pass = expected(actual);\n    const message = () =>\n      `Expected element${pass ? ' not' : ''} to have ${exact ? 'exact' : ''} text matching '${expected}',` + ` but had '${actual}'`;\n\n    return { pass, message };\n  }\n\n  const pass = exact && !Array.isArray(expected) ? actual === expected : actual.indexOf(expected) !== -1;\n  const message = () => `Expected element${pass ? ' not' : ''} to have ${exact ? 'exact' : ''} text '${expected}', but had '${actual}'`;\n\n  return { pass, message };\n};\n\nconst comparator = (func): CustomMatcherFactory => () => ({\n  compare: func\n});\n\n/**\n *\n * expect('.zippy__content').not.toExist();\n */\nexport const toExist = comparator((el: string | Element) => {\n  const actual = $(el).length;\n  const pass = actual > 0;\n  const message = () => `Expected ${el} element${pass ? ' not' : ''} to exist`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveLength(3);\n */\nexport const toHaveLength = comparator((el: string, expected: number) => {\n  const actual = $(el).length;\n  const pass = actual === expected;\n  const message = () => `Expected element${pass ? ' not' : ''} to have length ${expected}, but had ${actual}`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveId('ID');\n */\nexport const toHaveId = comparator((el, expected) => {\n  const actual = $(el).attr('id');\n  const pass = actual === expected;\n  const message = () => `Expected element${pass ? ' not' : ''} to have ID '${expected}', but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveClass('class');\n * expect('.zippy__content').toHaveClass('class a, class b');\n * expect('.zippy__content').toHaveClass(['class a, class b']);\n */\nexport const toHaveClass = comparator((el, expected: string | string[]) => {\n  if (expected && Array.isArray(expected)) {\n    const actual: string = $(el).attr('class');\n    const expectedClasses = expected.join(' ');\n    const pass = $(el).hasClass(expectedClasses);\n    const message = () => `Expected element${pass ? ' not' : ''} to have value '${expectedClasses}', but had '${actual}'`;\n\n    return { pass, message };\n  }\n\n  const actual = $(el).attr('class');\n  const pass = $(el).hasClass(expected);\n  const message = () => `Expected element${pass ? ' not' : ''} to have class '${expected}', but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n * expect(host.query('.zippy')).toHaveAttribute('id', 'zippy');\n */\nexport const toHaveAttribute = comparator((el, attr: string | object, val) => {\n  if (isObject(attr)) {\n    let pass = false;\n    let failing: string;\n\n    for (const key of Object.keys(attr)) {\n      const actual = $(el).attr(key);\n      const addendum = attr[key] !== undefined ? ` with value '${attr[key]}'` : '';\n      pass = hasProperty(actual, attr[key]);\n      failing = !pass ? `'${attr}'${addendum}, but had '${actual}'` : '';\n    }\n    const message = () => `Expected element${pass ? ' not' : ''} to have attribute ${failing}`;\n\n    return { pass, message };\n  }\n\n  const actual = $(el).attr(attr);\n  const addendum = val !== undefined ? ` with value '${val}'` : '';\n  const pass = hasProperty(actual, val);\n  const message = () => `Expected element${pass ? ' not' : ''} to have attribute '${attr}'${addendum}, but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n *  expect(host.query('.checkbox')).toHaveProperty('checked', true);\n *  expect(host.query('.checkbox')).toHaveProperty({checked: true});\n */\nexport const toHaveProperty = comparator((el, prop, val) => {\n  if (isObject(prop)) {\n    return checkProperty(el, prop, hasProperty);\n  }\n\n  const actual = $(el).prop(prop);\n  const addendum = val !== undefined ? ` with value '${val}'` : '';\n  const pass = hasProperty(actual, val);\n  const message = () => `Expected element${pass ? ' not' : ''} to have property '${prop}'${addendum}, but had '${actual}'`;\n\n  return { pass, message };\n});\n\nexport const toContainProperty = comparator((el, prop, val) => {\n  if (isObject(prop)) {\n    return checkProperty(el, prop, containsProperty);\n  }\n\n  const actual = $(el).prop(prop);\n  const addendum = val !== undefined ? ` with value '${val}'` : '';\n  const pass = containsProperty(actual, val);\n  const message = () => `Expected element${pass ? ' not' : ''} to have property '${prop}'${addendum}, but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveText('Content');\n * expect('.zippy__content').toHaveText(['Content A', 'Content B']);\n *\n * expect('.zippy__content').toHaveText((text) => text.includes('..');\n */\nexport const toHaveText = comparator((el, expected, exact = false) => hasSameText(el, expected, exact));\n\nexport const toHaveExactText = comparator((el, expected) => hasSameText(el, expected, true));\n\nexport const toContainText = toHaveText;\n\n/**\n *\n * expect('.zippy__content').toHaveValue('value');\n * expect('.zippy__content').toHaveValue(['value a', 'value b']);\n */\nexport const toHaveValue = comparator((el, expected) => {\n  if (expected && Array.isArray(expected)) {\n    let actual: string;\n    let pass = false;\n    let failing: string;\n\n    $(el).each((i, e) => {\n      actual = $(e).val();\n      pass = actual === expected[i];\n      if (!pass) {\n        failing = expected[i];\n\n        return false;\n      }\n    });\n\n    const message = () => `Expected element${pass ? ' not' : ''} to have value '${failing}', but had '${actual}'`;\n\n    return { pass, message };\n  }\n\n  const actual = $(el).val();\n  const pass = actual === expected;\n  const message = () => `Expected element${pass ? ' not' : ''} to have value '${expected}', but had '${actual}'`;\n\n  return { pass, message };\n});\n\nexport const toContainValue = toHaveValue;\n\n/**\n *\n *  expect(host.element).toHaveStyle({\n *    backgroundColor: 'rgba(0, 0, 0, 0.1)'\n *  });\n */\nexport const toHaveStyle = comparator((el, expected) => {\n  const pass = hasCss(el, expected);\n  const message = () => `Expected element${pass ? ' not' : ''} to have CSS ${JSON.stringify(expected)}`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveData({data: 'role', val: 'admin'});\n */\nexport const toHaveData = comparator((el, { data, val }) => {\n  const actual = $(el).data(data);\n  const addendum = val !== undefined ? ` with value '${val}'` : '';\n  const pass = hasProperty(actual, val);\n  const message = () => `Expected element${pass ? ' not' : ''} to have data '${data}'${addendum}, but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.checkbox').toBeChecked();\n */\nexport const toBeChecked = comparator(el => {\n  const pass = $(el).is(':checked');\n  const message = () => `Expected element${pass ? ' not' : ''} to be checked`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.checkbox').toBeDisabled();\n */\nexport const toBeDisabled = comparator(el => {\n  const pass = $(el).is(':disabled');\n  const message = () => `Expected element${pass ? ' not' : ''} to be disabled`;\n\n  return { pass, message };\n});\n\n/**\n * An empty element is an element without child elements or text.\n *\n * expect('div').toBeEmpty();\n */\nexport const toBeEmpty = comparator(el => {\n  const pass = $(el).is(':empty');\n  const message = () => `Expected element${pass ? ' not' : ''} to be empty`;\n\n  return { pass, message };\n});\n\n/**\n * Hidden elements are elements that have:\n * 1. Display property set to \"none\"\n * 2. Width and height set to 0 (check not applied in jest)\n * 3. A hidden parent element (this also hides child elements)\n * 4. Type equal to \"hidden\" (only for form elements)\n * 5. A \"hidden\" attribute\n */\nfunction isHidden(elOrSelector: HTMLElement | string): boolean {\n  let el = $(elOrSelector)[0];\n\n  if (!el) {\n    return true;\n  }\n\n  const hiddenWhen = [\n    el => !(el.offsetWidth || el.offsetHeight || el.getClientRects().length),\n    el => el.style.display === 'none',\n    el => el.style.visibility === 'hidden',\n    el => el.type === 'hidden',\n    el => el.hasAttribute('hidden')\n  ];\n\n  if (isRunningInJsDom()) {\n    // When running in JSDOM (Jest), offset-properties and client rects are always reported as 0\n    // - hence, let's take a more \"naive\" approach here. (https://github.com/jsdom/jsdom/issues/135)\n    hiddenWhen.shift();\n  }\n\n  while (el) {\n    if (el === document) {\n      break;\n    }\n\n    if (hiddenWhen.some(rule => rule(el))) {\n      return true;\n    }\n\n    el = el.parentNode;\n  }\n\n  return false;\n}\n\n/**\n * Hidden elements are elements that have:\n * 1. Display property set to \"none\"\n * 2. Width and height set to 0\n * 3. A hidden parent element (this also hides child elements)\n * 4. Type equal to \"hidden\" (only for form elements)\n * 5. A \"hidden\" attribute\n *\n * expect('div').toBeHidden();\n *\n */\nexport const toBeHidden = comparator(el => {\n  const pass = isHidden(el);\n  const message = () => `Expected element${pass ? ' not' : ''} to be hidden`;\n\n  return { pass, message };\n});\n\n/**\n * The :selected selector selects option elements that are pre-selected.\n *\n * expect('div').toBeSelected();\n *\n */\nexport const toBeSelected = comparator(el => {\n  const pass = $(el).is(':selected');\n  const message = () => `Expected element${pass ? ' not' : ''} to be selected`;\n\n  return { pass, message };\n});\n\n/**\n * Hidden elements are elements that have:\n * 1. Display property set to \"none\"\n * 2. Width and height set to 0\n * 3. A hidden parent element (this also hides child elements)\n * 4. Type equal to \"hidden\" (only for form elements)\n * 5. A \"hidden\" attribute\n *\n * expect('div').toBeVisible();\n *\n */\nexport const toBeVisible = comparator(el => {\n  const pass = !isHidden(el);\n\n  const message = () => `Expected element${pass ? ' not' : ''} to be visible`;\n\n  return { pass, message };\n});\n\n/**\n * The :focus selector selects the element that currently has focus.\n *\n * expect('input').toBeFocused();\n */\nexport const toBeFocused = comparator(el => {\n  const element = $(el).get(0);\n  const pass = element === element.ownerDocument.activeElement;\n  const message = () => `Expected element${pass ? ' not' : ''} to be focused`;\n\n  return { pass, message };\n});\n\n/**\n * Check to see if the set of matched elements matches the given selector\n * returns true if the dom contains the element\n *\n * expect('div').toBeMatchedBy('.js-something')\n */\nexport const toBeMatchedBy = comparator((el, expected) => {\n  const actual = $(el).filter(expected).length;\n  const pass = actual > 0;\n  const message = () => `Expected element${pass ? ' not' : ''} to be matched by '${expected}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('div').toHaveDescendant('.child')\n */\nexport const toHaveDescendant = comparator((el, selector) => {\n  const actual = $(el).find(selector).length;\n  const pass = actual > 0;\n  const message = () => `Expected element${pass ? ' not' : ''} to contain child '${selector}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('div').toHaveDescendantWithText({selector: '.child', text: 'text'})\n */\nexport const toHaveDescendantWithText = comparator((el, { selector, text }) => {\n  const actual = $.trim(\n    $(el)\n      .find(selector)\n      .text()\n  );\n  if (text && $.isFunction(text.test)) {\n    const pass = text.test(actual);\n    const message = () =>\n      `Expected element${pass ? ' not' : ''} to have descendant '${selector}' with text matching '${text}',` + ` but had '${actual}'`;\n\n    return { pass, message };\n  }\n  const pass = actual.indexOf(text) !== -1;\n  const message = () => `Expected element${pass ? ' not' : ''} to have descendant '${selector}' with text '${text}', but had '${actual}'`;\n\n  return { pass, message };\n});\n\nexport const toHaveSelectedOptions = comparator((el, expected) => {\n  if (expected instanceof HTMLOptionElement) {\n    const actual = $(el).find(':selected');\n\n    const pass = actual.is($(expected));\n\n    const message = () =>\n      `Expected element${pass ? ' not' : ''} to have options '[${expected.outerHTML}]' but had '[${actual[0].outerHTML}]'`;\n\n    return { pass, message };\n  }\n\n  if (isHTMLOptionElementArray(expected)) {\n    const actual = $(el).find(':selected');\n\n    const pass = actual.length === expected.length && actual.toArray().every((_, index) => $(actual[index]).is(expected[index]));\n\n    const expectedOptionsString = $(expected)\n      .get()\n      .map(option => option.outerHTML)\n      .join(',');\n\n    const actualOptionsString = actual\n      .get()\n      .map(option => option.outerHTML)\n      .join(',');\n\n    const message = () =>\n      `Expected element${pass ? ' not' : ''} to have options '[${expectedOptionsString}]' but had '[${actualOptionsString}]'`;\n\n    return { pass, message };\n  }\n\n  const actual = $(el).val();\n  const pass = JSON.stringify([...actual]) === JSON.stringify([...expected]);\n\n  const expectedOptionsString = Array.isArray(expected)\n    ? expected.reduce((acc: string, val: string, i) => acc + `${i === expected.length ? '' : ','}${val}`)\n    : expected;\n  const message = () => `Expected element${pass ? ' not' : ''} to have options '[${expectedOptionsString}]' but had '[${actual}]'`;\n\n  return { pass, message };\n});\n","export function isRunningInJsDom() {\n  return navigator.userAgent.includes('Node.js') || navigator.userAgent.includes('jsdom');\n}\n","import { CustomMatcherFactory } from './matchers';\n\ndeclare var jasmine: any;\ndeclare var jest: any;\n\nexport function addMatchers(matchers: Record<string, CustomMatcherFactory>): void {\n  if (!matchers) return;\n\n  if (typeof jasmine !== 'undefined') {\n    jasmine.addMatchers(matchers);\n  }\n  if (typeof jest !== 'undefined') {\n    const jestExpectExtend = {};\n    for (const key of Object.keys(matchers)) {\n      if (key.startsWith('to')) jestExpectExtend[key] = matchers[key]().compare;\n    }\n\n    (expect as any).extend(jestExpectExtend);\n  }\n}\n","import { TestModuleMetadata } from '@angular/core/testing';\n\nlet globals: TestModuleMetadata = {\n  providers: [],\n  declarations: [],\n  imports: []\n};\n\nexport function defineGlobalsInjections(config: TestModuleMetadata): void {\n  globals = { ...globals, ...config };\n}\n\nexport function getGlobalsInjections(): TestModuleMetadata {\n  return globals;\n}\n","import { SchemaMetadata, Type } from '@angular/core';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { getGlobalsInjections } from '../globals-injections';\n\nimport { BaseSpectatorOptions } from './options';\n\n/**\n * @publicApi\n */\nexport interface ModuleMetadata {\n  declarations: any[];\n  imports: any[];\n  providers: any[];\n  entryComponents: Type<any>[];\n  schemas?: (SchemaMetadata | any[])[];\n}\n\n/**\n * @internal\n */\nexport function initialModule(options: Required<BaseSpectatorOptions>): ModuleMetadata {\n  const globals = { imports: [], declarations: [], providers: [], ...getGlobalsInjections() };\n\n  return {\n    declarations: [...globals.declarations, ...options.declarations, ...options.entryComponents],\n    imports: [...(options.disableAnimations ? [NoopAnimationsModule] : []), ...globals.imports, ...options.imports],\n    providers: [...globals.providers, ...options.providers, ...options.mocks.map(type => options.mockProvider(type))],\n    entryComponents: [...options.entryComponents]\n  };\n}\n","import { NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { initialModule, ModuleMetadata } from '../base/initial-module';\n\nimport { SpectatorOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialSpectatorModule<C>(options: Required<SpectatorOptions<C>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  if (options.declareComponent) {\n    moduleMetadata.declarations.push(options.component);\n  }\n\n  moduleMetadata.schemas = [options.shallow ? NO_ERRORS_SCHEMA : options.schemas || []];\n\n  return moduleMetadata;\n}\n","import { OptionalsRequired } from '../types';\n\n/**\n * @internal\n */\nexport function merge<T>(defaults: OptionalsRequired<T>, overrides?: T): Required<T> {\n  // tslint:disable-next-line:no-object-literal-type-assertion\n  return { ...defaults, ...overrides } as Required<T>;\n}\n","/** Credit: Valentin Buryakov */\nimport { FactoryProvider, Type, AbstractType } from '@angular/core';\n\ntype Writable<T> = { -readonly [P in keyof T]: T[P] };\n\n/**\n * @publicApi\n */\nexport interface CompatibleSpy extends jasmine.Spy {\n  /**\n   * By chaining the spy with and.returnValue, all calls to the function will return a specific\n   * value.\n   */\n  andReturn(val: any): void;\n\n  /**\n   * By chaining the spy with and.callFake, all calls to the spy will delegate to the supplied\n   * function.\n   */\n  andCallFake(fn: Function): this;\n\n  /**\n   * removes all recorded calls\n   */\n  reset(): void;\n}\n\n/**\n * @publicApi\n */\nexport type SpyObject<T> = T &\n  { [P in keyof T]: T[P] extends Function ? T[P] & CompatibleSpy : T[P] } & {\n    /**\n     * Casts to type without readonly properties\n     */\n    castToWritable(): Writable<T>;\n  };\n\n/**\n * @internal\n */\nexport function installProtoMethods<T>(mock: any, proto: any, createSpyFn: Function): void {\n  if (proto === null || proto === Object.prototype) {\n    return;\n  }\n\n  for (const key of Object.getOwnPropertyNames(proto)) {\n    const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n\n    if (!descriptor) {\n      continue;\n    }\n\n    if (typeof descriptor.value === 'function' && key !== 'constructor' && typeof mock[key] === 'undefined') {\n      mock[key] = createSpyFn(key);\n    } else if (descriptor.get && !mock.hasOwnProperty(key)) {\n      Object.defineProperty(mock, key, {\n        set: value => (mock[`_${key}`] = value),\n        get: () => mock[`_${key}`],\n        configurable: true\n      });\n    }\n  }\n\n  installProtoMethods(mock, Object.getPrototypeOf(proto), createSpyFn);\n\n  mock.castToWritable = () => mock;\n}\n\n/**\n * @publicApi\n */\nexport function createSpyObject<T>(type: Type<T> | AbstractType<T>, template?: Partial<Record<keyof T, any>>): SpyObject<T> {\n  const mock: any = { ...template } || {};\n\n  installProtoMethods<T>(mock, type.prototype, name => {\n    const newSpy: jasmine.Spy & Partial<CompatibleSpy> = jasmine.createSpy(name);\n    newSpy.andCallFake = (fn: (...args: any[]) => any) => <any>newSpy.and.callFake(fn);\n    newSpy.andReturn = val => newSpy.and.returnValue(val);\n    newSpy.reset = () => newSpy.calls.reset();\n    // revisit return null here (previously needed for rtts_assert).\n    newSpy.and.returnValue(null);\n\n    return newSpy;\n  });\n\n  return mock;\n}\n\n/**\n * @publicApi\n */\nexport function mockProvider<T>(type: Type<T> | AbstractType<T>, properties?: Partial<Record<keyof T, any>>): FactoryProvider {\n  return {\n    provide: type,\n    useFactory: () => createSpyObject(type, properties)\n  };\n}\n\n/**\n * @publicApi\n */\nexport type MockProvider = typeof mockProvider;\n","import { NgModule, Provider, SchemaMetadata, Type } from '@angular/core';\nimport { MetadataOverride } from '@angular/core/testing';\n\nimport { merge } from '../internals/merge';\nimport { mockProvider, MockProvider } from '../mock';\nimport { OptionalsRequired } from '../types';\n\n/**\n * @internal\n */\nexport interface BaseSpectatorOptions {\n  disableAnimations?: boolean;\n  entryComponents?: Type<any>[];\n  mocks?: Type<any>[];\n  mockProvider?: MockProvider;\n  providers?: any[];\n  declarations?: any[];\n  imports?: any[];\n  schemas?: (SchemaMetadata | any[])[];\n  overrideModules?: [Type<any>, MetadataOverride<NgModule>][];\n}\n\n/**\n * @internal\n */\nexport interface BaseSpectatorOverrides {\n  providers?: Provider[];\n}\n\nconst defaultOptions: OptionalsRequired<BaseSpectatorOptions> = {\n  disableAnimations: true,\n  entryComponents: [],\n  mocks: [],\n  mockProvider,\n  providers: [],\n  declarations: [],\n  imports: [],\n  schemas: [],\n  overrideModules: []\n};\n\n/**\n * @internal\n */\nexport function getDefaultBaseOptions(options?: BaseSpectatorOptions): Required<BaseSpectatorOptions> {\n  return merge<BaseSpectatorOptions>(defaultOptions, options);\n}\n","import { Type } from '@angular/core';\n\nimport { getDefaultBaseOptions, BaseSpectatorOptions } from '../base/options';\nimport { merge } from '../internals/merge';\nimport { OptionalsRequired } from '../types';\n\n/**\n * @publicApi\n */\nexport interface SpectatorOptions<C> extends BaseSpectatorOptions {\n  component: Type<C>;\n  shallow?: boolean;\n  componentProviders?: any[];\n  componentViewProviders?: any[];\n  detectChanges?: boolean;\n  declareComponent?: boolean;\n  componentMocks?: Type<any>[];\n  componentViewProvidersMocks?: Type<any>[];\n}\n\nconst defaultSpectatorOptions: OptionalsRequired<SpectatorOptions<any>> = {\n  ...getDefaultBaseOptions(),\n  shallow: false,\n  declareComponent: true,\n  detectChanges: true,\n  componentProviders: [],\n  componentViewProviders: [],\n  componentMocks: [],\n  componentViewProvidersMocks: []\n};\n\n/**\n * @internal\n */\nexport function getSpectatorDefaultOptions<C>(overrides?: SpectatorOptions<C>): Required<SpectatorOptions<C>> {\n  return merge(defaultSpectatorOptions, overrides);\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\n\nimport { BaseSpectatorOptions, BaseSpectatorOverrides } from '../base/options';\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\n\nimport { initialSpectatorModule } from './initial-module';\nimport { getSpectatorDefaultOptions, SpectatorOptions } from './options';\nimport { Spectator } from './spectator';\n\n/**\n * @publicApi\n */\nexport type SpectatorFactory<C> = (options?: SpectatorOverrides<C>) => Spectator<C>;\n\n/**\n * @publicApi\n */\nexport interface SpectatorOverrides<C> extends BaseSpectatorOverrides {\n  detectChanges?: boolean;\n  props?: Partial<C>;\n}\n\n/**\n * @internal\n */\nexport function overrideComponentIfProviderOverridesSpecified<C>(options: Required<SpectatorOptions<C>>): void {\n  const hasProviderOverrides = options.componentProviders.length || options.componentMocks.length;\n  const hasViewProviders = options.componentViewProviders.length || options.componentViewProvidersMocks.length;\n  if (hasProviderOverrides || hasViewProviders) {\n    let providerConfiguration = {};\n    if (hasProviderOverrides) {\n      providerConfiguration = {\n        providers: [...options.componentProviders, ...options.componentMocks.map(p => options.mockProvider(p))]\n      };\n    }\n    if (hasViewProviders) {\n      providerConfiguration = {\n        ...providerConfiguration,\n        viewProviders: [...options.componentViewProviders, ...options.componentViewProvidersMocks.map(p => options.mockProvider(p))]\n      };\n    }\n    TestBed.overrideComponent(options.component, {\n      set: providerConfiguration\n    });\n  }\n}\n\n/**\n * @internal\n */\nexport function overrideModules(options: Required<BaseSpectatorOptions>): void {\n  if (options.overrideModules.length) {\n    options.overrideModules.forEach(overrideModule => {\n      const [ngModule, override] = overrideModule;\n\n      TestBed.overrideModule(ngModule, override);\n    });\n  }\n}\n\n/**\n * @publicApi\n */\nexport function createComponentFactory<C>(typeOrOptions: Type<C> | SpectatorOptions<C>): SpectatorFactory<C> {\n  const options = isType(typeOrOptions)\n    ? getSpectatorDefaultOptions<C>({ component: typeOrOptions })\n    : getSpectatorDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialSpectatorModule<C>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata).overrideModule(BrowserDynamicTestingModule, {\n        set: {\n          entryComponents: moduleMetadata.entryComponents\n        }\n      });\n\n      overrideModules(options);\n\n      overrideComponentIfProviderOverridesSpecified(options);\n\n      TestBed.compileComponents();\n    })\n  );\n\n  return (overrides?: SpectatorOverrides<C>) => {\n    const defaults: SpectatorOverrides<C> = { props: {}, detectChanges: true, providers: [] };\n    const { detectChanges, props, providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    const spectator = createSpectator(options, props);\n\n    if (options.detectChanges && detectChanges) {\n      spectator.detectChanges();\n    }\n\n    return spectator;\n  };\n}\n\nfunction createSpectator<C>(options: Required<SpectatorOptions<C>>, props?: Partial<C>): Spectator<C> {\n  const fixture = TestBed.createComponent(options.component);\n  const debugElement = fixture.debugElement;\n\n  const component = setProps(fixture.componentInstance, props);\n\n  return new Spectator(fixture, debugElement, component, debugElement.nativeElement);\n}\n","import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\n\nimport { DOMSelector } from '../dom-selectors';\nimport { getChildren, setProps } from '../internals/query';\nimport { Spectator } from '../spectator/spectator';\nimport { Token } from '../token';\nimport { isString, QueryOptions, QueryType } from '../types';\n\nimport { HostComponent } from './host-component';\n\n/**\n * @publicApi\n */\nexport class SpectatorHost<C, H = HostComponent> extends Spectator<C> {\n  constructor(\n    public hostComponent: H,\n    public hostDebugElement: DebugElement,\n    public hostElement: Element,\n    public hostFixture: ComponentFixture<any>,\n    public debugElement: DebugElement,\n    componentInstance: C,\n    public element: HTMLElement\n  ) {\n    super(hostFixture, debugElement, componentInstance, element);\n  }\n\n  public queryHost<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R | null;\n  public queryHost<R>(directive: Type<R>): R | null;\n  public queryHost<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R | null;\n  public queryHost<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R | Element | null {\n    if ((options || {}).root && isString(directiveOrSelector)) {\n      return document.querySelector(directiveOrSelector);\n    }\n\n    return getChildren<R>(this.hostDebugElement)(directiveOrSelector, options)[0] || null;\n  }\n\n  public queryHostAll<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R[];\n  public queryHostAll<R>(directive: Type<R>): R[];\n  public queryHostAll<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R[];\n  public queryHostAll<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R[] | Element[] {\n    if ((options || {}).root && isString(directiveOrSelector)) {\n      return Array.from(document.querySelectorAll(directiveOrSelector));\n    }\n\n    return getChildren<R>(this.hostDebugElement)(directiveOrSelector, options);\n  }\n\n  public setHostInput<K extends keyof H>(input: Partial<H>): void;\n  public setHostInput<K extends keyof H>(input: K, inputValue: H[K]): void;\n  public setHostInput(input: any, value?: any): void {\n    setProps(this.hostComponent, input, value, false);\n    this.detectChanges();\n  }\n}\n","import { DebugNode, Predicate, Type } from '@angular/core';\n\n// TODO (dirkluijk): remove after upgrading to Angular 8.2\n// see: https://github.com/angular/angular/commit/10a1e1974b816ebb979dc10586b160ee07ad8356\nexport function nodeByDirective(type: Type<any>): Predicate<DebugNode> {\n  return debugNode => debugNode.providerTokens.includes(type);\n}\n","import { ModuleMetadata } from '../base/initial-module';\nimport { initialSpectatorModule } from '../spectator/initial-module';\n\nimport { SpectatorHostOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialSpectatorWithHostModule<C, H>(options: Required<SpectatorHostOptions<C, H>>): ModuleMetadata {\n  const moduleMetadata = initialSpectatorModule<C>(options);\n\n  moduleMetadata.declarations.push(options.host);\n\n  return moduleMetadata;\n}\n","import { Component, NgModule } from '@angular/core';\n\n@Component({\n  template: ''\n})\nexport class HostComponent {}\n\n/*\n  This is an unused module to resolve the ng build error:\n    'Cannot determine the module for class HostComponent'\n\n  Reference: https://github.com/angular/issues/13590\n*/\n@NgModule({\n  declarations: [HostComponent]\n})\nexport class HostModule {}\n","import { Type } from '@angular/core';\n\nimport { merge } from '../internals/merge';\nimport { getSpectatorDefaultOptions, SpectatorOptions } from '../spectator/options';\nimport { OptionalsRequired } from '../types';\n\nimport { HostComponent } from './host-component';\n\n/**\n * @publicApi\n */\nexport interface SpectatorHostOptions<C, H> extends SpectatorOptions<C> {\n  host?: Type<H>;\n  template?: string;\n}\n\nconst defaultSpectatorHostOptions: OptionalsRequired<SpectatorHostOptions<any, any>> = {\n  ...getSpectatorDefaultOptions<any>(),\n  host: HostComponent,\n  template: ''\n};\n\n/**\n * @internal\n */\nexport function getSpectatorHostDefaultOptions<C, H>(overrides?: SpectatorHostOptions<C, H>): Required<SpectatorHostOptions<C, H>> {\n  return merge(defaultSpectatorHostOptions, overrides);\n}\n","import { DebugElement, InjectionToken, Type, AbstractType } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\n\nimport { setProps } from '../internals/query';\nimport { Token } from '../token';\nimport { DomSpectator } from '../base/dom-spectator';\nimport { SpyObject } from '../mock';\nimport { HostComponent } from '../spectator-host/host-component';\n\n/**\n * @publicApi\n */\nexport class SpectatorDirective<D, H = HostComponent> extends DomSpectator<D> {\n  constructor(\n    public hostComponent: H,\n    public fixture: ComponentFixture<any>,\n    public debugElement: DebugElement,\n    protected instance: D,\n    public element: Element\n  ) {\n    super(fixture, debugElement, instance, element);\n  }\n\n  public get directive(): D {\n    return this.instance;\n  }\n\n  public inject<T>(token: Token<T>, fromDirectiveInjector: boolean = false): SpyObject<T> {\n    if (fromDirectiveInjector) {\n      return this.debugElement.injector.get(token) as SpyObject<T>;\n    }\n\n    return super.inject(token);\n  }\n\n  public setHostInput<K extends keyof H>(input: Partial<H>): void;\n  public setHostInput<K extends keyof H>(input: K, inputValue: H[K]): void;\n  public setHostInput(input: any, value?: any): void {\n    setProps(this.hostComponent, input, value, false);\n    this.detectChanges();\n  }\n}\n","import { NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { initialModule, ModuleMetadata } from '../base/initial-module';\nimport { SpectatorDirectiveOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialSpectatorDirectiveModule<D, H>(options: Required<SpectatorDirectiveOptions<D, H>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  if (options.declareDirective) {\n    moduleMetadata.declarations.push(options.directive);\n  }\n  moduleMetadata.declarations.push(options.host);\n\n  moduleMetadata.schemas = [options.shallow ? NO_ERRORS_SCHEMA : options.schemas || []];\n\n  return moduleMetadata;\n}\n","import { Provider, Type } from '@angular/core';\n\nimport { BaseSpectatorOptions, getDefaultBaseOptions } from '../base/options';\nimport { merge } from '../internals/merge';\nimport { HostComponent } from '../spectator-host/host-component';\nimport { OptionalsRequired } from '../types';\n\n/**\n * @publicApi\n */\nexport interface SpectatorDirectiveOptions<D, H> extends BaseSpectatorOptions {\n  directive: Type<D>;\n  shallow?: boolean;\n  detectChanges?: boolean;\n  host?: Type<H>;\n  template?: string;\n  directiveProviders?: Provider[];\n  directiveMocks?: Type<any>[];\n  declareDirective?: boolean;\n}\n\nconst defaultSpectatorRoutingOptions: OptionalsRequired<SpectatorDirectiveOptions<any, any>> = {\n  ...getDefaultBaseOptions(),\n  host: HostComponent,\n  template: '',\n  shallow: false,\n  detectChanges: true,\n  directiveProviders: [],\n  directiveMocks: [],\n  declareDirective: true\n};\n\n/**\n * @internal\n */\nexport function getSpectatorDirectiveDefaultOptions<D, H>(\n  overrides?: SpectatorDirectiveOptions<D, H>\n): Required<SpectatorDirectiveOptions<D, H>> {\n  return merge(defaultSpectatorRoutingOptions, overrides);\n}\n","import { BaseSpectator } from '../base/base-spectator';\n\n/**\n * @publicApi\n */\nexport class SpectatorService<S> extends BaseSpectator {\n  constructor(public service: S) {\n    super();\n  }\n}\n","import { Type } from '@angular/core';\n\nimport { getDefaultBaseOptions, BaseSpectatorOptions } from '../base/options';\nimport { merge } from '../internals/merge';\nimport { OptionalsRequired } from '../types';\n\nexport interface SpectatorServiceOptions<S = any> extends BaseSpectatorOptions {\n  service: Type<S>;\n}\n\nconst defaultServiceOptions: OptionalsRequired<SpectatorServiceOptions> = {\n  ...getDefaultBaseOptions()\n};\n\n/**\n * @internal\n */\nexport function getDefaultServiceOptions<S>(overrides: SpectatorServiceOptions<S>): Required<SpectatorServiceOptions<S>> {\n  return merge(defaultServiceOptions, overrides) as Required<SpectatorServiceOptions<S>>;\n}\n","import { Router, Event } from '@angular/router';\n\nexport abstract class RouterStub extends Router {\n  public abstract emitRouterEvent(event: Event): void;\n}\n\nexport function isRouterStub(router: Router): router is RouterStub {\n  return 'emitRouterEvent' in router;\n}\n","import { DebugElement } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { Event, Router, UrlSegment } from '@angular/router';\n\nimport { Spectator } from '../spectator/spectator';\n\nimport { ActivatedRouteStub } from './activated-route-stub';\nimport { RouteOptions } from './route-options';\nimport { isRouterStub } from './router-stub';\n\n/**\n * @publicApi\n */\nexport class SpectatorRouting<C> extends Spectator<C> {\n  constructor(\n    fixture: ComponentFixture<any>,\n    debugElement: DebugElement,\n    instance: C,\n    public readonly router: Router,\n    public readonly activatedRouteStub?: ActivatedRouteStub\n  ) {\n    super(fixture, debugElement, instance, debugElement.nativeElement);\n  }\n\n  /**\n   * Simulates a route navigation by updating the Params, QueryParams and Data observable streams.\n   */\n  public triggerNavigation(options?: RouteOptions): void {\n    if (!this.checkStubPresent()) {\n      return;\n    }\n\n    if (options && options.params) {\n      this.activatedRouteStub.setParams(options.params);\n    }\n\n    if (options && options.queryParams) {\n      this.activatedRouteStub.setQueryParams(options.queryParams);\n    }\n\n    if (options && options.data) {\n      this.activatedRouteStub.setAllData(options.data);\n    }\n\n    if (options && options.fragment) {\n      this.activatedRouteStub.setFragment(options.fragment);\n    }\n\n    this.triggerNavigationAndUpdate();\n  }\n\n  /**\n   * Updates the route params and triggers a route navigation.\n   */\n  public setRouteParam(name: string, value: string): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setParam(name, value);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Updates the route query params and triggers a route navigation.\n   */\n  public setRouteQueryParam(name: string, value: string): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setQueryParam(name, value);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Updates the route data and triggers a route navigation.\n   */\n  public setRouteData(name: string, value: string): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setData(name, value);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Updates the route fragment and triggers a route navigation.\n   */\n  public setRouteFragment(fragment: string | null): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setFragment(fragment);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Updates the route url and triggers a route navigation.\n   */\n  public setRouteUrl(url: UrlSegment[]): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setUrl(url);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Emits a router event\n   */\n  public emitRouterEvent(event: Event): void {\n    if (!isRouterStub(this.router)) {\n      // tslint:disable-next-line:no-console\n      console.warn(\n        'No stub for Router present. Set Spectator option \"stubsEnabled\" to true if you want to use this ' +\n          'helper, or use Router navigation to trigger events.'\n      );\n\n      return;\n    }\n\n    this.router.emitRouterEvent(event);\n  }\n\n  private triggerNavigationAndUpdate(): void {\n    this.activatedRouteStub!.triggerNavigation();\n    this.detectChanges();\n  }\n\n  private checkStubPresent(): this is { readonly activatedRouteStub: ActivatedRouteStub } {\n    if (!this.activatedRouteStub) {\n      // tslint:disable-next-line:no-console\n      console.warn(\n        'No stub for ActivatedRoute present. Set Spectator option \"stubsEnabled\" to true if you want to use this ' +\n          'helper, or use Router to trigger navigation.'\n      );\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { convertToParamMap, ActivatedRoute, ActivatedRouteSnapshot, Data, Params, ParamMap, UrlSegment } from '@angular/router';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { RouteOptions } from './route-options';\n\n/**\n * @publicApi\n *\n * Utility class for stubbing ActivatedRoute of @angular/router\n */\nexport class ActivatedRouteStub extends ActivatedRoute {\n  private testParams: Params = {};\n  private testQueryParams: Params = {};\n  private testData: Data = {};\n  private testFragment: string | null = null;\n  private testUrl: UrlSegment[] = [];\n  private testRoot: ActivatedRouteStub | null = null;\n  private testParent: ActivatedRouteStub | null = null;\n  private testFirstChild: ActivatedRouteStub | null = null;\n  private testChildren: ActivatedRouteStub[] | null = null;\n\n  private readonly paramsSubject = new ReplaySubject<Params>(1);\n  private readonly queryParamsSubject = new ReplaySubject<Params>(1);\n  private readonly dataSubject = new ReplaySubject<Data>(1);\n  private readonly fragmentSubject = new ReplaySubject<string | null>(1);\n  private readonly urlSubject = new ReplaySubject<UrlSegment[]>(1);\n\n  constructor(options?: RouteOptions) {\n    super();\n\n    if (options) {\n      this.testParams = options.params || {};\n      this.testQueryParams = options.queryParams || {};\n      this.testData = options.data || {};\n      this.testFragment = options.fragment || null;\n      this.testUrl = options.url || [];\n      this.testRoot = options.root || null;\n      this.testParent = options.parent || null;\n      this.testFirstChild = options.firstChild || null;\n      this.testChildren = options.children || null;\n    }\n\n    this.params = this.paramsSubject.asObservable();\n    this.queryParams = this.queryParamsSubject.asObservable();\n    this.data = this.dataSubject.asObservable();\n    this.fragment = this.fragmentSubject.asObservable() as Observable<string>;\n    this.url = this.urlSubject.asObservable() as Observable<UrlSegment[]>;\n\n    this.snapshot = this.buildSnapshot();\n\n    this.triggerNavigation();\n  }\n\n  public get paramMap(): Observable<ParamMap> {\n    return this.paramsSubject.asObservable().pipe(map(params => convertToParamMap(params)));\n  }\n\n  public snapshot: ActivatedRouteSnapshot;\n\n  public setParams(params: Params): void {\n    this.testParams = params;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setParam(name: string, value: string): void {\n    this.testParams = { ...this.testParams, [name]: value };\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setQueryParams(queryParams: Params): void {\n    this.testQueryParams = queryParams;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setQueryParam(name: string, value: string): void {\n    this.testQueryParams = { ...this.testQueryParams, [name]: value };\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setAllData(data: Data): void {\n    this.testData = data;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setData(name: string, value: string): void {\n    this.testData = { ...this.testData, [name]: value };\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setFragment(fragment: string | null): void {\n    this.testFragment = fragment;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setUrl(url: UrlSegment[]): void {\n    this.testUrl = url;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public get root(): ActivatedRouteStub {\n    return this.testRoot || this;\n  }\n\n  public get parent(): ActivatedRouteStub | null {\n    return this.testParent || null;\n  }\n\n  public get children(): ActivatedRouteStub[] {\n    return this.testChildren || [this];\n  }\n\n  public get firstChild(): ActivatedRouteStub | null {\n    return this.testFirstChild || null;\n  }\n\n  /**\n   * Simulates a route navigation by updating the Params, QueryParams and Data observable streams.\n   */\n  public triggerNavigation(): void {\n    this.paramsSubject.next(this.testParams);\n    this.queryParamsSubject.next(this.testQueryParams);\n    this.dataSubject.next(this.testData);\n    this.fragmentSubject.next(this.testFragment);\n    this.urlSubject.next(this.testUrl);\n  }\n\n  public toString(): string {\n    return 'activatedRouteStub';\n  }\n\n  private buildSnapshot(): ActivatedRouteSnapshot {\n    const snapshot = new ActivatedRouteSnapshot();\n\n    snapshot.params = this.testParams;\n    snapshot.queryParams = this.testQueryParams;\n    snapshot.data = this.testData;\n    snapshot.fragment = this.testFragment!;\n    snapshot.url = this.testUrl;\n\n    return snapshot;\n  }\n}\n","import { Directive, HostListener, Input, NgModule } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n// tslint:disable\n\n@Directive({\n  selector: '[routerLink]',\n  providers: [\n    {\n      provide: RouterLink,\n      useExisting: RouterLinkDirectiveStub\n    }\n  ]\n})\nexport class RouterLinkDirectiveStub {\n  @Input() routerLink: any;\n\n  navigatedTo: any = null;\n\n  @HostListener('click')\n  onClick(): boolean {\n    this.navigatedTo = this.routerLink;\n\n    return true;\n  }\n}\n\n/*\n  This is an unused module to resolve the ng build error:\n    'Cannot determine the module for class RouterLinkDirectiveStub'\n\n  Reference: https://github.com/angular/issues/13590\n*/\n@NgModule({\n  declarations: [RouterLinkDirectiveStub]\n})\nexport class RouterLinkDirectiveStubModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { HttpTestingController, TestRequest } from '@angular/common/http/testing';\n\nimport { BaseSpectator } from '../base/base-spectator';\n\n/**\n * @publicApi\n */\nexport enum HttpMethod {\n  GET = 'GET',\n  POST = 'POST',\n  DELETE = 'DELETE',\n  PUT = 'PUT',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  JSONP = 'JSONP',\n  OPTIONS = 'OPTIONS'\n}\n\nexport interface HttpExpect {\n  url: string;\n  method: HttpMethod;\n}\n\n/**\n * @publicApi\n */\nexport class SpectatorHttp<S> extends BaseSpectator {\n  constructor(public service: S, public httpClient: HttpClient, public controller: HttpTestingController) {\n    super();\n\n    // small workaround to prevent issues if destructuring SpectatorHttp, which was common in Spectator 3\n    // remove in v5?\n    this.expectOne = this.expectOne.bind(this);\n    this.expectConcurrent = this.expectConcurrent.bind(this);\n  }\n\n  public expectOne(url: string, method: HttpMethod): TestRequest {\n    expect(true).toBe(true); // workaround to avoid `Spec has no expectations` https://github.com/NetanelBasal/spectator/issues/75\n\n    const req = this.controller.expectOne({\n      url,\n      method\n    });\n\n    // assert that there are no outstanding requests.\n    this.controller.verify();\n\n    return req;\n  }\n\n  public expectConcurrent(expectations: HttpExpect[]): TestRequest[] {\n    const requests = expectations.map((expectation: HttpExpect) => {\n      return this.controller.expectOne({\n        url: expectation.url,\n        method: expectation.method\n      });\n    });\n\n    this.controller.verify();\n\n    return requests;\n  }\n\n  public flushAll(requests: TestRequest[], args: any[]): void {\n    requests.forEach((request: TestRequest, idx: number) => {\n      request.flush(args[idx]);\n    });\n  }\n}\n","import { Routes } from '@angular/router';\n\nimport { merge } from '../internals/merge';\nimport { getSpectatorDefaultOptions, SpectatorOptions } from '../spectator/options';\nimport { OptionalsRequired } from '../types';\n\nimport { RouteOptions } from './route-options';\n\nexport type SpectatorRoutingOptions<C> = SpectatorOptions<C> &\n  RouteOptions & {\n    mockRouterLinks?: boolean;\n    stubsEnabled?: boolean;\n    routes?: Routes;\n  };\n\nconst defaultRoutingOptions: OptionalsRequired<SpectatorRoutingOptions<any>> = {\n  ...getSpectatorDefaultOptions(),\n  params: {},\n  queryParams: {},\n  data: {},\n  fragment: null,\n  mockRouterLinks: true,\n  stubsEnabled: true,\n  routes: [],\n  url: [],\n  root: null,\n  parent: null,\n  children: null,\n  firstChild: null\n};\n\n/**\n * @internal\n */\nexport function getRoutingDefaultOptions<S>(overrides: SpectatorRoutingOptions<S>): Required<SpectatorRoutingOptions<S>> {\n  return merge(defaultRoutingOptions, overrides);\n}\n","import { Type } from '@angular/core';\n\nimport { getDefaultBaseOptions, BaseSpectatorOptions } from '../base/options';\nimport { merge } from '../internals/merge';\nimport { OptionalsRequired } from '../types';\n\nexport interface SpectatorHttpOptions<S> extends BaseSpectatorOptions {\n  service: Type<S>;\n}\n\nconst defaultHttpOptions: OptionalsRequired<SpectatorHttpOptions<any>> = {\n  ...getDefaultBaseOptions()\n};\n\n/**\n * @internal\n */\nexport function getDefaultHttpOptions<S>(overrides: SpectatorHttpOptions<S>): Required<SpectatorHttpOptions<S>> {\n  return merge(defaultHttpOptions, overrides);\n}\n","import { DebugElement } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\n\nimport { setProps } from '../internals/query';\nimport { BaseSpectator } from '../base/base-spectator';\nimport { HostComponent } from '../spectator-host/host-component';\n\n/**\n * @publicApi\n */\nexport class SpectatorPipe<P, H = HostComponent> extends BaseSpectator {\n  constructor(public hostComponent: H, public fixture: ComponentFixture<any>, public debugElement: DebugElement, public element: Element) {\n    super();\n  }\n\n  public detectChanges(): void {\n    this.fixture.detectChanges();\n  }\n\n  public setHostInput<K extends keyof H>(input: Partial<H>): void;\n  public setHostInput<K extends keyof H>(input: K, inputValue: H[K]): void;\n  public setHostInput(input: any, value?: any): void {\n    setProps(this.hostComponent, input, value, false);\n    this.detectChanges();\n  }\n}\n","import { initialModule, ModuleMetadata } from '../base/initial-module';\n\nimport { SpectatorPipeOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialSpectatorPipeModule<D, H>(options: Required<SpectatorPipeOptions<D, H>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  moduleMetadata.declarations.push(options.pipe);\n  moduleMetadata.declarations.push(options.host);\n\n  return moduleMetadata;\n}\n","import { Type } from '@angular/core';\n\nimport { merge } from '../internals/merge';\nimport { OptionalsRequired } from '../types';\nimport { BaseSpectatorOptions, getDefaultBaseOptions } from '../base/options';\nimport { HostComponent } from '../spectator-host/host-component';\n\n/**\n * @publicApi\n */\nexport interface SpectatorPipeOptions<P, H> extends BaseSpectatorOptions {\n  pipe: Type<P>;\n  host?: Type<H>;\n  detectChanges?: boolean;\n  template?: string;\n}\n\nconst defaultSpectatorPipeOptions: OptionalsRequired<SpectatorPipeOptions<any, any>> = {\n  ...getDefaultBaseOptions(),\n  host: HostComponent,\n  detectChanges: true,\n  template: ''\n};\n\n/**\n * @internal\n */\nexport function getSpectatorPipeDefaultOptions<P, H>(overrides?: SpectatorPipeOptions<P, H>): Required<SpectatorPipeOptions<P, H>> {\n  return merge(defaultSpectatorPipeOptions, overrides);\n}\n","import { Component, EventEmitter, Directive } from '@angular/core';\n\nexport function MockComponentDeprecated(options: Component): Component {\n  const metadata: Component = {\n    selector: options.selector,\n    template: options.template || '',\n    inputs: options.inputs,\n    outputs: options.outputs || [],\n    exportAs: options.exportAs || ''\n  };\n\n  class Mock {}\n\n  (metadata as any).outputs.forEach(method => {\n    Mock.prototype[method] = new EventEmitter<any>();\n  });\n\n  return Component(metadata)(Mock as any);\n}\n\nexport function MockDirectiveDeprecated(options: Directive): Directive {\n  const metadata: Directive = {\n    selector: options.selector,\n    inputs: options.inputs,\n    outputs: options.outputs || [],\n    exportAs: options.exportAs || ''\n  };\n\n  class Mock {}\n\n  (metadata as any).outputs.forEach(method => {\n    Mock.prototype[method] = new EventEmitter<any>();\n  });\n\n  return Directive(metadata)(Mock as any);\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\n\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\nimport { HostComponent } from '../spectator-host/host-component';\nimport { BaseSpectatorOverrides } from '../base/options';\nimport { nodeByDirective } from '../internals/node-by-directive';\n\nimport { initialSpectatorDirectiveModule } from './initial-module';\nimport { getSpectatorDirectiveDefaultOptions, SpectatorDirectiveOptions } from './options';\nimport { SpectatorDirective } from './spectator-directive';\nimport { overrideModules } from '../spectator/create-factory';\n\n/**\n * @publicApi\n */\nexport type SpectatorDirectiveFactory<D, H> = <HP>(\n  template: string,\n  overrides?: SpectatorDirectiveOverrides<D, H, HP>\n) => SpectatorDirective<D, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport type PresetSpectatorDirectiveFactory<D, H> = <HP>(\n  template?: string,\n  overrides?: SpectatorDirectiveOverrides<D, H, HP>\n) => SpectatorDirective<D, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport interface SpectatorDirectiveOverrides<D, H, HP> extends BaseSpectatorOverrides {\n  detectChanges?: boolean;\n  props?: Partial<D>;\n  hostProps?: HostComponent extends H ? HP : Partial<H>;\n  directiveProviders?: Provider[];\n}\n\n/**\n * @publicApi\n */\nexport function createDirectiveFactory<D, H = HostComponent>(\n  options: SpectatorDirectiveOptions<D, H> & { template: string }\n): PresetSpectatorDirectiveFactory<D, H>;\n/**\n * @publicApi\n */\nexport function createDirectiveFactory<D, H = HostComponent>(\n  typeOrOptions: Type<D> | SpectatorDirectiveOptions<D, H>\n): SpectatorDirectiveFactory<D, H>;\nexport function createDirectiveFactory<D, H = HostComponent>(\n  typeOrOptions: Type<D> | SpectatorDirectiveOptions<D, H>\n): SpectatorDirectiveFactory<D, H> {\n  const options = isType(typeOrOptions)\n    ? getSpectatorDirectiveDefaultOptions<D, H>({ directive: typeOrOptions })\n    : getSpectatorDirectiveDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialSpectatorDirectiveModule<D, H>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata);\n      overrideModules(options);\n    })\n  );\n\n  return <HP>(template?: string, overrides?: SpectatorDirectiveOverrides<D, H, HP>) => {\n    const defaults: SpectatorDirectiveOverrides<D, H, HP> = {\n      props: {},\n      hostProps: {} as any,\n      detectChanges: true,\n      providers: []\n    };\n    const { detectChanges, props, hostProps, providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    TestBed.overrideModule(BrowserDynamicTestingModule, {\n      set: {\n        entryComponents: moduleMetadata.entryComponents\n      }\n    }).overrideComponent(options.host, {\n      set: { template: template || options.template }\n    });\n\n    if (options.directiveProviders.length || options.directiveMocks.length) {\n      TestBed.overrideDirective(options.directive, {\n        set: { providers: [...options.directiveProviders, ...options.directiveMocks.map(p => options.mockProvider(p))] }\n      });\n    }\n\n    const spectator = createSpectatorDirective(options, props, hostProps);\n\n    if (options.detectChanges && detectChanges) {\n      spectator.detectChanges();\n    }\n\n    return spectator;\n  };\n}\n\nfunction createSpectatorDirective<D, H, HP>(\n  options: Required<SpectatorDirectiveOptions<D, H>>,\n  props?: Partial<D>,\n  hostProps?: HP\n): SpectatorDirective<D, H & HP> {\n  const hostFixture = TestBed.createComponent(options.host);\n  const debugElement = hostFixture.debugElement.query(By.directive(options.directive)) || hostFixture.debugElement;\n  const debugNode = hostFixture.debugElement.queryAllNodes(nodeByDirective(options.directive))[0];\n\n  if (!debugNode) {\n    throw new Error(`Cannot find directive ${options.directive} in host template 😔`);\n  }\n\n  const hostComponent = setProps(hostFixture.componentInstance, hostProps);\n  const directive = setProps(debugNode.injector.get(options.directive), props);\n\n  return new SpectatorDirective(hostComponent, hostFixture, hostFixture.debugElement, directive, debugElement.nativeElement);\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\n\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { overrideComponentIfProviderOverridesSpecified, overrideModules, SpectatorOverrides } from '../spectator/create-factory';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\nimport { nodeByDirective } from '../internals/node-by-directive';\n\nimport { HostComponent } from './host-component';\nimport { initialSpectatorWithHostModule } from './initial-module';\nimport { getSpectatorHostDefaultOptions, SpectatorHostOptions } from './options';\nimport { SpectatorHost } from './spectator-host';\n\n/**\n * @publicApi\n */\nexport type SpectatorHostFactory<C, H> = <HP>(\n  template: string,\n  overrides?: SpectatorHostOverrides<C, H, HP>\n) => SpectatorHost<C, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport type PresetSpectatorHostFactory<C, H> = <HP>(\n  template?: string,\n  overrides?: SpectatorHostOverrides<C, H, HP>\n) => SpectatorHost<C, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport interface SpectatorHostOverrides<C, H, HP> extends SpectatorOverrides<C> {\n  hostProps?: HostComponent extends H ? HP : Partial<H>;\n}\n\n/**\n * @publicApi\n */\nexport function createHostFactory<C, H = HostComponent>(\n  options: SpectatorHostOptions<C, H> & { template: string }\n): PresetSpectatorHostFactory<C, H>;\n/**\n * @publicApi\n */\nexport function createHostFactory<C, H = HostComponent>(typeOrOptions: Type<C> | SpectatorHostOptions<C, H>): SpectatorHostFactory<C, H>;\nexport function createHostFactory<C, H = HostComponent>(typeOrOptions: Type<C> | SpectatorHostOptions<C, H>): SpectatorHostFactory<C, H> {\n  const options = isType(typeOrOptions)\n    ? getSpectatorHostDefaultOptions<C, H>({ component: typeOrOptions })\n    : getSpectatorHostDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialSpectatorWithHostModule<C, H>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata);\n\n      overrideModules(options);\n\n      overrideComponentIfProviderOverridesSpecified(options);\n    })\n  );\n\n  return <HP>(template?: string, overrides?: SpectatorHostOverrides<C, H, HP>) => {\n    const defaults: SpectatorHostOverrides<C, H, HP> = { props: {}, hostProps: {} as any, detectChanges: true, providers: [] };\n    const { detectChanges, props, hostProps, providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    TestBed.overrideModule(BrowserDynamicTestingModule, {\n      set: {\n        entryComponents: moduleMetadata.entryComponents\n      }\n    }).overrideComponent(options.host, {\n      set: { template: template || options.template }\n    });\n\n    const spectator = createSpectatorHost(options, props, hostProps);\n\n    if (options.detectChanges && detectChanges) {\n      spectator.detectChanges();\n    }\n\n    return spectator;\n  };\n}\n\nfunction createSpectatorHost<C, H, HP>(\n  options: Required<SpectatorHostOptions<C, H>>,\n  props?: Partial<C>,\n  hostProps?: HP\n): SpectatorHost<C, H & HP> {\n  const hostFixture = TestBed.createComponent(options.host);\n  const debugElement = hostFixture.debugElement.query(By.directive(options.component)) || hostFixture.debugElement;\n  const debugNode = hostFixture.debugElement.queryAllNodes(nodeByDirective(options.component))[0];\n\n  if (!debugNode) {\n    throw new Error(`Cannot find component/directive ${options.component} in host template 😔`);\n  }\n\n  const hostComponent = setProps(hostFixture.componentInstance, hostProps);\n  const component = setProps(debugNode.injector.get(options.component), props);\n\n  return new SpectatorHost(\n    hostComponent,\n    hostFixture.debugElement,\n    hostFixture.nativeElement,\n    hostFixture,\n    debugElement,\n    component,\n    debugElement.nativeElement\n  );\n}\n","import { HttpClient } from '@angular/common/http';\nimport { HttpTestingController } from '@angular/common/http/testing';\nimport { Provider, Type } from '@angular/core';\nimport { TestBed } from '@angular/core/testing';\n\nimport { BaseSpectatorOverrides } from '../base/options';\nimport { isType } from '../types';\n\nimport { initialHttpModule } from './initial-module';\nimport { getDefaultHttpOptions, SpectatorHttpOptions } from './options';\nimport { SpectatorHttp } from './spectator-http';\nimport { overrideModules } from '../spectator/create-factory';\n\n/**\n * @publicApi\n */\nexport type SpectatorHttpFactory<S> = (overrides?: CreateHttpOverrides<S>) => SpectatorHttp<S>;\n\n/**\n * @publicApi\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface CreateHttpOverrides<S> extends BaseSpectatorOverrides {}\n\n/**\n * @publicApi\n */\nexport function createHttpFactory<S>(typeOrOptions: Type<S> | SpectatorHttpOptions<S>): SpectatorHttpFactory<S> {\n  const service = isType(typeOrOptions) ? typeOrOptions : typeOrOptions.service;\n  const options = isType(typeOrOptions) ? getDefaultHttpOptions<S>({ service }) : getDefaultHttpOptions(typeOrOptions);\n  const moduleMetadata = initialHttpModule(options);\n\n  beforeEach(() => {\n    TestBed.configureTestingModule(moduleMetadata);\n    overrideModules(options);\n  });\n\n  afterEach(() => {\n    if (TestBed.inject) {\n      TestBed.inject(HttpTestingController).verify();\n    } else {\n      TestBed.get(HttpTestingController).verify();\n    }\n  });\n\n  return (overrides?: CreateHttpOverrides<S>) => {\n    const defaults: CreateHttpOverrides<S> = { providers: [] };\n    const { providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    /**\n     * Back compatibility, angular under 9 version doesnt have a inject function\n     */\n    if (!TestBed.inject) {\n      return new SpectatorHttp<S>(TestBed.get(service), TestBed.get(HttpClient), TestBed.get(HttpTestingController));\n    }\n\n    return new SpectatorHttp<S>(TestBed.inject(service), TestBed.inject(HttpClient), TestBed.inject(HttpTestingController));\n  };\n}\n","import { HttpClientTestingModule } from '@angular/common/http/testing';\n\nimport { initialModule, ModuleMetadata } from '../base/initial-module';\n\nimport { SpectatorHttpOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialHttpModule<S>(options: Required<SpectatorHttpOptions<S>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  moduleMetadata.providers.push(options.service);\n  moduleMetadata.imports.push(HttpClientTestingModule);\n\n  return moduleMetadata;\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\n\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { BaseSpectatorOverrides } from '../base/options';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\nimport { HostComponent } from '../spectator-host/host-component';\n\nimport { initialSpectatorPipeModule } from './initial-module';\nimport { getSpectatorPipeDefaultOptions, SpectatorPipeOptions } from './options';\nimport { SpectatorPipe } from './spectator-pipe';\nimport { overrideModules } from '../spectator/create-factory';\n\n/**\n * @publicApi\n */\nexport type SpectatorPipeFactory<P, H> = <HP>(\n  templateOrOverrides?: string | SpectatorPipeOverrides<H, HP>,\n  overrides?: SpectatorPipeOverrides<H, HP>\n) => SpectatorPipe<P, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport interface SpectatorPipeOverrides<H, HP> extends BaseSpectatorOverrides {\n  detectChanges?: boolean;\n  hostProps?: HostComponent extends H ? HP : Partial<H>;\n}\n\n/**\n * @publicApi\n */\nexport function createPipeFactory<P, H = HostComponent>(typeOrOptions: Type<P> | SpectatorPipeOptions<P, H>): SpectatorPipeFactory<P, H> {\n  const options = isType(typeOrOptions)\n    ? getSpectatorPipeDefaultOptions<P, H>({ pipe: typeOrOptions })\n    : getSpectatorPipeDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialSpectatorPipeModule<P, H>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata);\n      overrideModules(options);\n    })\n  );\n\n  return <HP>(templateOrOverrides?: string | SpectatorPipeOverrides<H, HP>, overrides?: SpectatorPipeOverrides<H, HP>) => {\n    const defaults: SpectatorPipeOverrides<H, HP> = {\n      hostProps: {} as any,\n      detectChanges: true,\n      providers: []\n    };\n    const resolvedOverrides = typeof templateOrOverrides === 'object' ? templateOrOverrides : overrides;\n    const { detectChanges, hostProps, providers } = { ...defaults, ...resolvedOverrides };\n    const template = typeof templateOrOverrides === 'string' ? templateOrOverrides : options.template;\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    if (template) {\n      TestBed.overrideModule(BrowserDynamicTestingModule, {\n        set: {\n          entryComponents: moduleMetadata.entryComponents\n        }\n      }).overrideComponent(options.host, {\n        set: { template }\n      });\n    }\n\n    const spectator = createSpectatorPipe(options, hostProps);\n\n    if (options.detectChanges && detectChanges) {\n      spectator.detectChanges();\n    }\n\n    return spectator;\n  };\n}\n\nfunction createSpectatorPipe<P, H, HP>(options: Required<SpectatorPipeOptions<P, H>>, hostProps?: HP): SpectatorPipe<P, H & HP> {\n  const hostFixture = TestBed.createComponent(options.host);\n  const debugElement = hostFixture.debugElement;\n\n  const hostComponent = setProps(hostFixture.componentInstance, hostProps);\n\n  return new SpectatorPipe(hostComponent, hostFixture, hostFixture.debugElement, debugElement.nativeElement);\n}\n","import { Provider, Type, NgZone } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { SpectatorOverrides, overrideComponentIfProviderOverridesSpecified, overrideModules } from '../spectator/create-factory';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\n\nimport { ActivatedRouteStub } from './activated-route-stub';\nimport { initialRoutingModule } from './initial-module';\nimport { getRoutingDefaultOptions, SpectatorRoutingOptions } from './options';\nimport { RouteOptions } from './route-options';\nimport { SpectatorRouting } from './spectator-routing';\nimport { SpyObject } from '../mock';\n\n/**\n * @publicApi\n */\nexport type SpectatorRoutingOverrides<C> = SpectatorOverrides<C> & RouteOptions;\n\n/**\n * @publicApi\n */\nexport type SpectatorRoutingFactory<C> = (options?: SpectatorRoutingOverrides<C>) => SpectatorRouting<C>;\n\n/**\n * @publicApi\n */\nexport function createRoutingFactory<C>(typeOrOptions: Type<C> | SpectatorRoutingOptions<C>): SpectatorRoutingFactory<C> {\n  const options = isType(typeOrOptions)\n    ? getRoutingDefaultOptions<C>({ component: typeOrOptions })\n    : getRoutingDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialRoutingModule<C>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata);\n\n      overrideModules(options);\n\n      overrideComponentIfProviderOverridesSpecified(options);\n\n      TestBed.compileComponents();\n    })\n  );\n\n  return (overrides?: SpectatorRoutingOverrides<C>) => {\n    const defaults: SpectatorRoutingOverrides<C> = {\n      props: {},\n      detectChanges: true,\n      providers: []\n    };\n\n    const { detectChanges, props, providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    const { params, queryParams, data, fragment, url, root, parent, children, firstChild } = { ...options, ...overrides };\n\n    TestBed.overrideProvider(ActivatedRoute, {\n      useValue: new ActivatedRouteStub({ params, queryParams, data, fragment, url, root, parent, children, firstChild })\n    });\n    const ngZone = (<any>TestBed).inject ? TestBed.inject(NgZone) : TestBed.get(NgZone);\n\n    return ngZone.run(() => {\n      const spectator = createSpectatorRouting(options, props);\n\n      spectator.router.initialNavigation();\n\n      if (options.detectChanges && detectChanges) {\n        spectator.detectChanges();\n      }\n\n      return spectator;\n    });\n  };\n}\n\nfunction createSpectatorRouting<C>(options: Required<SpectatorRoutingOptions<C>>, props?: Partial<C>): SpectatorRouting<C> {\n  const fixture = TestBed.createComponent(options.component);\n  const debugElement = fixture.debugElement;\n\n  const component = setProps(fixture.componentInstance, props);\n\n  /**\n   * Back compatibility, angular under 9 version doesnt have a inject function\n   */\n  if (!TestBed.inject) {\n    return new SpectatorRouting(fixture, debugElement, component, TestBed.get(Router), TestBed.get(ActivatedRoute));\n  }\n\n  return new SpectatorRouting(\n    fixture,\n    debugElement,\n    component,\n    TestBed.inject(Router),\n    TestBed.inject(ActivatedRoute) as SpyObject<ActivatedRouteStub>\n  );\n}\n","import { ActivatedRoute, Event, Router } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { Subject } from 'rxjs';\n\nimport { ModuleMetadata } from '../base/initial-module';\nimport { initialSpectatorModule } from '../spectator/initial-module';\n\nimport { ActivatedRouteStub } from './activated-route-stub';\nimport { SpectatorRoutingOptions } from './options';\nimport { RouterLinkDirectiveStub } from './router-link-stub';\nimport { RouterStub } from './router-stub';\n\n/**\n * @internal\n */\nexport function initialRoutingModule<S>(options: Required<SpectatorRoutingOptions<S>>): ModuleMetadata {\n  const moduleMetadata = initialSpectatorModule(options);\n\n  if (options.mockRouterLinks && options.stubsEnabled) {\n    moduleMetadata.declarations.push(RouterLinkDirectiveStub);\n  }\n\n  if (options.stubsEnabled) {\n    moduleMetadata.providers.push(\n      options.mockProvider(RouterStub, {\n        events: new Subject<Event>(),\n        emitRouterEvent(event: Event): void {\n          this.events.next(event);\n        }\n      }),\n      {\n        provide: Router,\n        useExisting: RouterStub\n      }\n    );\n\n    moduleMetadata.providers.push(\n      {\n        provide: ActivatedRouteStub,\n        useValue: new ActivatedRouteStub({\n          params: options.params,\n          queryParams: options.queryParams,\n          data: options.data\n        })\n      },\n      {\n        provide: ActivatedRoute,\n        useExisting: ActivatedRouteStub\n      }\n    );\n  } else {\n    moduleMetadata.imports.push(RouterTestingModule.withRoutes(options.routes));\n  }\n\n  return moduleMetadata;\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, TestBedStatic } from '@angular/core/testing';\n\nimport { BaseSpectatorOverrides } from '../base/options';\nimport { isType, doesServiceImplementsOnDestroy } from '../types';\n\nimport { initialServiceModule } from './initial-module';\nimport { getDefaultServiceOptions, SpectatorServiceOptions } from './options';\nimport { SpectatorService } from './spectator-service';\nimport { overrideModules } from '../spectator/create-factory';\n\n/**\n * @publicApi\n */\nexport type SpectatorServiceFactory<S> = (overrides?: SpectatorServiceOverrides<S>) => SpectatorService<S>;\n\n/**\n * @publicApi\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface SpectatorServiceOverrides<S> extends BaseSpectatorOverrides {}\n\n/**\n * @publicApi\n */\nexport function createServiceFactory<S>(typeOrOptions: Type<S> | SpectatorServiceOptions<S>): SpectatorServiceFactory<S> {\n  const service = isType(typeOrOptions) ? typeOrOptions : typeOrOptions.service;\n  const options = isType(typeOrOptions) ? getDefaultServiceOptions<S>({ service }) : getDefaultServiceOptions(typeOrOptions);\n\n  const moduleMetadata = initialServiceModule(options);\n\n  beforeEach(() => {\n    TestBed.configureTestingModule(moduleMetadata);\n    overrideModules(options);\n  });\n\n  afterEach(() => {\n    const testedService = (<any>TestBed).inject\n      ? (<{ inject<T>(token: Type<T>, notFoundValue?: T): T } & TestBedStatic>TestBed).inject<S>(service)\n      : TestBed.get(service);\n\n    if (doesServiceImplementsOnDestroy(testedService)) {\n      // tslint:disable-next-line:no-life-cycle-call\n      testedService.ngOnDestroy();\n    }\n  });\n\n  return (overrides?: SpectatorServiceOverrides<S>) => {\n    const defaults: SpectatorServiceOverrides<S> = { providers: [] };\n    const { providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    return new SpectatorService<S>(TestBed.inject ? TestBed.inject(service) : TestBed.get(service));\n  };\n}\n","import { initialModule, ModuleMetadata } from '../base/initial-module';\n\nimport { SpectatorServiceOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialServiceModule<S>(options: Required<SpectatorServiceOptions<S>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  moduleMetadata.providers.push(options.service);\n\n  return moduleMetadata;\n}\n"]}