{"version":3,"file":"ngneat-spectator.js","sources":["../../../projects/spectator/src/lib/dom-selectors.ts","../../../projects/spectator/src/lib/types.ts","../../../projects/spectator/src/lib/internals/query.ts","../../../projects/spectator/src/lib/internals/key-parser.ts","../../../projects/spectator/src/lib/event-creators.ts","../../../projects/spectator/src/lib/dispatch-events.ts","../../../projects/spectator/src/lib/internals/element-focus.ts","../../../projects/spectator/src/lib/type-in-element.ts","../../../projects/spectator/src/lib/select-option.ts","../../../projects/spectator/src/lib/base/base-spectator.ts","../../../projects/spectator/src/lib/base/dom-spectator.ts","../../../projects/spectator/src/lib/spectator/spectator.ts","../../../projects/spectator/src/lib/internals/rgb-to-hex.ts","../../../projects/spectator/src/lib/utils.ts","../../../projects/spectator/src/lib/matchers.ts","../../../projects/spectator/src/lib/core.ts","../../../projects/spectator/src/lib/globals-injections.ts","../../../projects/spectator/src/lib/base/initial-module.ts","../../../projects/spectator/src/lib/spectator/initial-module.ts","../../../projects/spectator/src/lib/internals/merge.ts","../../../projects/spectator/src/lib/mock.ts","../../../projects/spectator/src/lib/base/options.ts","../../../projects/spectator/src/lib/spectator/options.ts","../../../projects/spectator/src/lib/spectator/create-factory.ts","../../../projects/spectator/src/lib/spectator-host/spectator-host.ts","../../../projects/spectator/src/lib/internals/node-by-directive.ts","../../../projects/spectator/src/lib/spectator-host/initial-module.ts","../../../projects/spectator/src/lib/spectator-host/host-component.ts","../../../projects/spectator/src/lib/spectator-host/options.ts","../../../projects/spectator/src/lib/spectator-host/create-factory.ts","../../../projects/spectator/src/lib/spectator-directive/spectator-directive.ts","../../../projects/spectator/src/lib/spectator-directive/initial-module.ts","../../../projects/spectator/src/lib/spectator-directive/options.ts","../../../projects/spectator/src/lib/spectator-directive/create-factory.ts","../../../projects/spectator/src/lib/spectator-service/spectator-service.ts","../../../projects/spectator/src/lib/spectator-service/initial-module.ts","../../../projects/spectator/src/lib/spectator-service/options.ts","../../../projects/spectator/src/lib/spectator-service/create-factory.ts","../../../projects/spectator/src/lib/spectator-routing/router-stub.ts","../../../projects/spectator/src/lib/spectator-routing/spectator-routing.ts","../../../projects/spectator/src/lib/spectator-routing/activated-route-stub.ts","../../../projects/spectator/src/lib/spectator-routing/router-link-stub.ts","../../../projects/spectator/src/lib/spectator-routing/initial-module.ts","../../../projects/spectator/src/lib/spectator-routing/options.ts","../../../projects/spectator/src/lib/spectator-routing/create-factory.ts","../../../projects/spectator/src/lib/spectator-http/spectator-http.ts","../../../projects/spectator/src/lib/spectator-http/initial-module.ts","../../../projects/spectator/src/lib/spectator-http/options.ts","../../../projects/spectator/src/lib/spectator-http/create-factory.ts","../../../projects/spectator/src/lib/spectator-pipe/spectator-pipe.ts","../../../projects/spectator/src/lib/spectator-pipe/initial-module.ts","../../../projects/spectator/src/lib/spectator-pipe/options.ts","../../../projects/spectator/src/lib/spectator-pipe/create-factory.ts","../../../projects/spectator/src/lib/deprecated.ts","../../../projects/spectator/src/public_api.ts","../../../projects/spectator/src/ngneat-spectator.ts"],"sourcesContent":["import {\n  Matcher,\n  MatcherOptions,\n  NormalizerFn,\n  SelectorMatcherOptions,\n  queries as DOMQueries,\n  getDefaultNormalizer,\n  ByRoleOptions\n} from '@testing-library/dom';\n\ninterface MandatorySelectorMatchingOptions extends MatcherOptions {\n  selector: SelectorMatcherOptions['selector'];\n}\n\nexport class DOMSelector {\n  // Wrap selector functions in a class to make reflection easier in getChild\n  constructor(public readonly execute: (el: HTMLElement) => HTMLElement[]) {}\n}\n\nexport type DOMSelectorFactory<TOptions extends MatcherOptions = MatcherOptions> = (matcher: Matcher, options?: TOptions) => DOMSelector;\n\nexport const byLabel: DOMSelectorFactory = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByLabelText(el, matcher, options));\n\nexport const byPlaceholder: DOMSelectorFactory = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByPlaceholderText(el, matcher, options));\n\nexport const byText: DOMSelectorFactory<SelectorMatcherOptions> = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByText(el, matcher, options));\n\nexport const byTextContent = (matcher: Matcher, options: MandatorySelectorMatchingOptions): DOMSelector => {\n  let textContentMatcher: Matcher;\n  const normalizer: NormalizerFn = options?.normalizer || getDefaultNormalizer(options);\n  const getTextContent = (elem: HTMLElement): string => normalizer(elem.textContent ?? '');\n\n  if (typeof matcher === 'string') {\n    textContentMatcher = (_, elem) => {\n      if (options?.exact === false) {\n        return (\n          getTextContent(elem)\n            .toLowerCase()\n            .indexOf(matcher.toLowerCase()) >= 0\n        );\n      }\n\n      return getTextContent(elem) === matcher;\n    };\n  } else if (matcher instanceof RegExp) {\n    textContentMatcher = (_, elem) => matcher.test(getTextContent(elem));\n  } else {\n    textContentMatcher = (_, elem) => matcher(getTextContent(elem), elem);\n  }\n\n  return new DOMSelector(el => DOMQueries.queryAllByText(el, textContentMatcher, options));\n};\n\nexport const byAltText: DOMSelectorFactory = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByAltText(el, matcher, options));\n\nexport const byTitle: DOMSelectorFactory = (matcher, options) => new DOMSelector(el => DOMQueries.queryAllByTitle(el, matcher, options));\n\nexport const byTestId: DOMSelectorFactory = (matcher, options) => new DOMSelector(el => DOMQueries.queryAllByTestId(el, matcher, options));\n\nexport const byValue: DOMSelectorFactory = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByDisplayValue(el, matcher, options));\n\nexport const byRole: DOMSelectorFactory<ByRoleOptions> = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByRole(el, matcher, options));\n","import { DebugElement, ElementRef, Type, EventEmitter, OnDestroy } from '@angular/core';\n\nimport { DOMSelector } from './dom-selectors';\nimport { Token } from './token';\n\ntype OptionalPropertyNames<T> = {\n  [K in keyof T]-?: undefined extends T[K] ? K : never;\n}[keyof T];\ntype OptionalProperties<T> = Pick<T, OptionalPropertyNames<T>>;\n\nexport type OptionalsRequired<T> = Required<OptionalProperties<T>> & Partial<T>;\n\nexport type SpectatorElement = string | Element | DebugElement | ElementRef | Window | Document | DOMSelector;\n\nexport type QueryType = Type<any> | DOMSelector | string;\nexport interface QueryOptions<R> {\n  read?: Token<R>;\n  root?: boolean;\n}\n\nexport type EventEmitterType<P> = P extends EventEmitter<infer T> ? T : never;\n\nexport type KeysMatching<T, V> = { [K in keyof T]: T[K] extends V ? K : never }[keyof T];\n\nexport type SelectOptions = string | string[] | HTMLOptionElement | HTMLOptionElement[];\n\nexport interface KeyboardEventOptions {\n  key: string;\n  keyCode: number;\n}\n\nexport function doesServiceImplementsOnDestroy<S>(testedService: S): testedService is S & OnDestroy {\n  return 'ngOnDestroy' in testedService && typeof testedService['ngOnDestroy'] === 'function';\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return typeof value === 'number';\n}\n\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport function isHTMLOptionElementArray(value: any): value is HTMLOptionElement[] {\n  return Array.isArray(value) && !!value.length && value.every(item => item instanceof HTMLOptionElement);\n}\n\nexport function isObject(v: any): v is object {\n  return v && typeof v === 'object';\n}\n","import { DebugElement, SimpleChange, SimpleChanges } from '@angular/core';\nimport { By } from '@angular/platform-browser';\n\nimport { DOMSelector } from '../dom-selectors';\nimport { isString, QueryOptions, QueryType } from '../types';\n\nexport function getChildren<R>(debugElementRoot: DebugElement): (directiveOrSelector: QueryType, options?: QueryOptions<R>) => R[] {\n  return (directiveOrSelector: QueryType, options: QueryOptions<R> = { root: false, read: undefined }): R[] => {\n    if (directiveOrSelector instanceof DOMSelector) {\n      return directiveOrSelector.execute(debugElementRoot.nativeElement) as any[];\n    }\n\n    const debugElements = debugElementRoot.queryAll(\n      isString(directiveOrSelector) ? By.css(directiveOrSelector) : By.directive(directiveOrSelector)\n    );\n\n    if (options.read) {\n      return debugElements.map(debug => debug.injector.get(options.read));\n    }\n\n    if (isString(directiveOrSelector)) {\n      return debugElements.map(debug => debug.nativeElement);\n    }\n\n    return debugElements.map(debug => debug.injector.get(directiveOrSelector));\n  };\n}\n\nexport function setProps<T, K extends string | number | symbol, V>(\n  instance: T,\n  key: K,\n  value: V,\n  firstChange?: boolean\n): T & { [KEY in K]: V };\nexport function setProps<T, KV>(instance: T, keyValues?: KV): T & KV;\nexport function setProps(instance: any, keyOrKeyValues: any, value?: any, firstChange: boolean = true): any {\n  const changes: SimpleChanges = {};\n\n  const update = (key: string, newValue: any): void => {\n    if (instance[key] !== newValue) {\n      changes[key] = new SimpleChange(instance[key], newValue, firstChange);\n    }\n\n    instance[key] = newValue;\n  };\n\n  if (isString(keyOrKeyValues)) {\n    update(keyOrKeyValues, value);\n  } else {\n    // tslint:disable-next-line:forin\n    for (const p in keyOrKeyValues) {\n      update(p, keyOrKeyValues[p]);\n    }\n  }\n\n  if (Object.keys(changes).length) {\n    // tslint:disable-next-line:no-life-cycle-call\n    instance.ngOnChanges?.(changes);\n  }\n\n  return instance;\n}\n","import { isNumber, isString, KeyboardEventOptions, isObject } from '../types';\n\nexport interface ModifierKeys {\n  alt?: boolean;\n  control?: boolean;\n  shift?: boolean;\n  meta?: boolean;\n}\n\nexport interface KeyOptions {\n  key: string | false;\n  keyCode: number | false;\n  modifiers: ModifierKeys;\n}\n\nexport const parseKeyOptions = (keyOrKeyCode: string | number | KeyboardEventOptions): KeyOptions => {\n  if (isNumber(keyOrKeyCode) && keyOrKeyCode) {\n    return { key: false, keyCode: keyOrKeyCode, modifiers: {} };\n  }\n\n  if (isString(keyOrKeyCode) && keyOrKeyCode) {\n    return parseKey(keyOrKeyCode as string);\n  }\n\n  if (isObject(keyOrKeyCode)) {\n    const parsedKey = parseKey(keyOrKeyCode.key);\n\n    return {\n      ...parsedKey,\n      keyCode: keyOrKeyCode.keyCode\n    };\n  }\n\n  throw new Error('keyboard.pressKey() requires a valid key or keyCode');\n};\n\nconst parseKey = (keyStr: string): KeyOptions => {\n  if (keyStr.indexOf('.') < 0 || '.' === keyStr) {\n    return { key: keyStr, keyCode: false, modifiers: {} };\n  }\n\n  const keyParts = keyStr.split('.');\n  const key = keyParts.pop() as string;\n  const modifiers = keyParts.reduce(\n    (mods, part) => {\n      switch (part) {\n        case 'control':\n        case 'ctrl':\n          mods.control = true;\n\n          return mods;\n        case 'shift':\n          mods.shift = true;\n\n          return mods;\n        case 'alt':\n          mods.alt = true;\n\n          return mods;\n        case 'meta':\n        case 'cmd':\n        case 'win':\n          mods.meta = true;\n\n          return mods;\n        default:\n          throw new Error(`invalid key modifier: ${part ? part : 'undefined'}, keyStr: ${keyStr}`);\n      }\n    },\n    { alt: false, control: false, shift: false, meta: false }\n  );\n\n  return { key, keyCode: false, modifiers };\n};\n","/**\n * Credit - Angular Material\n */\n\nimport { parseKeyOptions } from './internals/key-parser';\nimport { KeyboardEventOptions } from './types';\n\n/** Creates a browser MouseEvent with the specified options. */\nexport function createMouseEvent(type: string, x: number = 0, y: number = 0, button: number = 0): MouseEvent {\n  const event = document.createEvent('MouseEvent');\n\n  event.initMouseEvent(type, true, false, window, 0, x, y, x, y, false, false, false, false, button, null);\n\n  // `initMouseEvent` doesn't allow us to pass the `buttons` and\n  // defaults it to 0 which looks like a fake event.\n  Object.defineProperty(event, 'buttons', { get: () => 1 });\n\n  return event;\n}\n\n/**\n * Creates a browser TouchEvent with the specified pointer coordinates.\n */\nexport function createTouchEvent(type: string, pageX: number = 0, pageY: number = 0): UIEvent {\n  // In favor of creating events that work for most of the browsers, the event is created\n  // as a basic UI Event. The necessary details for the event will be set manually.\n  const event = new UIEvent(type, {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n    detail: 0\n  });\n\n  // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n  // the touch details.\n  Object.defineProperties(event, {\n    touches: { value: [{ pageX, pageY }] }\n  });\n\n  return event;\n}\n\n/** Dispatches a keydown event from an element. */\nexport function createKeyboardEvent(type: string, keyOrKeyCode: string | number | KeyboardEventOptions, target?: Element): KeyboardEvent {\n  const { key, keyCode, modifiers } = parseKeyOptions(keyOrKeyCode);\n\n  const event = document.createEvent('KeyboardEvent') as any;\n  const originalPreventDefault = event.preventDefault;\n\n  // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n  if (event.initKeyEvent) {\n    event.initKeyEvent(type, true, true, window, modifiers.control, modifiers.alt, modifiers.shift, modifiers.meta, keyCode);\n  } else {\n    // `initKeyboardEvent` expects to receive modifiers as a whitespace-delimited string\n    // See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\n    const modifiersStr = (modifiers.control\n      ? 'Control '\n      : '' + modifiers.alt\n      ? 'Alt '\n      : '' + modifiers.shift\n      ? 'Shift '\n      : '' + modifiers.meta\n      ? 'Meta'\n      : ''\n    ).trim();\n    event.initKeyboardEvent(\n      type,\n      true /* canBubble */,\n      true /* cancelable */,\n      window /* view */,\n      0 /* char */,\n      key /* key */,\n      0 /* location */,\n      modifiersStr /* modifiersList */,\n      false /* repeat */\n    );\n  }\n\n  // Webkit Browsers don't set the keyCode when calling the init function.\n  // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n  Object.defineProperties(event, {\n    keyCode: { get: () => keyCode },\n    key: { get: () => key },\n    target: { get: () => target },\n    altKey: { get: () => !!modifiers.alt },\n    ctrlKey: { get: () => !!modifiers.control },\n    shiftKey: { get: () => !!modifiers.shift },\n    metaKey: { get: () => !!modifiers.meta }\n  });\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  // tslint:disable-next-line\n  event.preventDefault = function() {\n    Object.defineProperty(event, 'defaultPrevented', { configurable: true, get: () => true });\n\n    return originalPreventDefault.apply(this, arguments);\n  };\n\n  return event;\n}\n\n/** Creates a fake event object with any desired event type. */\nexport function createFakeEvent(type: string, canBubble: boolean = false, cancelable: boolean = true): Event {\n  const event = document.createEvent('Event');\n  event.initEvent(type, canBubble, cancelable);\n\n  return event;\n}\n","/**\n * Credit - Angular Material\n */\n\nimport { createFakeEvent, createKeyboardEvent, createMouseEvent, createTouchEvent } from './event-creators';\nimport { KeyboardEventOptions } from './types';\n\n/**\n * Utility to dispatch any event on a Node.\n *\n * @publicApi\n */\nexport function dispatchEvent<E extends Event = Event>(node: Node | Window, event: E): E {\n  node.dispatchEvent(event);\n\n  return event;\n}\n\n/**\n * Shorthand to dispatch a fake event on a specified node.\n *\n * dispatchFakeEvent(element, 'mousedown');\n *\n * @publicApi\n */\nexport function dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\n  return dispatchEvent(node, createFakeEvent(type, canBubble));\n}\n\n/**\n * Shorthand to dispatch a keyboard event with a specified key.\n *\n *  dispatchKeyboardEvent(calendarBodyEl, 'keydown', 'LEFT_ARROW');\n *\n *  @publicApi\n */\nexport function dispatchKeyboardEvent(\n  node: Node,\n  type: string,\n  keyOrKeyCode: string | number | KeyboardEventOptions,\n  target?: Element\n): KeyboardEvent {\n  return dispatchEvent(node, createKeyboardEvent(type, keyOrKeyCode, target));\n}\n\n/**\n * Shorthand to dispatch a mouse event on the specified coordinates.\n *\n *  dispatchMouseEvent(rippleTarget, 'mousedown', 50, 75);\n *  dispatchMouseEvent(rippleTarget, 'mouseup');\n *\n *  @publicApi\n */\nexport function dispatchMouseEvent(\n  node: Node,\n  type: string,\n  x: number = 0,\n  y: number = 0,\n  event: MouseEvent = createMouseEvent(type, x, y)\n): MouseEvent {\n  return dispatchEvent(node, event);\n}\n\n/**\n * Shorthand to dispatch a touch event on the specified coordinates.\n *\n * dispatchTouchEvent(rippleTarget, 'touchstart');\n *\n * @publicApi\n */\nexport function dispatchTouchEvent(node: HTMLElement | Window | Document, type: string, x: number = 0, y: number = 0): Event {\n  return dispatchEvent(node, createTouchEvent(type, x, y));\n}\n","import { dispatchFakeEvent } from '../dispatch-events';\n\n/**\n * Patches an elements focus and blur methods to emit events consistently and predictably.\n * This is necessary, because some browsers, like IE11, will call the focus handlers asynchronously,\n * while others won't fire them at all if the browser window is not focused.\n *\n * patchElementFocus(triggerEl);\n */\nexport function patchElementFocus(element: HTMLElement): void {\n  element.focus = () => dispatchFakeEvent(element, 'focus');\n  element.blur = () => dispatchFakeEvent(element, 'blur');\n}\n","import { dispatchFakeEvent } from './dispatch-events';\n\n/**\n * Focuses an input or textarea, sets its value and dispatches\n * the `input` or `textarea` event, simulating the user typing.\n * @param value Value to be set on the input.\n * @param element Element onto which to set the value.\n *\n * typeInElement('al', input);\n */\nexport function typeInElement(value: string, element: HTMLElement | Document | Window): void {\n  if (!(element instanceof HTMLInputElement) && !(element instanceof HTMLTextAreaElement)) {\n    return;\n  }\n\n  element.focus();\n  element.value = value;\n  dispatchFakeEvent(element, 'input', true);\n}\n","import { dispatchFakeEvent } from './dispatch-events';\nimport { isString, isHTMLOptionElementArray, SelectOptions } from './types';\n\n/**\n * Focuses a select element, selects the correct options and dispatches\n * the `change` event, simulating the user selecting an option\n * @param options Options to be selected.\n * @param element Element onto which to select the options.\n * @param config Object with extra config to dispatch change event when option selected\n *\n * selectOption('al' | ['al', 'ab'], select, config);\n */\nexport function selectOption(\n  options: SelectOptions,\n  element: HTMLElement | HTMLSelectElement | Document | Window,\n  config: { emitEvents: boolean }\n): void {\n  if (!(element instanceof HTMLSelectElement)) {\n    return;\n  }\n\n  element.focus();\n\n  if (isString(options)) {\n    const option: HTMLOptionElement | null = element.querySelector(`option[value=\"${options}\"]`);\n    if (!option) {\n      return;\n    }\n\n    setOptionSelected(option, element, config);\n  } else if (options instanceof HTMLOptionElement) {\n    setOptionSelected(options, element, config);\n  } else {\n    if (!element.multiple) {\n      return;\n    }\n\n    if (isHTMLOptionElementArray(options)) {\n      options.forEach(option => setOptionSelected(option, element, config));\n    } else {\n      element.querySelectorAll('option').forEach(opt => {\n        if (options.includes(opt.value)) {\n          setOptionSelected(opt, element, config);\n        }\n      });\n    }\n  }\n}\n\n/**\n * Set the option in the HTMLSelectElement to selected\n * @param option HTMLOptionElement to select\n * @param select HTMLSelectElement to add the options to\n * @param config Object with extra config to dispatch change event when option selected\n *\n * setOptionSelected(option, element, config);\n */\nfunction setOptionSelected(option: HTMLOptionElement, select: HTMLSelectElement, config: { emitEvents: boolean }): void {\n  option.selected = true;\n  if (config.emitEvents) {\n    dispatchFakeEvent(select, 'change', true);\n  }\n}\n","import { TestBed } from '@angular/core/testing';\n\nimport { SpyObject } from '../mock';\nimport { Token } from '../token';\n\n/**\n * @internal\n */\nexport abstract class BaseSpectator {\n  public inject<T>(token: Token<T>): SpyObject<T> {\n    return TestBed.inject ? TestBed.inject(token) : TestBed.get(token);\n  }\n}\n","import { ChangeDetectorRef, DebugElement, ElementRef, Type, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ComponentFixture, tick } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\nimport { Token } from '../token';\nimport { DOMSelector } from '../dom-selectors';\nimport { isString, QueryOptions, QueryType, SpectatorElement, EventEmitterType, KeysMatching, KeyboardEventOptions } from '../types';\nimport { SpyObject } from '../mock';\nimport { getChildren, setProps } from '../internals/query';\nimport { patchElementFocus } from '../internals/element-focus';\nimport { createMouseEvent } from '../event-creators';\nimport { dispatchFakeEvent, dispatchKeyboardEvent, dispatchMouseEvent, dispatchTouchEvent } from '../dispatch-events';\nimport { typeInElement } from '../type-in-element';\nimport { selectOption } from '../select-option';\n\nimport { BaseSpectator } from './base-spectator';\n\nconst KEY_UP = 'keyup';\n\n/**\n * @internal\n */\nexport abstract class DomSpectator<I> extends BaseSpectator {\n  constructor(public fixture: ComponentFixture<any>, public debugElement: DebugElement, protected instance: I, public element: Element) {\n    super();\n  }\n\n  public inject<T>(token: Token<T>): SpyObject<T> {\n    return super.inject(token);\n  }\n\n  public detectChanges(): void {\n    this.fixture.detectChanges();\n  }\n\n  public query<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R | null;\n  public query<R>(directive: Type<R>): R | null;\n  public query<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R | null;\n  public query<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R | Element | null {\n    if ((options || {}).root) {\n      if (isString(directiveOrSelector)) {\n        return document.querySelector(directiveOrSelector);\n      }\n\n      if (directiveOrSelector instanceof DOMSelector) {\n        return directiveOrSelector.execute(document as any)[0] || null;\n      }\n    }\n\n    return getChildren<R>(this.debugElement)(directiveOrSelector, options)[0] || null;\n  }\n\n  public queryAll<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R[];\n  public queryAll<R>(directive: Type<R>): R[];\n  public queryAll<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R[];\n  public queryAll<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R[] | Element[] {\n    if ((options || {}).root) {\n      if (isString(directiveOrSelector)) {\n        return Array.from(document.querySelectorAll(directiveOrSelector));\n      }\n\n      if (directiveOrSelector instanceof DOMSelector) {\n        return directiveOrSelector.execute(document as any);\n      }\n    }\n\n    return getChildren<R>(this.debugElement)(directiveOrSelector, options);\n  }\n\n  public queryLast<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R | null;\n  public queryLast<R>(directive: Type<R>): R | null;\n  public queryLast<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R | null;\n  public queryLast<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R | Element | null {\n    let result: (R | Element)[] = [];\n\n    if ((options || {}).root) {\n      if (isString(directiveOrSelector)) {\n        result = Array.from(document.querySelectorAll(directiveOrSelector));\n      }\n\n      if (directiveOrSelector instanceof DOMSelector) {\n        result = directiveOrSelector.execute(document as any);\n      }\n    } else {\n      result = getChildren<R>(this.debugElement)(directiveOrSelector, options);\n    }\n\n    if (result && result.length) {\n      return result[result.length - 1];\n    }\n\n    return null;\n  }\n\n  public setInput<K extends keyof I>(input: Partial<I>): void;\n  public setInput<K extends keyof I>(input: K, inputValue: I[K]): void;\n  public setInput(input: any, value?: any): void {\n    setProps(this.instance, input, value, false);\n    this.debugElement.injector.get(ChangeDetectorRef).detectChanges();\n  }\n\n  public output<T, K extends keyof I = keyof I>(output: K): Observable<T> {\n    const observable = this.instance[output];\n\n    if (!(observable instanceof Observable)) {\n      throw new Error(`${output} is not an @Output`);\n    }\n\n    return observable as Observable<T>;\n  }\n\n  public tick(millis?: number): void {\n    tick(millis);\n    this.detectChanges();\n  }\n\n  public click(selector: SpectatorElement = this.element): void {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof HTMLElement)) {\n      throw new Error(`Cannot click: ${selector} is not a HTMLElement`);\n    }\n\n    element.click();\n    this.detectChanges();\n  }\n\n  public blur(selector: SpectatorElement = this.element): void {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof HTMLElement)) {\n      throw new Error(`Cannot blur: ${selector} is not a HTMLElement`);\n    }\n\n    patchElementFocus(element);\n    element.blur();\n    this.detectChanges();\n  }\n\n  public focus(selector: SpectatorElement = this.element): void {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof HTMLElement)) {\n      throw new Error(`Cannot focus: ${selector} is not a HTMLElement`);\n    }\n\n    patchElementFocus(element);\n    element.focus();\n    this.detectChanges();\n  }\n\n  public dispatchMouseEvent(\n    selector: SpectatorElement = this.element,\n    type: string,\n    x: number = 0,\n    y: number = 0,\n    event: MouseEvent = createMouseEvent(type, x, y)\n  ): MouseEvent {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof Node)) {\n      throw new Error(`Cannot dispatch mouse event: ${selector} is not a node`);\n    }\n\n    const dispatchedEvent = dispatchMouseEvent(element, type, x, y, event);\n    this.detectChanges();\n\n    return dispatchedEvent;\n  }\n\n  public dispatchKeyboardEvent(selector: SpectatorElement, type: string, keyCode: number, target?: Element): KeyboardEvent;\n  public dispatchKeyboardEvent(selector: SpectatorElement, type: string, key: string, target?: Element): KeyboardEvent;\n  public dispatchKeyboardEvent(selector: SpectatorElement, type: string, keyAndCode: KeyboardEventOptions, target?: Element): KeyboardEvent;\n  public dispatchKeyboardEvent(\n    selector: SpectatorElement = this.element,\n    type: string,\n    keyOrKeyCode: string | number | KeyboardEventOptions,\n    target?: Element\n  ): KeyboardEvent {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof Node)) {\n      throw new Error(`Cannot dispatch keyboard event: ${selector} is not a node`);\n    }\n\n    const event = dispatchKeyboardEvent(element, type, keyOrKeyCode, target);\n\n    this.detectChanges();\n\n    return event;\n  }\n\n  public dispatchFakeEvent(selector: SpectatorElement = this.element, type: string, canBubble?: boolean): Event {\n    const event = dispatchFakeEvent(this.getNativeElement(selector), type, canBubble);\n    this.detectChanges();\n\n    return event;\n  }\n\n  public triggerEventHandler<C = any, K extends KeysMatching<C, EventEmitter<any>> = any>(\n    directiveOrSelector: Type<C> | string | DebugElement,\n    eventName: K,\n    eventObj: EventEmitterType<C[K]>\n  ) {\n    const debugElement = this.getDebugElement(directiveOrSelector);\n    if (!debugElement) {\n      // tslint:disable:no-console\n      console.error(`${directiveOrSelector} does not exists`);\n      return;\n    }\n    debugElement.triggerEventHandler(eventName as string, eventObj);\n    this.detectChanges();\n  }\n\n  public get keyboard() {\n    return {\n      pressKey: (key: string, selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, key);\n      },\n      pressEscape: (selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, { key: 'Escape', keyCode: 27 });\n      },\n      pressEnter: (selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, { key: 'Enter', keyCode: 13 });\n      },\n      pressTab: (selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, { key: 'Tab', keyCode: 9 });\n      },\n      pressBackspace: (selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, { key: 'Backspace', keyCode: 8 });\n      }\n    };\n  }\n\n  public get mouse() {\n    return {\n      contextmenu: (selector: SpectatorElement = this.element) => {\n        this.dispatchMouseEvent(selector, 'contextmenu');\n      },\n      dblclick: (selector: SpectatorElement = this.element) => {\n        this.dispatchMouseEvent(selector, 'dblclick');\n      }\n    };\n  }\n\n  public dispatchTouchEvent(selector: SpectatorElement = this.element, type: string, x: number = 0, y: number = 0): void {\n    dispatchTouchEvent(this.getNativeElement(selector), type, x, y);\n    this.detectChanges();\n  }\n\n  public typeInElement(value: string, selector: SpectatorElement = this.element): void {\n    typeInElement(value, this.getNativeElement(selector));\n    this.detectChanges();\n  }\n\n  public selectOption(\n    selector: SpectatorElement = this.element,\n    options: string | string[] | HTMLOptionElement | HTMLOptionElement[],\n    config: { emitEvents: boolean } = { emitEvents: true }\n  ): void {\n    if (!selector) {\n      throw new Error(`Cannot find select: ${selector}`);\n    }\n    selectOption(options, this.getNativeElement(selector), config);\n    this.detectChanges();\n  }\n\n  private getNativeElement(selector: SpectatorElement): HTMLElement | Window | Document {\n    let element;\n\n    // Support global objects window and document\n    if (selector === window || selector === document) {\n      return selector;\n    }\n\n    if (isString(selector)) {\n      const exists = this.debugElement.query(By.css(selector));\n      if (exists) {\n        element = exists.nativeElement;\n      } else {\n        // tslint:disable:no-console\n        console.error(`${selector} does not exists`);\n      }\n    } else if (selector instanceof DOMSelector) {\n      element = selector.execute(document as any)[0] || null;\n    } else {\n      if (selector instanceof DebugElement || selector instanceof ElementRef) {\n        element = selector.nativeElement;\n      } else {\n        element = selector;\n      }\n    }\n\n    return element;\n  }\n\n  private getDebugElement(directiveOrSelector: string | DebugElement | Type<unknown>) {\n    let debugElement: DebugElement;\n    if (isString(directiveOrSelector)) {\n      debugElement = this.debugElement.query(By.css(directiveOrSelector));\n    } else if (directiveOrSelector instanceof DebugElement) {\n      debugElement = directiveOrSelector;\n    } else {\n      debugElement = this.debugElement.query(By.directive(directiveOrSelector));\n    }\n    return debugElement;\n  }\n}\n","import { ChangeDetectorRef, DebugElement, InjectionToken, Type, AbstractType } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\n\nimport { SpyObject } from '../mock';\nimport { Token } from '../token';\nimport { DomSpectator } from '../base/dom-spectator';\n\n/**\n * @publicApi\n */\nexport class Spectator<C> extends DomSpectator<C> {\n  constructor(public fixture: ComponentFixture<C>, public debugElement: DebugElement, protected instance: C, public element: HTMLElement) {\n    super(fixture, debugElement, instance, element);\n  }\n\n  public get component(): C {\n    return this.instance;\n  }\n\n  public inject<T>(token: Token<T>, fromComponentInjector: boolean = false): SpyObject<T> {\n    if (fromComponentInjector) {\n      return this.debugElement.injector.get(token) as SpyObject<T>;\n    }\n\n    return super.inject(token);\n  }\n\n  public detectComponentChanges(): void {\n    if (this.debugElement) {\n      this.debugElement.injector.get(ChangeDetectorRef).detectChanges();\n    } else {\n      this.detectChanges();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Netanel Basal. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NetanelBasal/spectator/blob/master/LICENSE\n */\n\nexport function hex2rgb(hex: string): string {\n  const h = hex.replace('#', '');\n  const matches = h.match(new RegExp('(.{' + h.length / 3 + '})', 'g'))!;\n  const [r, g, b] = matches.map(match => parseInt(match.length === 1 ? match + match : match, 16));\n\n  return `rgb(${r},${g},${b})`;\n}\n\nexport function isHex(value: string): boolean {\n  return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(value);\n}\n\nexport function trim(value: string): string {\n  return (value || '').replace(/\\s/g, '');\n}\n","export function isRunningInJsDom() {\n  return navigator.userAgent.includes('Node.js') || navigator.userAgent.includes('jsdom');\n}\n","/** Credit: https://github.com/unindented/custom-jquery-matchers/tree/master/packages/custom-jquery-matchers */\n// tslint:disable:no-shadowed-variable\n\nimport $ from 'jquery';\n\nimport { hex2rgb, isHex, trim } from './internals/rgb-to-hex';\nimport { isHTMLOptionElementArray, isObject } from './types';\nimport { isRunningInJsDom } from './utils';\n\nexport interface CustomMatcherFactory {\n  (): CustomMatcher;\n}\n\nexport interface CustomMatcher {\n  compare<T>(actual: T, expected: T, ...args: any[]): CustomMatcherResult;\n}\n\nexport interface CustomMatcherResult {\n  pass: boolean;\n  message?: string;\n}\n\nconst hasProperty = (actual: unknown, expected: unknown): boolean => {\n  return expected === undefined ? actual !== undefined : actual === expected;\n};\n\nconst containsProperty = (actual: string, expected: unknown): boolean => {\n  return expected === undefined ? true : actual.includes(expected as string);\n};\n\nconst checkProperty = (\n  el: HTMLElement,\n  prop: object,\n  predicate: (actual, expected) => boolean\n): { pass: boolean; message: () => string } => {\n  let pass = false;\n  let failing = '';\n\n  for (const key of Object.keys(prop)) {\n    const actual = $(el).prop(key);\n    const addendum = prop[key] !== undefined ? ` with value '${prop[key]}'` : '';\n\n    pass = predicate(actual, prop[key]);\n    failing = !pass ? `'${prop}'${addendum}, but had '${actual}'` : '';\n  }\n\n  const message = () => `Expected element${pass ? ' not' : ''} to have property ${failing}`;\n\n  return { pass, message };\n};\n\nconst hasCss = (el: HTMLElement, css: { [key: string]: string }) => {\n  let prop;\n  let value;\n  const $el = $(el);\n  for (prop in css) {\n    if (css.hasOwnProperty(prop)) {\n      value = css[prop];\n\n      if (isHex(value)) {\n        value = hex2rgb(css[prop]);\n      }\n\n      if (value === 'auto' && $el.get(0).style[prop] === 'auto') {\n        continue;\n      }\n\n      if (trim($el.css(prop)) !== trim(value) && trim(el.style[prop]) !== trim(value)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nconst hasSameText = (el: HTMLElement, expected: string | string[] | ((s: string) => boolean), exact = false) => {\n  if (expected && Array.isArray(expected)) {\n    let actual: string;\n    let pass = false;\n    let failing: string;\n\n    $(el).each((i, e) => {\n      actual = exact ? $(e).text() : $.trim($(e).text());\n      pass = exact ? actual === expected[i] : actual.includes(expected[i]);\n      if (!pass) {\n        failing = expected[i];\n\n        return false;\n      }\n    });\n\n    const message = () => `Expected element${pass ? ' not' : ''} to have ${exact ? 'exact' : ''} text '${failing}', but had '${actual}'`;\n\n    return { pass, message };\n  }\n\n  const actual = exact ? $(el).text() : $.trim($(el).text());\n\n  if (expected && typeof expected !== 'string') {\n    const pass = expected(actual);\n    const message = () =>\n      `Expected element${pass ? ' not' : ''} to have ${exact ? 'exact' : ''} text matching '${expected}',` + ` but had '${actual}'`;\n\n    return { pass, message };\n  }\n\n  const pass = exact && !Array.isArray(expected) ? actual === expected : actual.indexOf(expected) !== -1;\n  const message = () => `Expected element${pass ? ' not' : ''} to have ${exact ? 'exact' : ''} text '${expected}', but had '${actual}'`;\n\n  return { pass, message };\n};\n\nconst comparator = (func): CustomMatcherFactory => () => ({\n  compare: func\n});\n\n/**\n *\n * expect('.zippy__content').not.toExist();\n */\nexport const toExist = comparator((el: string | Element) => {\n  const actual = $(el).length;\n  const pass = actual > 0;\n  const message = () => `Expected ${el} element${pass ? ' not' : ''} to exist`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveLength(3);\n */\nexport const toHaveLength = comparator((el: string, expected: number) => {\n  const actual = $(el).length;\n  const pass = actual === expected;\n  const message = () => `Expected element${pass ? ' not' : ''} to have length ${expected}, but had ${actual}`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveId('ID');\n */\nexport const toHaveId = comparator((el, expected) => {\n  const actual = $(el).attr('id');\n  const pass = actual === expected;\n  const message = () => `Expected element${pass ? ' not' : ''} to have ID '${expected}', but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveClass('class');\n * expect('.zippy__content').toHaveClass('class a, class b');\n * expect('.zippy__content').toHaveClass(['class a, class b']);\n */\nexport const toHaveClass = comparator((el, expected: string | string[]) => {\n  if (expected && Array.isArray(expected)) {\n    const actual: string = $(el).attr('class');\n    const expectedClasses = expected.join(' ');\n    const pass = $(el).hasClass(expectedClasses);\n    const message = () => `Expected element${pass ? ' not' : ''} to have value '${expectedClasses}', but had '${actual}'`;\n\n    return { pass, message };\n  }\n\n  const actual = $(el).attr('class');\n  const pass = $(el).hasClass(expected);\n  const message = () => `Expected element${pass ? ' not' : ''} to have class '${expected}', but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n * expect(host.query('.zippy')).toHaveAttribute('id', 'zippy');\n */\nexport const toHaveAttribute = comparator((el, attr: string | object, val) => {\n  if (isObject(attr)) {\n    let pass = false;\n    let failing: string;\n\n    for (const key of Object.keys(attr)) {\n      const actual = $(el).attr(key);\n      const addendum = attr[key] !== undefined ? ` with value '${attr[key]}'` : '';\n      pass = hasProperty(actual, attr[key]);\n      failing = !pass ? `'${attr}'${addendum}, but had '${actual}'` : '';\n    }\n    const message = () => `Expected element${pass ? ' not' : ''} to have attribute ${failing}`;\n\n    return { pass, message };\n  }\n\n  const actual = $(el).attr(attr);\n  const addendum = val !== undefined ? ` with value '${val}'` : '';\n  const pass = hasProperty(actual, val);\n  const message = () => `Expected element${pass ? ' not' : ''} to have attribute '${attr}'${addendum}, but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n *  expect(host.query('.checkbox')).toHaveProperty('checked', true);\n *  expect(host.query('.checkbox')).toHaveProperty({checked: true});\n */\nexport const toHaveProperty = comparator((el, prop, val) => {\n  if (isObject(prop)) {\n    return checkProperty(el, prop, hasProperty);\n  }\n\n  const actual = $(el).prop(prop);\n  const addendum = val !== undefined ? ` with value '${val}'` : '';\n  const pass = hasProperty(actual, val);\n  const message = () => `Expected element${pass ? ' not' : ''} to have property '${prop}'${addendum}, but had '${actual}'`;\n\n  return { pass, message };\n});\n\nexport const toContainProperty = comparator((el, prop, val) => {\n  if (isObject(prop)) {\n    return checkProperty(el, prop, containsProperty);\n  }\n\n  const actual = $(el).prop(prop);\n  const addendum = val !== undefined ? ` with value '${val}'` : '';\n  const pass = containsProperty(actual, val);\n  const message = () => `Expected element${pass ? ' not' : ''} to have property '${prop}'${addendum}, but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveText('Content');\n * expect('.zippy__content').toHaveText(['Content A', 'Content B']);\n *\n * expect('.zippy__content').toHaveText((text) => text.includes('..');\n */\nexport const toHaveText = comparator((el, expected, exact = false) => hasSameText(el, expected, exact));\n\nexport const toHaveExactText = comparator((el, expected) => hasSameText(el, expected, true));\n\nexport const toContainText = toHaveText;\n\n/**\n *\n * expect('.zippy__content').toHaveValue('value');\n * expect('.zippy__content').toHaveValue(['value a', 'value b']);\n */\nexport const toHaveValue = comparator((el, expected) => {\n  if (expected && Array.isArray(expected)) {\n    let actual: string;\n    let pass = false;\n    let failing: string;\n\n    $(el).each((i, e) => {\n      actual = $(e).val();\n      pass = actual === expected[i];\n      if (!pass) {\n        failing = expected[i];\n\n        return false;\n      }\n    });\n\n    const message = () => `Expected element${pass ? ' not' : ''} to have value '${failing}', but had '${actual}'`;\n\n    return { pass, message };\n  }\n\n  const actual = $(el).val();\n  const pass = actual === expected;\n  const message = () => `Expected element${pass ? ' not' : ''} to have value '${expected}', but had '${actual}'`;\n\n  return { pass, message };\n});\n\nexport const toContainValue = toHaveValue;\n\n/**\n *\n *  expect(host.element).toHaveStyle({\n *    backgroundColor: 'rgba(0, 0, 0, 0.1)'\n *  });\n */\nexport const toHaveStyle = comparator((el, expected) => {\n  const pass = hasCss(el, expected);\n  const message = () => `Expected element${pass ? ' not' : ''} to have CSS ${JSON.stringify(expected)}`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveData({data: 'role', val: 'admin'});\n */\nexport const toHaveData = comparator((el, { data, val }) => {\n  const actual = $(el).data(data);\n  const addendum = val !== undefined ? ` with value '${val}'` : '';\n  const pass = hasProperty(actual, val);\n  const message = () => `Expected element${pass ? ' not' : ''} to have data '${data}'${addendum}, but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.checkbox').toBeChecked();\n */\nexport const toBeChecked = comparator(el => {\n  const pass = $(el).is(':checked');\n  const message = () => `Expected element${pass ? ' not' : ''} to be checked`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.checkbox').toBeDisabled();\n */\nexport const toBeDisabled = comparator(el => {\n  const pass = $(el).is(':disabled');\n  const message = () => `Expected element${pass ? ' not' : ''} to be disabled`;\n\n  return { pass, message };\n});\n\n/**\n * An empty element is an element without child elements or text.\n *\n * expect('div').toBeEmpty();\n */\nexport const toBeEmpty = comparator(el => {\n  const pass = $(el).is(':empty');\n  const message = () => `Expected element${pass ? ' not' : ''} to be empty`;\n\n  return { pass, message };\n});\n\n/**\n * Hidden elements are elements that have:\n * 1. Display property set to \"none\"\n * 2. Width and height set to 0 (check not applied in jest)\n * 3. A hidden parent element (this also hides child elements)\n * 4. Type equal to \"hidden\" (only for form elements)\n * 5. A \"hidden\" attribute\n */\nfunction isHidden(elOrSelector: HTMLElement | string): boolean {\n  let el = $(elOrSelector)[0];\n\n  if (!el) {\n    return true;\n  }\n\n  const hiddenWhen = [\n    el => !(el.offsetWidth || el.offsetHeight || el.getClientRects().length),\n    el => el.style.display === 'none',\n    el => el.style.visibility === 'hidden',\n    el => el.type === 'hidden',\n    el => el.hasAttribute('hidden')\n  ];\n\n  if (isRunningInJsDom()) {\n    // When running in JSDOM (Jest), offset-properties and client rects are always reported as 0\n    // - hence, let's take a more \"naive\" approach here. (https://github.com/jsdom/jsdom/issues/135)\n    hiddenWhen.shift();\n  }\n\n  while (el) {\n    if (el === document) {\n      break;\n    }\n\n    if (hiddenWhen.some(rule => rule(el))) {\n      return true;\n    }\n\n    el = el.parentNode;\n  }\n\n  return false;\n}\n\n/**\n * Hidden elements are elements that have:\n * 1. Display property set to \"none\"\n * 2. Width and height set to 0\n * 3. A hidden parent element (this also hides child elements)\n * 4. Type equal to \"hidden\" (only for form elements)\n * 5. A \"hidden\" attribute\n *\n * expect('div').toBeHidden();\n *\n */\nexport const toBeHidden = comparator(el => {\n  const pass = isHidden(el);\n  const message = () => `Expected element${pass ? ' not' : ''} to be hidden`;\n\n  return { pass, message };\n});\n\n/**\n * The :selected selector selects option elements that are pre-selected.\n *\n * expect('div').toBeSelected();\n *\n */\nexport const toBeSelected = comparator(el => {\n  const pass = $(el).is(':selected');\n  const message = () => `Expected element${pass ? ' not' : ''} to be selected`;\n\n  return { pass, message };\n});\n\n/**\n * Hidden elements are elements that have:\n * 1. Display property set to \"none\"\n * 2. Width and height set to 0\n * 3. A hidden parent element (this also hides child elements)\n * 4. Type equal to \"hidden\" (only for form elements)\n * 5. A \"hidden\" attribute\n *\n * expect('div').toBeVisible();\n *\n */\nexport const toBeVisible = comparator(el => {\n  const pass = !isHidden(el);\n\n  const message = () => `Expected element${pass ? ' not' : ''} to be visible`;\n\n  return { pass, message };\n});\n\n/**\n * The :focus selector selects the element that currently has focus.\n *\n * expect('input').toBeFocused();\n */\nexport const toBeFocused = comparator(el => {\n  const element = $(el).get(0);\n  const pass = element === element.ownerDocument.activeElement;\n  const message = () => `Expected element${pass ? ' not' : ''} to be focused`;\n\n  return { pass, message };\n});\n\n/**\n * Check to see if the set of matched elements matches the given selector\n * returns true if the dom contains the element\n *\n * expect('div').toBeMatchedBy('.js-something')\n */\nexport const toBeMatchedBy = comparator((el, expected) => {\n  const actual = $(el).filter(expected).length;\n  const pass = actual > 0;\n  const message = () => `Expected element${pass ? ' not' : ''} to be matched by '${expected}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('div').toHaveDescendant('.child')\n */\nexport const toHaveDescendant = comparator((el, selector) => {\n  const actual = $(el).find(selector).length;\n  const pass = actual > 0;\n  const message = () => `Expected element${pass ? ' not' : ''} to contain child '${selector}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('div').toHaveDescendantWithText({selector: '.child', text: 'text'})\n */\nexport const toHaveDescendantWithText = comparator((el, { selector, text }) => {\n  const actual = $.trim(\n    $(el)\n      .find(selector)\n      .text()\n  );\n  if (text && $.isFunction(text.test)) {\n    const pass = text.test(actual);\n    const message = () =>\n      `Expected element${pass ? ' not' : ''} to have descendant '${selector}' with text matching '${text}',` + ` but had '${actual}'`;\n\n    return { pass, message };\n  }\n  const pass = actual.indexOf(text) !== -1;\n  const message = () => `Expected element${pass ? ' not' : ''} to have descendant '${selector}' with text '${text}', but had '${actual}'`;\n\n  return { pass, message };\n});\n\nexport const toHaveSelectedOptions = comparator((el, expected) => {\n  if (expected instanceof HTMLOptionElement) {\n    const actual = $(el).find(':selected');\n\n    const pass = actual.is($(expected));\n\n    const message = () =>\n      `Expected element${pass ? ' not' : ''} to have options '[${expected.outerHTML}]' but had '[${actual[0].outerHTML}]'`;\n\n    return { pass, message };\n  }\n\n  if (isHTMLOptionElementArray(expected)) {\n    const actual = $(el).find(':selected');\n\n    const pass = actual.length === expected.length && actual.toArray().every((_, index) => $(actual[index]).is(expected[index]));\n\n    const expectedOptionsString = $(expected)\n      .get()\n      .map(option => option.outerHTML)\n      .join(',');\n\n    const actualOptionsString = actual\n      .get()\n      .map(option => option.outerHTML)\n      .join(',');\n\n    const message = () =>\n      `Expected element${pass ? ' not' : ''} to have options '[${expectedOptionsString}]' but had '[${actualOptionsString}]'`;\n\n    return { pass, message };\n  }\n\n  const actual = $(el).val();\n  const pass = JSON.stringify([...actual]) === JSON.stringify([...expected]);\n\n  const expectedOptionsString = Array.isArray(expected)\n    ? expected.reduce((acc: string, val: string, i) => acc + `${i === expected.length ? '' : ','}${val}`)\n    : expected;\n  const message = () => `Expected element${pass ? ' not' : ''} to have options '[${expectedOptionsString}]' but had '[${actual}]'`;\n\n  return { pass, message };\n});\n","import { CustomMatcherFactory } from './matchers';\n\ndeclare var jasmine: any;\ndeclare var jest: any;\n\nexport function addMatchers(matchers: Record<string, CustomMatcherFactory>): void {\n  if (!matchers) return;\n\n  if (typeof jasmine !== 'undefined') {\n    jasmine.addMatchers(matchers);\n  }\n  if (typeof jest !== 'undefined') {\n    const jestExpectExtend = {};\n    for (const key of Object.keys(matchers)) {\n      if (key.startsWith('to')) jestExpectExtend[key] = matchers[key]().compare;\n    }\n\n    (expect as any).extend(jestExpectExtend);\n  }\n}\n","import { TestModuleMetadata } from '@angular/core/testing';\n\nlet globals: TestModuleMetadata = {\n  providers: [],\n  declarations: [],\n  imports: []\n};\n\nexport function defineGlobalsInjections(config: TestModuleMetadata): void {\n  globals = { ...globals, ...config };\n}\n\nexport function getGlobalsInjections(): TestModuleMetadata {\n  return globals;\n}\n","import { SchemaMetadata, Type } from '@angular/core';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { getGlobalsInjections } from '../globals-injections';\n\nimport { BaseSpectatorOptions } from './options';\n\n/**\n * @publicApi\n */\nexport interface ModuleMetadata {\n  declarations: any[];\n  imports: any[];\n  providers: any[];\n  entryComponents: Type<any>[];\n  schemas?: (SchemaMetadata | any[])[];\n}\n\n/**\n * @internal\n */\nexport function initialModule(options: Required<BaseSpectatorOptions>): ModuleMetadata {\n  const globals = { imports: [], declarations: [], providers: [], ...getGlobalsInjections() };\n\n  return {\n    declarations: [...globals.declarations, ...options.declarations, ...options.entryComponents],\n    imports: [...(options.disableAnimations ? [NoopAnimationsModule] : []), ...globals.imports, ...options.imports],\n    providers: [...globals.providers, ...options.providers, ...options.mocks.map(type => options.mockProvider(type))],\n    entryComponents: [...options.entryComponents]\n  };\n}\n","import { NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { initialModule, ModuleMetadata } from '../base/initial-module';\n\nimport { SpectatorOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialSpectatorModule<C>(options: Required<SpectatorOptions<C>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  if (options.declareComponent) {\n    moduleMetadata.declarations.push(options.component);\n  }\n\n  moduleMetadata.schemas = [options.shallow ? NO_ERRORS_SCHEMA : options.schemas || []];\n\n  return moduleMetadata;\n}\n","import { OptionalsRequired } from '../types';\n\n/**\n * @internal\n */\nexport function merge<T>(defaults: OptionalsRequired<T>, overrides?: T): Required<T> {\n  // tslint:disable-next-line:no-object-literal-type-assertion\n  return { ...defaults, ...overrides } as Required<T>;\n}\n","/** Credit: Valentin Buryakov */\nimport { FactoryProvider, Type, AbstractType } from '@angular/core';\n\ntype Writable<T> = { -readonly [P in keyof T]: T[P] };\n\n/**\n * @publicApi\n */\nexport interface CompatibleSpy extends jasmine.Spy {\n  /**\n   * By chaining the spy with and.returnValue, all calls to the function will return a specific\n   * value.\n   */\n  andReturn(val: any): void;\n\n  /**\n   * By chaining the spy with and.callFake, all calls to the spy will delegate to the supplied\n   * function.\n   */\n  andCallFake(fn: Function): this;\n\n  /**\n   * removes all recorded calls\n   */\n  reset(): void;\n}\n\n/**\n * @publicApi\n */\nexport type SpyObject<T> = T &\n  { [P in keyof T]: T[P] extends Function ? T[P] & CompatibleSpy : T[P] } & {\n    /**\n     * Casts to type without readonly properties\n     */\n    castToWritable(): Writable<T>;\n  };\n\n/**\n * @internal\n */\nexport function installProtoMethods<T>(mock: any, proto: any, createSpyFn: Function): void {\n  if (proto === null || proto === Object.prototype) {\n    return;\n  }\n\n  for (const key of Object.getOwnPropertyNames(proto)) {\n    const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n\n    if (!descriptor) {\n      continue;\n    }\n\n    if (typeof descriptor.value === 'function' && key !== 'constructor' && typeof mock[key] === 'undefined') {\n      mock[key] = createSpyFn(key);\n    } else if (descriptor.get && !mock.hasOwnProperty(key)) {\n      Object.defineProperty(mock, key, {\n        set: value => (mock[`_${key}`] = value),\n        get: () => mock[`_${key}`],\n        configurable: true\n      });\n    }\n  }\n\n  installProtoMethods(mock, Object.getPrototypeOf(proto), createSpyFn);\n\n  mock.castToWritable = () => mock;\n}\n\n/**\n * @publicApi\n */\nexport function createSpyObject<T>(type: Type<T> | AbstractType<T>, template?: Partial<Record<keyof T, any>>): SpyObject<T> {\n  const mock: any = { ...template } || {};\n\n  installProtoMethods<T>(mock, type.prototype, name => {\n    const newSpy: jasmine.Spy & Partial<CompatibleSpy> = jasmine.createSpy(name);\n    newSpy.andCallFake = (fn: (...args: any[]) => any) => <any>newSpy.and.callFake(fn);\n    newSpy.andReturn = val => newSpy.and.returnValue(val);\n    newSpy.reset = () => newSpy.calls.reset();\n    // revisit return null here (previously needed for rtts_assert).\n    newSpy.and.returnValue(null);\n\n    return newSpy;\n  });\n\n  return mock;\n}\n\n/**\n * @publicApi\n */\nexport function mockProvider<T>(type: Type<T> | AbstractType<T>, properties?: Partial<Record<keyof T, any>>): FactoryProvider {\n  return {\n    provide: type,\n    useFactory: () => createSpyObject(type, properties)\n  };\n}\n\n/**\n * @publicApi\n */\nexport type MockProvider = typeof mockProvider;\n","import { NgModule, Provider, SchemaMetadata, Type } from '@angular/core';\nimport { MetadataOverride } from '@angular/core/testing';\n\nimport { merge } from '../internals/merge';\nimport { mockProvider, MockProvider } from '../mock';\nimport { OptionalsRequired } from '../types';\n\n/**\n * @internal\n */\nexport interface BaseSpectatorOptions {\n  disableAnimations?: boolean;\n  entryComponents?: Type<any>[];\n  mocks?: Type<any>[];\n  mockProvider?: MockProvider;\n  providers?: any[];\n  declarations?: any[];\n  imports?: any[];\n  schemas?: (SchemaMetadata | any[])[];\n  overrideModules?: [Type<any>, MetadataOverride<NgModule>][];\n}\n\n/**\n * @internal\n */\nexport interface BaseSpectatorOverrides {\n  providers?: Provider[];\n}\n\nconst defaultOptions: OptionalsRequired<BaseSpectatorOptions> = {\n  disableAnimations: true,\n  entryComponents: [],\n  mocks: [],\n  mockProvider,\n  providers: [],\n  declarations: [],\n  imports: [],\n  schemas: [],\n  overrideModules: []\n};\n\n/**\n * @internal\n */\nexport function getDefaultBaseOptions(options?: BaseSpectatorOptions): Required<BaseSpectatorOptions> {\n  return merge<BaseSpectatorOptions>(defaultOptions, options);\n}\n","import { Type } from '@angular/core';\n\nimport { getDefaultBaseOptions, BaseSpectatorOptions } from '../base/options';\nimport { merge } from '../internals/merge';\nimport { OptionalsRequired } from '../types';\n\n/**\n * @publicApi\n */\nexport interface SpectatorOptions<C> extends BaseSpectatorOptions {\n  component: Type<C>;\n  shallow?: boolean;\n  componentProviders?: any[];\n  componentViewProviders?: any[];\n  detectChanges?: boolean;\n  declareComponent?: boolean;\n  componentMocks?: Type<any>[];\n  componentViewProvidersMocks?: Type<any>[];\n}\n\nconst defaultSpectatorOptions: OptionalsRequired<SpectatorOptions<any>> = {\n  ...getDefaultBaseOptions(),\n  shallow: false,\n  declareComponent: true,\n  detectChanges: true,\n  componentProviders: [],\n  componentViewProviders: [],\n  componentMocks: [],\n  componentViewProvidersMocks: []\n};\n\n/**\n * @internal\n */\nexport function getSpectatorDefaultOptions<C>(overrides?: SpectatorOptions<C>): Required<SpectatorOptions<C>> {\n  return merge(defaultSpectatorOptions, overrides);\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\n\nimport { BaseSpectatorOptions, BaseSpectatorOverrides } from '../base/options';\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\n\nimport { initialSpectatorModule } from './initial-module';\nimport { getSpectatorDefaultOptions, SpectatorOptions } from './options';\nimport { Spectator } from './spectator';\n\n/**\n * @publicApi\n */\nexport type SpectatorFactory<C> = (options?: SpectatorOverrides<C>) => Spectator<C>;\n\n/**\n * @publicApi\n */\nexport interface SpectatorOverrides<C> extends BaseSpectatorOverrides {\n  detectChanges?: boolean;\n  props?: Partial<C>;\n}\n\n/**\n * @internal\n */\nexport function overrideComponentIfProviderOverridesSpecified<C>(options: Required<SpectatorOptions<C>>): void {\n  const hasProviderOverrides = options.componentProviders.length || options.componentMocks.length;\n  const hasViewProviders = options.componentViewProviders.length || options.componentViewProvidersMocks.length;\n  if (hasProviderOverrides || hasViewProviders) {\n    let providerConfiguration = {};\n    if (hasProviderOverrides) {\n      providerConfiguration = {\n        providers: [...options.componentProviders, ...options.componentMocks.map(p => options.mockProvider(p))]\n      };\n    }\n    if (hasViewProviders) {\n      providerConfiguration = {\n        ...providerConfiguration,\n        viewProviders: [...options.componentViewProviders, ...options.componentViewProvidersMocks.map(p => options.mockProvider(p))]\n      };\n    }\n    TestBed.overrideComponent(options.component, {\n      set: providerConfiguration\n    });\n  }\n}\n\n/**\n * @internal\n */\nexport function overrideModules(options: Required<BaseSpectatorOptions>): void {\n  if (options.overrideModules.length) {\n    options.overrideModules.forEach(overrideModule => {\n      const [ngModule, override] = overrideModule;\n\n      TestBed.overrideModule(ngModule, override);\n    });\n  }\n}\n\n/**\n * @publicApi\n */\nexport function createComponentFactory<C>(typeOrOptions: Type<C> | SpectatorOptions<C>): SpectatorFactory<C> {\n  const options = isType(typeOrOptions)\n    ? getSpectatorDefaultOptions<C>({ component: typeOrOptions })\n    : getSpectatorDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialSpectatorModule<C>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata).overrideModule(BrowserDynamicTestingModule, {\n        set: {\n          entryComponents: moduleMetadata.entryComponents\n        }\n      });\n\n      overrideModules(options);\n\n      overrideComponentIfProviderOverridesSpecified(options);\n\n      TestBed.compileComponents();\n    })\n  );\n\n  return (overrides?: SpectatorOverrides<C>) => {\n    const defaults: SpectatorOverrides<C> = { props: {}, detectChanges: true, providers: [] };\n    const { detectChanges, props, providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    const spectator = createSpectator(options, props);\n\n    if (options.detectChanges && detectChanges) {\n      spectator.detectChanges();\n    }\n\n    return spectator;\n  };\n}\n\nfunction createSpectator<C>(options: Required<SpectatorOptions<C>>, props?: Partial<C>): Spectator<C> {\n  const fixture = TestBed.createComponent(options.component);\n  const debugElement = fixture.debugElement;\n\n  const component = setProps(fixture.componentInstance, props);\n\n  return new Spectator(fixture, debugElement, component, debugElement.nativeElement);\n}\n","import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\n\nimport { DOMSelector } from '../dom-selectors';\nimport { getChildren, setProps } from '../internals/query';\nimport { Spectator } from '../spectator/spectator';\nimport { Token } from '../token';\nimport { isString, QueryOptions, QueryType } from '../types';\n\nimport { HostComponent } from './host-component';\n\n/**\n * @publicApi\n */\nexport class SpectatorHost<C, H = HostComponent> extends Spectator<C> {\n  constructor(\n    public hostComponent: H,\n    public hostDebugElement: DebugElement,\n    public hostElement: Element,\n    public hostFixture: ComponentFixture<any>,\n    public debugElement: DebugElement,\n    componentInstance: C,\n    public element: HTMLElement\n  ) {\n    super(hostFixture, debugElement, componentInstance, element);\n  }\n\n  public queryHost<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R | null;\n  public queryHost<R>(directive: Type<R>): R | null;\n  public queryHost<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R | null;\n  public queryHost<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R | Element | null {\n    if ((options || {}).root && isString(directiveOrSelector)) {\n      return document.querySelector(directiveOrSelector);\n    }\n\n    return getChildren<R>(this.hostDebugElement)(directiveOrSelector, options)[0] || null;\n  }\n\n  public queryHostAll<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R[];\n  public queryHostAll<R>(directive: Type<R>): R[];\n  public queryHostAll<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R[];\n  public queryHostAll<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R[] | Element[] {\n    if ((options || {}).root && isString(directiveOrSelector)) {\n      return Array.from(document.querySelectorAll(directiveOrSelector));\n    }\n\n    return getChildren<R>(this.hostDebugElement)(directiveOrSelector, options);\n  }\n\n  public setHostInput<K extends keyof H>(input: Partial<H>): void;\n  public setHostInput<K extends keyof H>(input: K, inputValue: H[K]): void;\n  public setHostInput(input: any, value?: any): void {\n    setProps(this.hostComponent, input, value, false);\n    this.detectChanges();\n  }\n}\n","import { DebugNode, Predicate, Type } from '@angular/core';\n\n// TODO (dirkluijk): remove after upgrading to Angular 8.2\n// see: https://github.com/angular/angular/commit/10a1e1974b816ebb979dc10586b160ee07ad8356\nexport function nodeByDirective(type: Type<any>): Predicate<DebugNode> {\n  return debugNode => debugNode.providerTokens.includes(type);\n}\n","import { ModuleMetadata } from '../base/initial-module';\nimport { initialSpectatorModule } from '../spectator/initial-module';\n\nimport { SpectatorHostOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialSpectatorWithHostModule<C, H>(options: Required<SpectatorHostOptions<C, H>>): ModuleMetadata {\n  const moduleMetadata = initialSpectatorModule<C>(options);\n\n  moduleMetadata.declarations.push(options.host);\n\n  return moduleMetadata;\n}\n","import { Component, NgModule } from '@angular/core';\n\n@Component({\n  template: ''\n})\nexport class HostComponent {}\n\n/*\n  This is an unused module to resolve the ng build error:\n    'Cannot determine the module for class HostComponent'\n\n  Reference: https://github.com/angular/issues/13590\n*/\n@NgModule({\n  declarations: [HostComponent]\n})\nexport class HostModule {}\n","import { Type } from '@angular/core';\n\nimport { merge } from '../internals/merge';\nimport { getSpectatorDefaultOptions, SpectatorOptions } from '../spectator/options';\nimport { OptionalsRequired } from '../types';\n\nimport { HostComponent } from './host-component';\n\n/**\n * @publicApi\n */\nexport interface SpectatorHostOptions<C, H> extends SpectatorOptions<C> {\n  host?: Type<H>;\n  template?: string;\n}\n\nconst defaultSpectatorHostOptions: OptionalsRequired<SpectatorHostOptions<any, any>> = {\n  ...getSpectatorDefaultOptions<any>(),\n  host: HostComponent,\n  template: ''\n};\n\n/**\n * @internal\n */\nexport function getSpectatorHostDefaultOptions<C, H>(overrides?: SpectatorHostOptions<C, H>): Required<SpectatorHostOptions<C, H>> {\n  return merge(defaultSpectatorHostOptions, overrides);\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\n\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { overrideComponentIfProviderOverridesSpecified, overrideModules, SpectatorOverrides } from '../spectator/create-factory';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\nimport { nodeByDirective } from '../internals/node-by-directive';\n\nimport { HostComponent } from './host-component';\nimport { initialSpectatorWithHostModule } from './initial-module';\nimport { getSpectatorHostDefaultOptions, SpectatorHostOptions } from './options';\nimport { SpectatorHost } from './spectator-host';\n\n/**\n * @publicApi\n */\nexport type SpectatorHostFactory<C, H> = <HP>(\n  template: string,\n  overrides?: SpectatorHostOverrides<C, H, HP>\n) => SpectatorHost<C, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport type PresetSpectatorHostFactory<C, H> = <HP>(\n  template?: string,\n  overrides?: SpectatorHostOverrides<C, H, HP>\n) => SpectatorHost<C, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport interface SpectatorHostOverrides<C, H, HP> extends SpectatorOverrides<C> {\n  hostProps?: HostComponent extends H ? HP : Partial<H>;\n}\n\n/**\n * @publicApi\n */\nexport function createHostFactory<C, H = HostComponent>(\n  options: SpectatorHostOptions<C, H> & { template: string }\n): PresetSpectatorHostFactory<C, H>;\n/**\n * @publicApi\n */\nexport function createHostFactory<C, H = HostComponent>(typeOrOptions: Type<C> | SpectatorHostOptions<C, H>): SpectatorHostFactory<C, H>;\nexport function createHostFactory<C, H = HostComponent>(typeOrOptions: Type<C> | SpectatorHostOptions<C, H>): SpectatorHostFactory<C, H> {\n  const options = isType(typeOrOptions)\n    ? getSpectatorHostDefaultOptions<C, H>({ component: typeOrOptions })\n    : getSpectatorHostDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialSpectatorWithHostModule<C, H>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata);\n\n      overrideModules(options);\n\n      overrideComponentIfProviderOverridesSpecified(options);\n    })\n  );\n\n  return <HP>(template?: string, overrides?: SpectatorHostOverrides<C, H, HP>) => {\n    const defaults: SpectatorHostOverrides<C, H, HP> = { props: {}, hostProps: {} as any, detectChanges: true, providers: [] };\n    const { detectChanges, props, hostProps, providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    TestBed.overrideModule(BrowserDynamicTestingModule, {\n      set: {\n        entryComponents: moduleMetadata.entryComponents\n      }\n    }).overrideComponent(options.host, {\n      set: { template: template || options.template }\n    });\n\n    const spectator = createSpectatorHost(options, props, hostProps);\n\n    if (options.detectChanges && detectChanges) {\n      spectator.detectChanges();\n    }\n\n    return spectator;\n  };\n}\n\nfunction createSpectatorHost<C, H, HP>(\n  options: Required<SpectatorHostOptions<C, H>>,\n  props?: Partial<C>,\n  hostProps?: HP\n): SpectatorHost<C, H & HP> {\n  const hostFixture = TestBed.createComponent(options.host);\n  const debugElement = hostFixture.debugElement.query(By.directive(options.component)) || hostFixture.debugElement;\n  const debugNode = hostFixture.debugElement.queryAllNodes(nodeByDirective(options.component))[0];\n\n  if (!debugNode) {\n    throw new Error(`Cannot find component/directive ${options.component} in host template 😔`);\n  }\n\n  const hostComponent = setProps(hostFixture.componentInstance, hostProps);\n  const component = setProps(debugNode.injector.get(options.component), props);\n\n  return new SpectatorHost(\n    hostComponent,\n    hostFixture.debugElement,\n    hostFixture.nativeElement,\n    hostFixture,\n    debugElement,\n    component,\n    debugElement.nativeElement\n  );\n}\n","import { DebugElement, InjectionToken, Type, AbstractType } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\n\nimport { setProps } from '../internals/query';\nimport { Token } from '../token';\nimport { DomSpectator } from '../base/dom-spectator';\nimport { SpyObject } from '../mock';\nimport { HostComponent } from '../spectator-host/host-component';\n\n/**\n * @publicApi\n */\nexport class SpectatorDirective<D, H = HostComponent> extends DomSpectator<D> {\n  constructor(\n    public hostComponent: H,\n    public fixture: ComponentFixture<any>,\n    public debugElement: DebugElement,\n    protected instance: D,\n    public element: Element\n  ) {\n    super(fixture, debugElement, instance, element);\n  }\n\n  public get directive(): D {\n    return this.instance;\n  }\n\n  public inject<T>(token: Token<T>, fromDirectiveInjector: boolean = false): SpyObject<T> {\n    if (fromDirectiveInjector) {\n      return this.debugElement.injector.get(token) as SpyObject<T>;\n    }\n\n    return super.inject(token);\n  }\n\n  public setHostInput<K extends keyof H>(input: Partial<H>): void;\n  public setHostInput<K extends keyof H>(input: K, inputValue: H[K]): void;\n  public setHostInput(input: any, value?: any): void {\n    setProps(this.hostComponent, input, value, false);\n    this.detectChanges();\n  }\n}\n","import { NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { initialModule, ModuleMetadata } from '../base/initial-module';\nimport { SpectatorDirectiveOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialSpectatorDirectiveModule<D, H>(options: Required<SpectatorDirectiveOptions<D, H>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  if (options.declareDirective) {\n    moduleMetadata.declarations.push(options.directive);\n  }\n  moduleMetadata.declarations.push(options.host);\n\n  moduleMetadata.schemas = [options.shallow ? NO_ERRORS_SCHEMA : options.schemas || []];\n\n  return moduleMetadata;\n}\n","import { Provider, Type } from '@angular/core';\n\nimport { BaseSpectatorOptions, getDefaultBaseOptions } from '../base/options';\nimport { merge } from '../internals/merge';\nimport { HostComponent } from '../spectator-host/host-component';\nimport { OptionalsRequired } from '../types';\n\n/**\n * @publicApi\n */\nexport interface SpectatorDirectiveOptions<D, H> extends BaseSpectatorOptions {\n  directive: Type<D>;\n  shallow?: boolean;\n  detectChanges?: boolean;\n  host?: Type<H>;\n  template?: string;\n  directiveProviders?: Provider[];\n  directiveMocks?: Type<any>[];\n  declareDirective?: boolean;\n}\n\nconst defaultSpectatorRoutingOptions: OptionalsRequired<SpectatorDirectiveOptions<any, any>> = {\n  ...getDefaultBaseOptions(),\n  host: HostComponent,\n  template: '',\n  shallow: false,\n  detectChanges: true,\n  directiveProviders: [],\n  directiveMocks: [],\n  declareDirective: true\n};\n\n/**\n * @internal\n */\nexport function getSpectatorDirectiveDefaultOptions<D, H>(\n  overrides?: SpectatorDirectiveOptions<D, H>\n): Required<SpectatorDirectiveOptions<D, H>> {\n  return merge(defaultSpectatorRoutingOptions, overrides);\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\n\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\nimport { HostComponent } from '../spectator-host/host-component';\nimport { BaseSpectatorOverrides } from '../base/options';\nimport { nodeByDirective } from '../internals/node-by-directive';\n\nimport { initialSpectatorDirectiveModule } from './initial-module';\nimport { getSpectatorDirectiveDefaultOptions, SpectatorDirectiveOptions } from './options';\nimport { SpectatorDirective } from './spectator-directive';\nimport { overrideModules } from '../spectator/create-factory';\n\n/**\n * @publicApi\n */\nexport type SpectatorDirectiveFactory<D, H> = <HP>(\n  template: string,\n  overrides?: SpectatorDirectiveOverrides<D, H, HP>\n) => SpectatorDirective<D, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport type PresetSpectatorDirectiveFactory<D, H> = <HP>(\n  template?: string,\n  overrides?: SpectatorDirectiveOverrides<D, H, HP>\n) => SpectatorDirective<D, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport interface SpectatorDirectiveOverrides<D, H, HP> extends BaseSpectatorOverrides {\n  detectChanges?: boolean;\n  props?: Partial<D>;\n  hostProps?: HostComponent extends H ? HP : Partial<H>;\n  directiveProviders?: Provider[];\n}\n\n/**\n * @publicApi\n */\nexport function createDirectiveFactory<D, H = HostComponent>(\n  options: SpectatorDirectiveOptions<D, H> & { template: string }\n): PresetSpectatorDirectiveFactory<D, H>;\n/**\n * @publicApi\n */\nexport function createDirectiveFactory<D, H = HostComponent>(\n  typeOrOptions: Type<D> | SpectatorDirectiveOptions<D, H>\n): SpectatorDirectiveFactory<D, H>;\nexport function createDirectiveFactory<D, H = HostComponent>(\n  typeOrOptions: Type<D> | SpectatorDirectiveOptions<D, H>\n): SpectatorDirectiveFactory<D, H> {\n  const options = isType(typeOrOptions)\n    ? getSpectatorDirectiveDefaultOptions<D, H>({ directive: typeOrOptions })\n    : getSpectatorDirectiveDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialSpectatorDirectiveModule<D, H>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata);\n      overrideModules(options);\n    })\n  );\n\n  return <HP>(template?: string, overrides?: SpectatorDirectiveOverrides<D, H, HP>) => {\n    const defaults: SpectatorDirectiveOverrides<D, H, HP> = {\n      props: {},\n      hostProps: {} as any,\n      detectChanges: true,\n      providers: []\n    };\n    const { detectChanges, props, hostProps, providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    TestBed.overrideModule(BrowserDynamicTestingModule, {\n      set: {\n        entryComponents: moduleMetadata.entryComponents\n      }\n    }).overrideComponent(options.host, {\n      set: { template: template || options.template }\n    });\n\n    if (options.directiveProviders.length || options.directiveMocks.length) {\n      TestBed.overrideDirective(options.directive, {\n        set: { providers: [...options.directiveProviders, ...options.directiveMocks.map(p => options.mockProvider(p))] }\n      });\n    }\n\n    const spectator = createSpectatorDirective(options, props, hostProps);\n\n    if (options.detectChanges && detectChanges) {\n      spectator.detectChanges();\n    }\n\n    return spectator;\n  };\n}\n\nfunction createSpectatorDirective<D, H, HP>(\n  options: Required<SpectatorDirectiveOptions<D, H>>,\n  props?: Partial<D>,\n  hostProps?: HP\n): SpectatorDirective<D, H & HP> {\n  const hostFixture = TestBed.createComponent(options.host);\n  const debugElement = hostFixture.debugElement.query(By.directive(options.directive)) || hostFixture.debugElement;\n  const debugNode = hostFixture.debugElement.queryAllNodes(nodeByDirective(options.directive))[0];\n\n  if (!debugNode) {\n    throw new Error(`Cannot find directive ${options.directive} in host template 😔`);\n  }\n\n  const hostComponent = setProps(hostFixture.componentInstance, hostProps);\n  const directive = setProps(debugNode.injector.get(options.directive), props);\n\n  return new SpectatorDirective(hostComponent, hostFixture, hostFixture.debugElement, directive, debugElement.nativeElement);\n}\n","import { BaseSpectator } from '../base/base-spectator';\n\n/**\n * @publicApi\n */\nexport class SpectatorService<S> extends BaseSpectator {\n  constructor(public service: S) {\n    super();\n  }\n}\n","import { initialModule, ModuleMetadata } from '../base/initial-module';\n\nimport { SpectatorServiceOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialServiceModule<S>(options: Required<SpectatorServiceOptions<S>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  moduleMetadata.providers.push(options.service);\n\n  return moduleMetadata;\n}\n","import { Type } from '@angular/core';\n\nimport { getDefaultBaseOptions, BaseSpectatorOptions } from '../base/options';\nimport { merge } from '../internals/merge';\nimport { OptionalsRequired } from '../types';\n\nexport interface SpectatorServiceOptions<S = any> extends BaseSpectatorOptions {\n  service: Type<S>;\n}\n\nconst defaultServiceOptions: OptionalsRequired<SpectatorServiceOptions> = {\n  ...getDefaultBaseOptions()\n};\n\n/**\n * @internal\n */\nexport function getDefaultServiceOptions<S>(overrides: SpectatorServiceOptions<S>): Required<SpectatorServiceOptions<S>> {\n  return merge(defaultServiceOptions, overrides) as Required<SpectatorServiceOptions<S>>;\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, TestBedStatic } from '@angular/core/testing';\n\nimport { BaseSpectatorOverrides } from '../base/options';\nimport { isType, doesServiceImplementsOnDestroy } from '../types';\n\nimport { initialServiceModule } from './initial-module';\nimport { getDefaultServiceOptions, SpectatorServiceOptions } from './options';\nimport { SpectatorService } from './spectator-service';\nimport { overrideModules } from '../spectator/create-factory';\n\n/**\n * @publicApi\n */\nexport type SpectatorServiceFactory<S> = (overrides?: SpectatorServiceOverrides<S>) => SpectatorService<S>;\n\n/**\n * @publicApi\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface SpectatorServiceOverrides<S> extends BaseSpectatorOverrides {}\n\n/**\n * @publicApi\n */\nexport function createServiceFactory<S>(typeOrOptions: Type<S> | SpectatorServiceOptions<S>): SpectatorServiceFactory<S> {\n  const service = isType(typeOrOptions) ? typeOrOptions : typeOrOptions.service;\n  const options = isType(typeOrOptions) ? getDefaultServiceOptions<S>({ service }) : getDefaultServiceOptions(typeOrOptions);\n\n  const moduleMetadata = initialServiceModule(options);\n\n  beforeEach(() => {\n    TestBed.configureTestingModule(moduleMetadata);\n    overrideModules(options);\n  });\n\n  afterEach(() => {\n    const testedService = (<any>TestBed).inject\n      ? (<{ inject<T>(token: Type<T>, notFoundValue?: T): T } & TestBedStatic>TestBed).inject<S>(service)\n      : TestBed.get(service);\n\n    if (doesServiceImplementsOnDestroy(testedService)) {\n      // tslint:disable-next-line:no-life-cycle-call\n      testedService.ngOnDestroy();\n    }\n  });\n\n  return (overrides?: SpectatorServiceOverrides<S>) => {\n    const defaults: SpectatorServiceOverrides<S> = { providers: [] };\n    const { providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    return new SpectatorService<S>(TestBed.inject ? TestBed.inject(service) : TestBed.get(service));\n  };\n}\n","import { Router, Event } from '@angular/router';\n\nexport abstract class RouterStub extends Router {\n  public abstract emitRouterEvent(event: Event): void;\n}\n\nexport function isRouterStub(router: Router): router is RouterStub {\n  return 'emitRouterEvent' in router;\n}\n","import { DebugElement } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { Event, Router, UrlSegment } from '@angular/router';\n\nimport { Spectator } from '../spectator/spectator';\n\nimport { ActivatedRouteStub } from './activated-route-stub';\nimport { RouteOptions } from './route-options';\nimport { isRouterStub } from './router-stub';\n\n/**\n * @publicApi\n */\nexport class SpectatorRouting<C> extends Spectator<C> {\n  constructor(\n    fixture: ComponentFixture<any>,\n    debugElement: DebugElement,\n    instance: C,\n    public readonly router: Router,\n    public readonly activatedRouteStub?: ActivatedRouteStub\n  ) {\n    super(fixture, debugElement, instance, debugElement.nativeElement);\n  }\n\n  /**\n   * Simulates a route navigation by updating the Params, QueryParams and Data observable streams.\n   */\n  public triggerNavigation(options?: RouteOptions): void {\n    if (!this.checkStubPresent()) {\n      return;\n    }\n\n    if (options && options.params) {\n      this.activatedRouteStub.setParams(options.params);\n    }\n\n    if (options && options.queryParams) {\n      this.activatedRouteStub.setQueryParams(options.queryParams);\n    }\n\n    if (options && options.data) {\n      this.activatedRouteStub.setAllData(options.data);\n    }\n\n    if (options && options.fragment) {\n      this.activatedRouteStub.setFragment(options.fragment);\n    }\n\n    this.triggerNavigationAndUpdate();\n  }\n\n  /**\n   * Updates the route params and triggers a route navigation.\n   */\n  public setRouteParam(name: string, value: string): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setParam(name, value);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Updates the route query params and triggers a route navigation.\n   */\n  public setRouteQueryParam(name: string, value: string): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setQueryParam(name, value);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Updates the route data and triggers a route navigation.\n   */\n  public setRouteData(name: string, value: string): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setData(name, value);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Updates the route fragment and triggers a route navigation.\n   */\n  public setRouteFragment(fragment: string | null): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setFragment(fragment);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Updates the route url and triggers a route navigation.\n   */\n  public setRouteUrl(url: UrlSegment[]): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setUrl(url);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Emits a router event\n   */\n  public emitRouterEvent(event: Event): void {\n    if (!isRouterStub(this.router)) {\n      // tslint:disable-next-line:no-console\n      console.warn(\n        'No stub for Router present. Set Spectator option \"stubsEnabled\" to true if you want to use this ' +\n          'helper, or use Router navigation to trigger events.'\n      );\n\n      return;\n    }\n\n    this.router.emitRouterEvent(event);\n  }\n\n  private triggerNavigationAndUpdate(): void {\n    this.activatedRouteStub!.triggerNavigation();\n    this.detectChanges();\n  }\n\n  private checkStubPresent(): this is { readonly activatedRouteStub: ActivatedRouteStub } {\n    if (!this.activatedRouteStub) {\n      // tslint:disable-next-line:no-console\n      console.warn(\n        'No stub for ActivatedRoute present. Set Spectator option \"stubsEnabled\" to true if you want to use this ' +\n          'helper, or use Router to trigger navigation.'\n      );\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { convertToParamMap, ActivatedRoute, ActivatedRouteSnapshot, Data, Params, ParamMap, UrlSegment } from '@angular/router';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { RouteOptions } from './route-options';\n\n/**\n * @publicApi\n *\n * Utility class for stubbing ActivatedRoute of @angular/router\n */\nexport class ActivatedRouteStub extends ActivatedRoute {\n  private testParams: Params = {};\n  private testQueryParams: Params = {};\n  private testData: Data = {};\n  private testFragment: string | null = null;\n  private testUrl: UrlSegment[] = [];\n  private testRoot: ActivatedRouteStub | null = null;\n  private testParent: ActivatedRouteStub | null = null;\n  private testFirstChild: ActivatedRouteStub | null = null;\n  private testChildren: ActivatedRouteStub[] | null = null;\n\n  private readonly paramsSubject = new ReplaySubject<Params>(1);\n  private readonly queryParamsSubject = new ReplaySubject<Params>(1);\n  private readonly dataSubject = new ReplaySubject<Data>(1);\n  private readonly fragmentSubject = new ReplaySubject<string | null>(1);\n  private readonly urlSubject = new ReplaySubject<UrlSegment[]>(1);\n\n  constructor(options?: RouteOptions) {\n    super();\n\n    if (options) {\n      this.testParams = options.params || {};\n      this.testQueryParams = options.queryParams || {};\n      this.testData = options.data || {};\n      this.testFragment = options.fragment || null;\n      this.testUrl = options.url || [];\n      this.testRoot = options.root || null;\n      this.testParent = options.parent || null;\n      this.testFirstChild = options.firstChild || null;\n      this.testChildren = options.children || null;\n    }\n\n    this.params = this.paramsSubject.asObservable();\n    this.queryParams = this.queryParamsSubject.asObservable();\n    this.data = this.dataSubject.asObservable();\n    this.fragment = this.fragmentSubject.asObservable() as Observable<string>;\n    this.url = this.urlSubject.asObservable() as Observable<UrlSegment[]>;\n\n    this.snapshot = this.buildSnapshot();\n\n    this.triggerNavigation();\n  }\n\n  public get paramMap(): Observable<ParamMap> {\n    return this.paramsSubject.asObservable().pipe(map(params => convertToParamMap(params)));\n  }\n\n  public snapshot: ActivatedRouteSnapshot;\n\n  public setParams(params: Params): void {\n    this.testParams = params;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setParam(name: string, value: string): void {\n    this.testParams = { ...this.testParams, [name]: value };\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setQueryParams(queryParams: Params): void {\n    this.testQueryParams = queryParams;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setQueryParam(name: string, value: string): void {\n    this.testQueryParams = { ...this.testQueryParams, [name]: value };\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setAllData(data: Data): void {\n    this.testData = data;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setData(name: string, value: string): void {\n    this.testData = { ...this.testData, [name]: value };\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setFragment(fragment: string | null): void {\n    this.testFragment = fragment;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setUrl(url: UrlSegment[]): void {\n    this.testUrl = url;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public get root(): ActivatedRouteStub {\n    return this.testRoot || this;\n  }\n\n  public get parent(): ActivatedRouteStub | null {\n    return this.testParent || null;\n  }\n\n  public get children(): ActivatedRouteStub[] {\n    return this.testChildren || [this];\n  }\n\n  public get firstChild(): ActivatedRouteStub | null {\n    return this.testFirstChild || null;\n  }\n\n  /**\n   * Simulates a route navigation by updating the Params, QueryParams and Data observable streams.\n   */\n  public triggerNavigation(): void {\n    this.paramsSubject.next(this.testParams);\n    this.queryParamsSubject.next(this.testQueryParams);\n    this.dataSubject.next(this.testData);\n    this.fragmentSubject.next(this.testFragment);\n    this.urlSubject.next(this.testUrl);\n  }\n\n  public toString(): string {\n    return 'activatedRouteStub';\n  }\n\n  private buildSnapshot(): ActivatedRouteSnapshot {\n    const snapshot = new ActivatedRouteSnapshot();\n\n    snapshot.params = this.testParams;\n    snapshot.queryParams = this.testQueryParams;\n    snapshot.data = this.testData;\n    snapshot.fragment = this.testFragment!;\n    snapshot.url = this.testUrl;\n\n    return snapshot;\n  }\n}\n","import { Directive, HostListener, Input, NgModule } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n// tslint:disable\n\n@Directive({\n  selector: '[routerLink]',\n  providers: [\n    {\n      provide: RouterLink,\n      useExisting: RouterLinkDirectiveStub\n    }\n  ]\n})\nexport class RouterLinkDirectiveStub {\n  @Input() routerLink: any;\n\n  navigatedTo: any = null;\n\n  @HostListener('click')\n  onClick(): boolean {\n    this.navigatedTo = this.routerLink;\n\n    return true;\n  }\n}\n\n/*\n  This is an unused module to resolve the ng build error:\n    'Cannot determine the module for class RouterLinkDirectiveStub'\n\n  Reference: https://github.com/angular/issues/13590\n*/\n@NgModule({\n  declarations: [RouterLinkDirectiveStub]\n})\nexport class RouterLinkDirectiveStubModule {}\n","import { ActivatedRoute, Event, Router } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { Subject } from 'rxjs';\n\nimport { ModuleMetadata } from '../base/initial-module';\nimport { initialSpectatorModule } from '../spectator/initial-module';\n\nimport { ActivatedRouteStub } from './activated-route-stub';\nimport { SpectatorRoutingOptions } from './options';\nimport { RouterLinkDirectiveStub } from './router-link-stub';\nimport { RouterStub } from './router-stub';\n\n/**\n * @internal\n */\nexport function initialRoutingModule<S>(options: Required<SpectatorRoutingOptions<S>>): ModuleMetadata {\n  const moduleMetadata = initialSpectatorModule(options);\n\n  if (options.mockRouterLinks && options.stubsEnabled) {\n    moduleMetadata.declarations.push(RouterLinkDirectiveStub);\n  }\n\n  if (options.stubsEnabled) {\n    moduleMetadata.providers.push(\n      options.mockProvider(RouterStub, {\n        events: new Subject<Event>(),\n        emitRouterEvent(event: Event): void {\n          this.events.next(event);\n        }\n      }),\n      {\n        provide: Router,\n        useExisting: RouterStub\n      }\n    );\n\n    moduleMetadata.providers.push(\n      {\n        provide: ActivatedRouteStub,\n        useValue: new ActivatedRouteStub({\n          params: options.params,\n          queryParams: options.queryParams,\n          data: options.data\n        })\n      },\n      {\n        provide: ActivatedRoute,\n        useExisting: ActivatedRouteStub\n      }\n    );\n  } else {\n    moduleMetadata.imports.push(RouterTestingModule.withRoutes(options.routes));\n  }\n\n  return moduleMetadata;\n}\n","import { Routes } from '@angular/router';\n\nimport { merge } from '../internals/merge';\nimport { getSpectatorDefaultOptions, SpectatorOptions } from '../spectator/options';\nimport { OptionalsRequired } from '../types';\n\nimport { RouteOptions } from './route-options';\n\nexport type SpectatorRoutingOptions<C> = SpectatorOptions<C> &\n  RouteOptions & {\n    mockRouterLinks?: boolean;\n    stubsEnabled?: boolean;\n    routes?: Routes;\n  };\n\nconst defaultRoutingOptions: OptionalsRequired<SpectatorRoutingOptions<any>> = {\n  ...getSpectatorDefaultOptions(),\n  params: {},\n  queryParams: {},\n  data: {},\n  fragment: null,\n  mockRouterLinks: true,\n  stubsEnabled: true,\n  routes: [],\n  url: [],\n  root: null,\n  parent: null,\n  children: null,\n  firstChild: null\n};\n\n/**\n * @internal\n */\nexport function getRoutingDefaultOptions<S>(overrides: SpectatorRoutingOptions<S>): Required<SpectatorRoutingOptions<S>> {\n  return merge(defaultRoutingOptions, overrides);\n}\n","import { Provider, Type, NgZone } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { SpectatorOverrides, overrideComponentIfProviderOverridesSpecified, overrideModules } from '../spectator/create-factory';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\n\nimport { ActivatedRouteStub } from './activated-route-stub';\nimport { initialRoutingModule } from './initial-module';\nimport { getRoutingDefaultOptions, SpectatorRoutingOptions } from './options';\nimport { RouteOptions } from './route-options';\nimport { SpectatorRouting } from './spectator-routing';\nimport { SpyObject } from '../mock';\n\n/**\n * @publicApi\n */\nexport type SpectatorRoutingOverrides<C> = SpectatorOverrides<C> & RouteOptions;\n\n/**\n * @publicApi\n */\nexport type SpectatorRoutingFactory<C> = (options?: SpectatorRoutingOverrides<C>) => SpectatorRouting<C>;\n\n/**\n * @publicApi\n */\nexport function createRoutingFactory<C>(typeOrOptions: Type<C> | SpectatorRoutingOptions<C>): SpectatorRoutingFactory<C> {\n  const options = isType(typeOrOptions)\n    ? getRoutingDefaultOptions<C>({ component: typeOrOptions })\n    : getRoutingDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialRoutingModule<C>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata);\n\n      overrideModules(options);\n\n      overrideComponentIfProviderOverridesSpecified(options);\n\n      TestBed.compileComponents();\n    })\n  );\n\n  return (overrides?: SpectatorRoutingOverrides<C>) => {\n    const defaults: SpectatorRoutingOverrides<C> = {\n      props: {},\n      detectChanges: true,\n      providers: []\n    };\n\n    const { detectChanges, props, providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    const { params, queryParams, data, fragment, url, root, parent, children, firstChild } = { ...options, ...overrides };\n\n    TestBed.overrideProvider(ActivatedRoute, {\n      useValue: new ActivatedRouteStub({ params, queryParams, data, fragment, url, root, parent, children, firstChild })\n    });\n    const ngZone = (<any>TestBed).inject ? TestBed.inject(NgZone) : TestBed.get(NgZone);\n\n    return ngZone.run(() => {\n      const spectator = createSpectatorRouting(options, props);\n\n      spectator.router.initialNavigation();\n\n      if (options.detectChanges && detectChanges) {\n        spectator.detectChanges();\n      }\n\n      return spectator;\n    });\n  };\n}\n\nfunction createSpectatorRouting<C>(options: Required<SpectatorRoutingOptions<C>>, props?: Partial<C>): SpectatorRouting<C> {\n  const fixture = TestBed.createComponent(options.component);\n  const debugElement = fixture.debugElement;\n\n  const component = setProps(fixture.componentInstance, props);\n\n  /**\n   * Back compatibility, angular under 9 version doesnt have a inject function\n   */\n  if (!TestBed.inject) {\n    return new SpectatorRouting(fixture, debugElement, component, TestBed.get(Router), TestBed.get(ActivatedRoute));\n  }\n\n  return new SpectatorRouting(\n    fixture,\n    debugElement,\n    component,\n    TestBed.inject(Router),\n    TestBed.inject(ActivatedRoute) as SpyObject<ActivatedRouteStub>\n  );\n}\n","import { HttpClient } from '@angular/common/http';\nimport { HttpTestingController, TestRequest } from '@angular/common/http/testing';\n\nimport { BaseSpectator } from '../base/base-spectator';\n\n/**\n * @publicApi\n */\nexport enum HttpMethod {\n  GET = 'GET',\n  POST = 'POST',\n  DELETE = 'DELETE',\n  PUT = 'PUT',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  JSONP = 'JSONP',\n  OPTIONS = 'OPTIONS'\n}\n\nexport interface HttpExpect {\n  url: string;\n  method: HttpMethod;\n}\n\n/**\n * @publicApi\n */\nexport class SpectatorHttp<S> extends BaseSpectator {\n  constructor(public service: S, public httpClient: HttpClient, public controller: HttpTestingController) {\n    super();\n\n    // small workaround to prevent issues if destructuring SpectatorHttp, which was common in Spectator 3\n    // remove in v5?\n    this.expectOne = this.expectOne.bind(this);\n    this.expectConcurrent = this.expectConcurrent.bind(this);\n  }\n\n  public expectOne(url: string, method: HttpMethod): TestRequest {\n    expect(true).toBe(true); // workaround to avoid `Spec has no expectations` https://github.com/NetanelBasal/spectator/issues/75\n\n    const req = this.controller.expectOne({\n      url,\n      method\n    });\n\n    // assert that there are no outstanding requests.\n    this.controller.verify();\n\n    return req;\n  }\n\n  public expectConcurrent(expectations: HttpExpect[]): TestRequest[] {\n    const requests = expectations.map((expectation: HttpExpect) => {\n      return this.controller.expectOne({\n        url: expectation.url,\n        method: expectation.method\n      });\n    });\n\n    this.controller.verify();\n\n    return requests;\n  }\n\n  public flushAll(requests: TestRequest[], args: any[]): void {\n    requests.forEach((request: TestRequest, idx: number) => {\n      request.flush(args[idx]);\n    });\n  }\n}\n","import { HttpClientTestingModule } from '@angular/common/http/testing';\n\nimport { initialModule, ModuleMetadata } from '../base/initial-module';\n\nimport { SpectatorHttpOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialHttpModule<S>(options: Required<SpectatorHttpOptions<S>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  moduleMetadata.providers.push(options.service);\n  moduleMetadata.imports.push(HttpClientTestingModule);\n\n  return moduleMetadata;\n}\n","import { Type } from '@angular/core';\n\nimport { getDefaultBaseOptions, BaseSpectatorOptions } from '../base/options';\nimport { merge } from '../internals/merge';\nimport { OptionalsRequired } from '../types';\n\nexport interface SpectatorHttpOptions<S> extends BaseSpectatorOptions {\n  service: Type<S>;\n}\n\nconst defaultHttpOptions: OptionalsRequired<SpectatorHttpOptions<any>> = {\n  ...getDefaultBaseOptions()\n};\n\n/**\n * @internal\n */\nexport function getDefaultHttpOptions<S>(overrides: SpectatorHttpOptions<S>): Required<SpectatorHttpOptions<S>> {\n  return merge(defaultHttpOptions, overrides);\n}\n","import { HttpClient } from '@angular/common/http';\nimport { HttpTestingController } from '@angular/common/http/testing';\nimport { Provider, Type } from '@angular/core';\nimport { TestBed } from '@angular/core/testing';\n\nimport { BaseSpectatorOverrides } from '../base/options';\nimport { isType } from '../types';\n\nimport { initialHttpModule } from './initial-module';\nimport { getDefaultHttpOptions, SpectatorHttpOptions } from './options';\nimport { SpectatorHttp } from './spectator-http';\nimport { overrideModules } from '../spectator/create-factory';\n\n/**\n * @publicApi\n */\nexport type SpectatorHttpFactory<S> = (overrides?: CreateHttpOverrides<S>) => SpectatorHttp<S>;\n\n/**\n * @publicApi\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface CreateHttpOverrides<S> extends BaseSpectatorOverrides {}\n\n/**\n * @publicApi\n */\nexport function createHttpFactory<S>(typeOrOptions: Type<S> | SpectatorHttpOptions<S>): SpectatorHttpFactory<S> {\n  const service = isType(typeOrOptions) ? typeOrOptions : typeOrOptions.service;\n  const options = isType(typeOrOptions) ? getDefaultHttpOptions<S>({ service }) : getDefaultHttpOptions(typeOrOptions);\n  const moduleMetadata = initialHttpModule(options);\n\n  beforeEach(() => {\n    TestBed.configureTestingModule(moduleMetadata);\n    overrideModules(options);\n  });\n\n  afterEach(() => {\n    if (TestBed.inject) {\n      TestBed.inject(HttpTestingController).verify();\n    } else {\n      TestBed.get(HttpTestingController).verify();\n    }\n  });\n\n  return (overrides?: CreateHttpOverrides<S>) => {\n    const defaults: CreateHttpOverrides<S> = { providers: [] };\n    const { providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    /**\n     * Back compatibility, angular under 9 version doesnt have a inject function\n     */\n    if (!TestBed.inject) {\n      return new SpectatorHttp<S>(TestBed.get(service), TestBed.get(HttpClient), TestBed.get(HttpTestingController));\n    }\n\n    return new SpectatorHttp<S>(TestBed.inject(service), TestBed.inject(HttpClient), TestBed.inject(HttpTestingController));\n  };\n}\n","import { DebugElement } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\n\nimport { setProps } from '../internals/query';\nimport { BaseSpectator } from '../base/base-spectator';\nimport { HostComponent } from '../spectator-host/host-component';\n\n/**\n * @publicApi\n */\nexport class SpectatorPipe<P, H = HostComponent> extends BaseSpectator {\n  constructor(public hostComponent: H, public fixture: ComponentFixture<any>, public debugElement: DebugElement, public element: Element) {\n    super();\n  }\n\n  public detectChanges(): void {\n    this.fixture.detectChanges();\n  }\n\n  public setHostInput<K extends keyof H>(input: Partial<H>): void;\n  public setHostInput<K extends keyof H>(input: K, inputValue: H[K]): void;\n  public setHostInput(input: any, value?: any): void {\n    setProps(this.hostComponent, input, value, false);\n    this.detectChanges();\n  }\n}\n","import { initialModule, ModuleMetadata } from '../base/initial-module';\n\nimport { SpectatorPipeOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialSpectatorPipeModule<D, H>(options: Required<SpectatorPipeOptions<D, H>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  moduleMetadata.declarations.push(options.pipe);\n  moduleMetadata.declarations.push(options.host);\n\n  return moduleMetadata;\n}\n","import { Type } from '@angular/core';\n\nimport { merge } from '../internals/merge';\nimport { OptionalsRequired } from '../types';\nimport { BaseSpectatorOptions, getDefaultBaseOptions } from '../base/options';\nimport { HostComponent } from '../spectator-host/host-component';\n\n/**\n * @publicApi\n */\nexport interface SpectatorPipeOptions<P, H> extends BaseSpectatorOptions {\n  pipe: Type<P>;\n  host?: Type<H>;\n  detectChanges?: boolean;\n  template?: string;\n}\n\nconst defaultSpectatorPipeOptions: OptionalsRequired<SpectatorPipeOptions<any, any>> = {\n  ...getDefaultBaseOptions(),\n  host: HostComponent,\n  detectChanges: true,\n  template: ''\n};\n\n/**\n * @internal\n */\nexport function getSpectatorPipeDefaultOptions<P, H>(overrides?: SpectatorPipeOptions<P, H>): Required<SpectatorPipeOptions<P, H>> {\n  return merge(defaultSpectatorPipeOptions, overrides);\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\n\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { BaseSpectatorOverrides } from '../base/options';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\nimport { HostComponent } from '../spectator-host/host-component';\n\nimport { initialSpectatorPipeModule } from './initial-module';\nimport { getSpectatorPipeDefaultOptions, SpectatorPipeOptions } from './options';\nimport { SpectatorPipe } from './spectator-pipe';\nimport { overrideModules } from '../spectator/create-factory';\n\n/**\n * @publicApi\n */\nexport type SpectatorPipeFactory<P, H> = <HP>(\n  templateOrOverrides?: string | SpectatorPipeOverrides<H, HP>,\n  overrides?: SpectatorPipeOverrides<H, HP>\n) => SpectatorPipe<P, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport interface SpectatorPipeOverrides<H, HP> extends BaseSpectatorOverrides {\n  detectChanges?: boolean;\n  hostProps?: HostComponent extends H ? HP : Partial<H>;\n}\n\n/**\n * @publicApi\n */\nexport function createPipeFactory<P, H = HostComponent>(typeOrOptions: Type<P> | SpectatorPipeOptions<P, H>): SpectatorPipeFactory<P, H> {\n  const options = isType(typeOrOptions)\n    ? getSpectatorPipeDefaultOptions<P, H>({ pipe: typeOrOptions })\n    : getSpectatorPipeDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialSpectatorPipeModule<P, H>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata);\n      overrideModules(options);\n    })\n  );\n\n  return <HP>(templateOrOverrides?: string | SpectatorPipeOverrides<H, HP>, overrides?: SpectatorPipeOverrides<H, HP>) => {\n    const defaults: SpectatorPipeOverrides<H, HP> = {\n      hostProps: {} as any,\n      detectChanges: true,\n      providers: []\n    };\n    const resolvedOverrides = typeof templateOrOverrides === 'object' ? templateOrOverrides : overrides;\n    const { detectChanges, hostProps, providers } = { ...defaults, ...resolvedOverrides };\n    const template = typeof templateOrOverrides === 'string' ? templateOrOverrides : options.template;\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    if (template) {\n      TestBed.overrideModule(BrowserDynamicTestingModule, {\n        set: {\n          entryComponents: moduleMetadata.entryComponents\n        }\n      }).overrideComponent(options.host, {\n        set: { template }\n      });\n    }\n\n    const spectator = createSpectatorPipe(options, hostProps);\n\n    if (options.detectChanges && detectChanges) {\n      spectator.detectChanges();\n    }\n\n    return spectator;\n  };\n}\n\nfunction createSpectatorPipe<P, H, HP>(options: Required<SpectatorPipeOptions<P, H>>, hostProps?: HP): SpectatorPipe<P, H & HP> {\n  const hostFixture = TestBed.createComponent(options.host);\n  const debugElement = hostFixture.debugElement;\n\n  const hostComponent = setProps(hostFixture.componentInstance, hostProps);\n\n  return new SpectatorPipe(hostComponent, hostFixture, hostFixture.debugElement, debugElement.nativeElement);\n}\n","import { Component, EventEmitter, Directive } from '@angular/core';\n\nexport function MockComponentDeprecated(options: Component): Component {\n  const metadata: Component = {\n    selector: options.selector,\n    template: options.template || '',\n    inputs: options.inputs,\n    outputs: options.outputs || [],\n    exportAs: options.exportAs || ''\n  };\n\n  class Mock {}\n\n  (metadata as any).outputs.forEach(method => {\n    Mock.prototype[method] = new EventEmitter<any>();\n  });\n\n  return Component(metadata)(Mock as any);\n}\n\nexport function MockDirectiveDeprecated(options: Directive): Directive {\n  const metadata: Directive = {\n    selector: options.selector,\n    inputs: options.inputs,\n    outputs: options.outputs || [],\n    exportAs: options.exportAs || ''\n  };\n\n  class Mock {}\n\n  (metadata as any).outputs.forEach(method => {\n    Mock.prototype[method] = new EventEmitter<any>();\n  });\n\n  return Directive(metadata)(Mock as any);\n}\n","/// <reference path=\"./lib/matchers-types.ts\" />\nexport { Spectator } from './lib/spectator/spectator';\nexport { SpectatorOptions } from './lib/spectator/options';\nexport { createComponentFactory, SpectatorFactory, SpectatorOverrides } from './lib/spectator/create-factory';\nexport { initialSpectatorModule } from './lib/spectator/initial-module';\n\nexport { SpectatorHost } from './lib/spectator-host/spectator-host';\nexport { SpectatorHostOptions } from './lib/spectator-host/options';\nexport { createHostFactory, SpectatorHostFactory, SpectatorHostOverrides } from './lib/spectator-host/create-factory';\nexport { initialSpectatorWithHostModule } from './lib/spectator-host/initial-module';\nexport { HostComponent, HostModule } from './lib/spectator-host/host-component';\n\nexport { SpectatorDirective } from './lib/spectator-directive/spectator-directive';\nexport { SpectatorDirectiveOptions } from './lib/spectator-directive/options';\nexport { createDirectiveFactory, SpectatorDirectiveFactory, SpectatorDirectiveOverrides } from './lib/spectator-directive/create-factory';\nexport { initialSpectatorDirectiveModule } from './lib/spectator-directive/initial-module';\n\nexport { SpectatorService } from './lib/spectator-service/spectator-service';\nexport { SpectatorServiceOptions } from './lib/spectator-service/options';\nexport { SpectatorServiceFactory, createServiceFactory, SpectatorServiceOverrides } from './lib/spectator-service/create-factory';\n\nexport { SpectatorRouting } from './lib/spectator-routing/spectator-routing';\nexport { SpectatorRoutingOptions } from './lib/spectator-routing/options';\nexport { SpectatorRoutingFactory, createRoutingFactory, SpectatorRoutingOverrides } from './lib/spectator-routing/create-factory';\nexport { ActivatedRouteStub } from './lib/spectator-routing/activated-route-stub';\n\nexport { SpectatorHttp, HttpMethod } from './lib/spectator-http/spectator-http';\nexport { SpectatorHttpOptions } from './lib/spectator-http/options';\nexport { SpectatorHttpFactory, createHttpFactory, CreateHttpOverrides } from './lib/spectator-http/create-factory';\n\nexport { SpectatorPipe } from './lib/spectator-pipe/spectator-pipe';\nexport { SpectatorPipeOptions } from './lib/spectator-pipe/options';\nexport { createPipeFactory, SpectatorPipeFactory, SpectatorPipeOverrides } from './lib/spectator-pipe/create-factory';\nexport { initialSpectatorPipeModule } from './lib/spectator-pipe/initial-module';\n\nexport * from './lib/dom-selectors';\nexport * from './lib/matchers';\nexport * from './lib/mock';\nexport * from './lib/token';\nexport * from './lib/types';\nexport { typeInElement } from './lib/type-in-element';\nexport { defineGlobalsInjections } from './lib/globals-injections';\nexport { dispatchEvent, dispatchFakeEvent, dispatchKeyboardEvent, dispatchMouseEvent, dispatchTouchEvent } from './lib/dispatch-events';\nexport { createFakeEvent, createKeyboardEvent, createMouseEvent, createTouchEvent } from './lib/event-creators';\nexport { MockComponentDeprecated, MockDirectiveDeprecated } from './lib/deprecated';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {BaseSpectator as ɵb} from './lib/base/base-spectator';\nexport {DomSpectator as ɵa} from './lib/base/dom-spectator';\nexport {RouteOptions as ɵc} from './lib/spectator-routing/route-options';"],"names":["DOMQueries"],"mappings":"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"}